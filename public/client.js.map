{"mappings":"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","sources":["<anon>","node_modules/gun/gun.js","src/client.mjs","node_modules/gun/browser.js","src/crypto.mjs","src/routes.app.mjs","src/pages/HomePage.mjs","src/reactive.mjs","src/router.mjs","node_modules/url-router/dist/index.js","src/jsx.mjs","src/jsx-print.mjs","src/jsx-dom.mjs","src/components/HtmlPage.mjs"],"sourcesContent":["(() => {\n\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire3550\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire3550\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"bn4Dc\", function(module, exports) {\n(function() {\n    /* UNBUILD */ function USE(arg, req) {\n        return req ? require(arg) : arg.slice ? USE[R(arg)] : function(mod, path) {\n            arg(mod = {\n                exports: {}\n            });\n            USE[R(path)] = mod.exports;\n        };\n        function R(p) {\n            return p.split(\"/\").slice(-1).toString().replace(\".js\", \"\");\n        }\n    }\n    var MODULE = module;\n    USE(function(module1) {\n        // Shim for generic javascript utilities.\n        String.random = function(l, c) {\n            var s = \"\";\n            l = l || 24; // you are not going to make a 0 length random number, so no need to check type\n            c = c || \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXZabcdefghijklmnopqrstuvwxyz\";\n            while(l-- > 0)s += c.charAt(Math.floor(Math.random() * c.length));\n            return s;\n        };\n        String.match = function(t, o) {\n            var tmp, u;\n            if (\"string\" !== typeof t) return false;\n            if (\"string\" == typeof o) o = {\n                \"=\": o\n            };\n            o = o || {};\n            tmp = o[\"=\"] || o[\"*\"] || o[\">\"] || o[\"<\"];\n            if (t === tmp) return true;\n            if (u !== o[\"=\"]) return false;\n            tmp = o[\"*\"] || o[\">\"];\n            if (t.slice(0, (tmp || \"\").length) === tmp) return true;\n            if (u !== o[\"*\"]) return false;\n            if (u !== o[\">\"] && u !== o[\"<\"]) return t >= o[\">\"] && t <= o[\"<\"] ? true : false;\n            if (u !== o[\">\"] && t >= o[\">\"]) return true;\n            if (u !== o[\"<\"] && t <= o[\"<\"]) return true;\n            return false;\n        };\n        String.hash = function(s, c) {\n            if (typeof s !== \"string\") return;\n            c = c || 0; // CPU schedule hashing by\n            if (!s.length) return c;\n            for(var i = 0, l = s.length, n; i < l; ++i){\n                n = s.charCodeAt(i);\n                c = (c << 5) - c + n;\n                c |= 0;\n            }\n            return c;\n        };\n        var has = Object.prototype.hasOwnProperty;\n        Object.plain = function(o) {\n            return o ? o instanceof Object && o.constructor === Object || Object.prototype.toString.call(o).match(/^\\[object (\\w+)\\]$/)[1] === \"Object\" : false;\n        };\n        Object.empty = function(o, n) {\n            for(var k in o){\n                if (has.call(o, k) && (!n || -1 == n.indexOf(k))) return false;\n            }\n            return true;\n        };\n        Object.keys = Object.keys || function(o) {\n            var l = [];\n            for(var k in o)if (has.call(o, k)) l.push(k);\n            return l;\n        };\n        (function() {\n            var u, sT = setTimeout, l = 0, c = 0, sI = typeof setImmediate !== \"\" + u && setImmediate || function(c, f) {\n                if (typeof MessageChannel == \"\" + u) return sT;\n                (c = new MessageChannel()).port1.onmessage = function(e) {\n                    \"\" == e.data && f();\n                };\n                return function(q) {\n                    f = q;\n                    c.port2.postMessage(\"\");\n                };\n            }(), check = sT.check = sT.check || typeof performance !== \"\" + u && performance || {\n                now: function() {\n                    return +new Date;\n                }\n            };\n            sT.hold = sT.hold || 9; // half a frame benchmarks faster than < 1ms?\n            sT.poll = sT.poll || function(f) {\n                if (sT.hold >= check.now() - l && c++ < 3333) {\n                    f();\n                    return;\n                }\n                sI(function() {\n                    l = check.now();\n                    f();\n                }, c = 0);\n            };\n        })();\n        (function() {\n            var sT = setTimeout, t = sT.turn = sT.turn || function(f) {\n                1 == s.push(f) && p(T);\n            }, s = t.s = [], p = sT.poll, i = 0, f, T = function() {\n                if (f = s[i++]) f();\n                if (i == s.length || 99 == i) {\n                    s = t.s = s.slice(i);\n                    i = 0;\n                }\n                if (s.length) p(T);\n            };\n        })();\n        (function() {\n            var u, sT = setTimeout, T = sT.turn;\n            (sT.each = sT.each || function(l, f, e, S) {\n                S = S || 9;\n                (function t(s, L, r) {\n                    if (L = (s = (l || []).splice(0, S)).length) {\n                        for(var i = 0; i < L; i++){\n                            if (u !== (r = f(s[i]))) break;\n                        }\n                        if (u === r) {\n                            T(t);\n                            return;\n                        }\n                    }\n                    e && e(r);\n                })();\n            })();\n        })();\n    })(USE, \"./shim\");\n    USE(function(module1) {\n        // On event emitter generic javascript utility.\n        module1.exports = function onto(tag, arg, as) {\n            if (!tag) return {\n                to: onto\n            };\n            var u, f = \"function\" == typeof arg, tag = (this.tag || (this.tag = {}))[tag] || f && (this.tag[tag] = {\n                tag: tag,\n                to: onto._ = {\n                    next: function(arg) {\n                        var tmp;\n                        if (tmp = this.to) tmp.next(arg);\n                    }\n                }\n            });\n            if (f) {\n                var be = {\n                    off: onto.off || (onto.off = function() {\n                        if (this.next === onto._.next) return !0;\n                        if (this === this.the.last) this.the.last = this.back;\n                        this.to.back = this.back;\n                        this.next = onto._.next;\n                        this.back.to = this.to;\n                        if (this.the.last === this.the) delete this.on.tag[this.the.tag];\n                    }),\n                    to: onto._,\n                    next: arg,\n                    the: tag,\n                    on: this,\n                    as: as\n                };\n                (be.back = tag.last || tag).to = be;\n                return tag.last = be;\n            }\n            if ((tag = tag.to) && u !== arg) tag.next(arg);\n            return tag;\n        };\n    })(USE, \"./onto\");\n    USE(function(module1) {\n        // Valid values are a subset of JSON: null, binary, number (!Infinity), text,\n        // or a soul relation. Arrays need special algorithms to handle concurrency,\n        // so they are not supported directly. Use an extension that supports them if\n        // needed but research their problems first.\n        module1.exports = function(v) {\n            // \"deletes\", nulling out keys.\n            return v === null || \"string\" === typeof v || \"boolean\" === typeof v || // we want +/- Infinity to be, but JSON does not support it, sad face.\n            // can you guess what v === v checks for? ;)\n            \"number\" === typeof v && v != Infinity && v != -Infinity && v === v || !!v && \"string\" == typeof v[\"#\"] && Object.keys(v).length === 1 && v[\"#\"];\n        };\n    })(USE, \"./valid\");\n    USE(function(module1) {\n        USE(\"./shim\");\n        function State() {\n            var t = +new Date;\n            if (last < t) return N = 0, last = t + State.drift;\n            return last = t + (N += 1) / D + State.drift;\n        }\n        State.drift = 0;\n        var NI = -Infinity, N = 0, D = 999, last = NI, u; // WARNING! In the future, on machines that are D times faster than 2016AD machines, you will want to increase D by another several orders of magnitude so the processing speed never out paces the decimal resolution (increasing an integer effects the state accuracy).\n        State.is = function(n, k, o) {\n            var tmp = k && n && n._ && n._[\">\"] || o;\n            if (!tmp) return;\n            return \"number\" == typeof (tmp = tmp[k]) ? tmp : NI;\n        };\n        State.ify = function(n, k, s, v, soul) {\n            (n = n || {})._ = n._ || {}; // safety check or init.\n            if (soul) n._[\"#\"] = soul;\n             // set a soul if specified.\n            var tmp = n._[\">\"] || (n._[\">\"] = {}); // grab the states data.\n            if (u !== k && k !== \"_\") {\n                if (\"number\" == typeof s) tmp[k] = s;\n                 // add the valid state.\n                if (u !== v) n[k] = v;\n                 // Note: Not its job to check for valid values!\n            }\n            return n;\n        };\n        module1.exports = State;\n    })(USE, \"./state\");\n    USE(function(module1) {\n        USE(\"./shim\");\n        function Dup(opt) {\n            var dup = {\n                s: {}\n            }, s = dup.s;\n            opt = opt || {\n                max: 999,\n                age: 9000\n            }; //*/ 1000 * 9 * 3};\n            dup.check = function(id) {\n                if (!s[id]) return false;\n                return dt(id);\n            };\n            var dt = dup.track = function(id) {\n                var it = s[id] || (s[id] = {});\n                it.was = dup.now = +new Date;\n                if (!dup.to) dup.to = setTimeout(dup.drop, opt.age + 9);\n                if (dt.ed) dt.ed(id);\n                return it;\n            };\n            dup.drop = function(age) {\n                dup.to = null;\n                dup.now = +new Date;\n                var l = Object.keys(s);\n                console.STAT && console.STAT(dup.now, +new Date - dup.now, \"dup drop keys\"); // prev ~20% CPU 7% RAM 300MB // now ~25% CPU 7% RAM 500MB\n                setTimeout.each(l, function(id) {\n                    var it = s[id]; // TODO: .keys( is slow?\n                    if (it && (age || opt.age) > dup.now - it.was) return;\n                    delete s[id];\n                }, 0, 99);\n            };\n            return dup;\n        }\n        module1.exports = Dup;\n    })(USE, \"./dup\");\n    USE(function(module1) {\n        // request / response module, for asking and acking messages.\n        USE(\"./onto\"); // depends upon onto!\n        module1.exports = function ask(cb, as) {\n            if (!this.on) return;\n            var lack = (this.opt || {}).lack || 9000;\n            if (!(\"function\" == typeof cb)) {\n                if (!cb) return;\n                var id = cb[\"#\"] || cb, tmp = (this.tag || \"\")[id];\n                if (!tmp) return;\n                if (as) {\n                    tmp = this.on(id, as);\n                    clearTimeout(tmp.err);\n                    tmp.err = setTimeout(function() {\n                        tmp.off();\n                    }, lack);\n                }\n                return true;\n            }\n            var id = as && as[\"#\"] || random(9);\n            if (!cb) return id;\n            var to = this.on(id, cb, as);\n            to.err = to.err || setTimeout(function() {\n                to.off();\n                to.next({\n                    err: \"Error: No ACK yet.\",\n                    lack: true\n                });\n            }, lack);\n            return id;\n        };\n        var random = String.random || function() {\n            return Math.random().toString(36).slice(2);\n        };\n    })(USE, \"./ask\");\n    USE(function(module1) {\n        function Gun1(o) {\n            if (o instanceof Gun1) return (this._ = {\n                $: this\n            }).$;\n            if (!(this instanceof Gun1)) return new Gun1(o);\n            return Gun1.create(this._ = {\n                $: this,\n                opt: o\n            });\n        }\n        Gun1.is = function($) {\n            return $ instanceof Gun1 || $ && $._ && $ === $._.$ || false;\n        };\n        Gun1.version = 0.2020;\n        Gun1.chain = Gun1.prototype;\n        Gun1.chain.toJSON = function() {};\n        USE(\"./shim\");\n        Gun1.valid = USE(\"./valid\");\n        Gun1.state = USE(\"./state\");\n        Gun1.on = USE(\"./onto\");\n        Gun1.dup = USE(\"./dup\");\n        Gun1.ask = USE(\"./ask\");\n        (function() {\n            Gun1.create = function(at) {\n                at.root = at.root || at;\n                at.graph = at.graph || {};\n                at.on = at.on || Gun1.on;\n                at.ask = at.ask || Gun1.ask;\n                at.dup = at.dup || Gun1.dup();\n                var gun = at.$.opt(at.opt);\n                if (!at.once) {\n                    at.on(\"in\", universe, at);\n                    at.on(\"out\", universe, at);\n                    at.on(\"put\", map, at);\n                    Gun1.on(\"create\", at);\n                    at.on(\"create\", at);\n                }\n                at.once = 1;\n                return gun;\n            };\n            function universe(msg) {\n                // TODO: BUG! msg.out = null being set!\n                //if(!F){ var eve = this; setTimeout(function(){ universe.call(eve, msg,1) },Math.random() * 100);return; } // ADD F TO PARAMS!\n                if (!msg) return;\n                if (msg.out === universe) {\n                    this.to.next(msg);\n                    return;\n                }\n                var eve = this, as = eve.as, at = as.at || as, gun = at.$, dup = at.dup, tmp, DBG = msg.DBG;\n                (tmp = msg[\"#\"]) || (tmp = msg[\"#\"] = text_rand(9));\n                if (dup.check(tmp)) return;\n                dup.track(tmp);\n                tmp = msg._;\n                msg._ = \"function\" == typeof tmp ? tmp : function() {};\n                msg.$ && msg.$ === (msg.$._ || \"\").$ || (msg.$ = gun);\n                if (msg[\"@\"] && !msg.put) ack(msg);\n                if (!at.ask(msg[\"@\"], msg)) {\n                    DBG && (DBG.u = +new Date);\n                    if (msg.put) {\n                        put(msg);\n                        return;\n                    } else if (msg.get) Gun1.on.get(msg, gun);\n                }\n                DBG && (DBG.uc = +new Date);\n                eve.to.next(msg);\n                DBG && (DBG.ua = +new Date);\n                if (msg.nts || msg.NTS) return;\n                 // TODO: This shouldn't be in core, but fast way to prevent NTS spread. Delete this line after all peers have upgraded to newer versions.\n                msg.out = universe;\n                at.on(\"out\", msg);\n                DBG && (DBG.ue = +new Date);\n            }\n            function put(msg) {\n                if (!msg) return;\n                var ctx = msg._ || \"\", root = ctx.root = ((ctx.$ = msg.$ || \"\")._ || \"\").root;\n                if (msg[\"@\"] && ctx.faith && !ctx.miss) {\n                    msg.out = universe;\n                    root.on(\"out\", msg);\n                    return;\n                }\n                ctx.latch = root.hatch;\n                ctx.match = root.hatch = [];\n                var put = msg.put;\n                var DBG = ctx.DBG = msg.DBG, S = +new Date;\n                CT = CT || S;\n                if (put[\"#\"] && put[\".\"]) return;\n                 // TODO: BUG! This needs to call HAM instead.\n                DBG && (DBG.p = S);\n                ctx[\"#\"] = msg[\"#\"];\n                ctx.msg = msg;\n                ctx.all = 0;\n                ctx.stun = 1;\n                var nl = Object.keys(put); //.sort(); // TODO: This is unbounded operation, large graphs will be slower. Write our own CPU scheduled sort? Or somehow do it in below? Keys itself is not O(1) either, create ES5 shim over ?weak map? or custom which is constant.\n                console.STAT && console.STAT(S, ((DBG || ctx).pk = +new Date) - S, \"put sort\");\n                var ni = 0, nj, kl, soul, node, states, err, tmp;\n                (function pop(o) {\n                    if (nj != ni) {\n                        nj = ni;\n                        if (!(soul = nl[ni])) {\n                            console.STAT && console.STAT(S, ((DBG || ctx).pd = +new Date) - S, \"put\");\n                            fire(ctx);\n                            return;\n                        }\n                        if (!(node = put[soul])) err = ERR + cut(soul) + \"no node.\";\n                        else if (!(tmp = node._)) err = ERR + cut(soul) + \"no meta.\";\n                        else if (soul !== tmp[\"#\"]) err = ERR + cut(soul) + \"soul not same.\";\n                        else if (!(states = tmp[\">\"])) err = ERR + cut(soul) + \"no state.\";\n                        kl = Object.keys(node || {}); // TODO: .keys( is slow\n                    }\n                    if (err) {\n                        msg.err = ctx.err = err; // invalid data should error and stun the message.\n                        fire(ctx);\n                        //console.log(\"handle error!\", err) // handle!\n                        return;\n                    }\n                    var i = 0, key;\n                    o = o || 0;\n                    while(o++ < 9 && (key = kl[i++])){\n                        if (\"_\" === key) continue;\n                        var val = node[key], state = states[key];\n                        if (u === state) {\n                            err = ERR + cut(key) + \"on\" + cut(soul) + \"no state.\";\n                            break;\n                        }\n                        if (!valid(val)) {\n                            err = ERR + cut(key) + \"on\" + cut(soul) + \"bad \" + typeof val + cut(val);\n                            break;\n                        }\n                        //ctx.all++; //ctx.ack[soul+key] = '';\n                        ham(val, key, soul, state, msg);\n                        ++C; // courtesy count;\n                    }\n                    if ((kl = kl.slice(i)).length) {\n                        turn(pop);\n                        return;\n                    }\n                    ++ni;\n                    kl = null;\n                    pop(o);\n                })();\n            }\n            Gun1.on.put = put;\n            // TODO: MARK!!! clock below, reconnect sync, SEA certify wire merge, User.auth taking multiple times, // msg put, put, say ack, hear loop...\n            // WASIS BUG! local peer not ack. .off other people: .open\n            function ham(val, key, soul, state, msg) {\n                var ctx = msg._ || \"\", root = ctx.root, graph = root.graph, lot, tmp;\n                var vertex = graph[soul] || empty, was = state_is(vertex, key, 1), known = vertex[key];\n                var DBG = ctx.DBG;\n                if (tmp = console.STAT) {\n                    if (!graph[soul] || !known) tmp.has = (tmp.has || 0) + 1;\n                }\n                var now = State(), u;\n                if (state > now) {\n                    setTimeout(function() {\n                        ham(val, key, soul, state, msg);\n                    }, (tmp = state - now) > MD ? MD : tmp); // Max Defer 32bit. :(\n                    console.STAT && console.STAT((DBG || ctx).Hf = +new Date, tmp, \"future\");\n                    return;\n                }\n                if (state < was) return;\n                 // but some chains have a cache miss that need to re-fire. // TODO: Improve in future. // for AXE this would reduce rebroadcast, but GUN does it on message forwarding. // TURNS OUT CACHE MISS WAS NOT NEEDED FOR NEW CHAINS ANYMORE!!! DANGER DANGER DANGER, ALWAYS RETURN! (or am I missing something?)\n                if (!ctx.faith) {\n                    if (state === was && (val === known || L(val) <= L(known))) {\n                        if (!ctx.miss) return;\n                    } // same\n                }\n                ctx.stun++; // TODO: 'forget' feature in SEA tied to this, bad approach, but hacked in for now. Any changes here must update there.\n                var aid = msg[\"#\"] + ctx.all++, id = {\n                    toString: function() {\n                        return aid;\n                    },\n                    _: ctx\n                };\n                id.toJSON = id.toString; // this *trick* makes it compatible between old & new versions.\n                root.dup.track(id)[\"#\"] = msg[\"#\"]; // fixes new OK acks for RPC like RTC.\n                DBG && (DBG.ph = DBG.ph || +new Date);\n                root.on(\"put\", {\n                    \"#\": id,\n                    \"@\": msg[\"@\"],\n                    put: {\n                        \"#\": soul,\n                        \".\": key,\n                        \":\": val,\n                        \">\": state\n                    },\n                    ok: msg.ok,\n                    _: ctx\n                });\n            }\n            function map(msg) {\n                var DBG;\n                if (DBG = (msg._ || \"\").DBG) {\n                    DBG.pa = +new Date;\n                    DBG.pm = DBG.pm || +new Date;\n                }\n                var eve = this, root = eve.as, graph = root.graph, ctx = msg._, put = msg.put, soul = put[\"#\"], key = put[\".\"], val = put[\":\"], state = put[\">\"], id = msg[\"#\"], tmp;\n                if ((tmp = ctx.msg) && (tmp = tmp.put) && (tmp = tmp[soul])) state_ify(tmp, key, state, val, soul);\n                 // necessary! or else out messages do not get SEA transforms.\n                //var bytes = ((graph[soul]||'')[key]||'').length||1;\n                graph[soul] = state_ify(graph[soul], key, state, val, soul);\n                if (tmp = (root.next || \"\")[soul]) //tmp.bytes = (tmp.bytes||0) + ((val||'').length||1) - bytes;\n                //if(tmp.bytes > 2**13){ Gun.log.once('byte-limit', \"Note: In the future, GUN peers will enforce a ~4KB query limit. Please see https://gun.eco/docs/Page\") }\n                tmp.on(\"in\", msg);\n                fire(ctx);\n                eve.to.next(msg);\n            }\n            function fire(ctx, msg) {\n                var root;\n                if (ctx.stop) return;\n                if (!ctx.err && 0 < --ctx.stun) return;\n                 // TODO: 'forget' feature in SEA tied to this, bad approach, but hacked in for now. Any changes here must update there.\n                ctx.stop = 1;\n                if (!(root = ctx.root)) return;\n                var tmp = ctx.match;\n                tmp.end = 1;\n                if (tmp === root.hatch) {\n                    if (!(tmp = ctx.latch) || tmp.end) delete root.hatch;\n                    else root.hatch = tmp;\n                }\n                ctx.hatch && ctx.hatch(); // TODO: rename/rework how put & this interact.\n                setTimeout.each(ctx.match, function(cb) {\n                    cb && cb();\n                });\n                if (!(msg = ctx.msg) || ctx.err || msg.err) return;\n                msg.out = universe;\n                ctx.root.on(\"out\", msg);\n                CF(); // courtesy check;\n            }\n            function ack(msg) {\n                var id = msg[\"@\"] || \"\", ctx, ok, tmp;\n                if (!(ctx = id._)) {\n                    var dup = (dup = msg.$) && (dup = dup._) && (dup = dup.root) && (dup = dup.dup);\n                    if (!(dup = dup.check(id))) return;\n                    msg[\"@\"] = dup[\"#\"] || msg[\"@\"]; // This doesn't do anything anymore, backtrack it to something else?\n                    return;\n                }\n                ctx.acks = (ctx.acks || 0) + 1;\n                if (ctx.err = msg.err) {\n                    msg[\"@\"] = ctx[\"#\"];\n                    fire(ctx); // TODO: BUG? How it skips/stops propagation of msg if any 1 item is error, this would assume a whole batch/resync has same malicious intent.\n                }\n                ctx.ok = msg.ok || ctx.ok;\n                if (!ctx.stop && !ctx.crack) ctx.crack = ctx.match && ctx.match.push(function() {\n                    back(ctx);\n                });\n                 // handle synchronous acks. NOTE: If a storage peer ACKs synchronously then the PUT loop has not even counted up how many items need to be processed, so ctx.STOP flags this and adds only 1 callback to the end of the PUT loop.\n                back(ctx);\n            }\n            function back(ctx) {\n                if (!ctx || !ctx.root) return;\n                if (ctx.stun || ctx.acks !== ctx.all) return;\n                ctx.root.on(\"in\", {\n                    \"@\": ctx[\"#\"],\n                    err: ctx.err,\n                    ok: ctx.err ? u : ctx.ok || {\n                        \"\": 1\n                    }\n                });\n            }\n            var ERR = \"Error: Invalid graph!\";\n            var cut = function(s) {\n                return \" '\" + (\"\" + s).slice(0, 9) + \"...' \";\n            };\n            var L = JSON.stringify, MD = 2147483647, State = Gun1.state;\n            var C = 0, CT, CF = function() {\n                if (C > 999 && C / -(CT - (CT = +new Date)) > 1) {\n                    Gun1.window && console.log(\"Warning: You're syncing 1K+ records a second, faster than DOM can update - consider limiting query.\");\n                    CF = function() {\n                        C = 0;\n                    };\n                }\n            };\n        })();\n        (function() {\n            Gun1.on.get = function(msg, gun) {\n                var root = gun._, get = msg.get, soul = get[\"#\"], node = root.graph[soul], has = get[\".\"];\n                var next = root.next || (root.next = {}), at = next[soul];\n                // TODO: Azarattum bug, what is in graph is not same as what is in next. Fix!\n                // queue concurrent GETs?\n                // TODO: consider tagging original message into dup for DAM.\n                // TODO: ^ above? In chat app, 12 messages resulted in same peer asking for `#user.pub` 12 times. (same with #user GET too, yipes!) // DAM note: This also resulted in 12 replies from 1 peer which all had same ##hash but none of them deduped because each get was different.\n                // TODO: Moving quick hacks fixing these things to axe for now.\n                // TODO: a lot of GET #foo then GET #foo.\"\" happening, why?\n                // TODO: DAM's ## hash check, on same get ACK, producing multiple replies still, maybe JSON vs YSON?\n                // TMP note for now: viMZq1slG was chat LEX query #.\n                /*if(gun !== (tmp = msg.$) && (tmp = (tmp||'')._)){\n\t\t\t\t\tif(tmp.Q){ tmp.Q[msg['#']] = ''; return } // chain does not need to ask for it again.\n\t\t\t\t\ttmp.Q = {};\n\t\t\t\t}*/ /*if(u === has){\n\t\t\t\t\tif(at.Q){\n\t\t\t\t\t\t//at.Q[msg['#']] = '';\n\t\t\t\t\t\t//return;\n\t\t\t\t\t}\n\t\t\t\t\tat.Q = {};\n\t\t\t\t}*/ var ctx = msg._ || {}, DBG = ctx.DBG = msg.DBG;\n                DBG && (DBG.g = +new Date);\n                //console.log(\"GET:\", get, node, has, at);\n                //if(!node && !at){ return root.on('get', msg) }\n                //if(has && node){ // replace 2 below lines to continue dev?\n                if (!node) return root.on(\"get\", msg);\n                if (has) {\n                    if (\"string\" != typeof has || u === node[has]) {\n                        if (!((at || \"\").next || \"\")[has]) {\n                            root.on(\"get\", msg);\n                            return;\n                        }\n                    }\n                    node = state_ify({}, has, state_is(node, has), node[has], soul);\n                // If we have a key in-memory, do we really need to fetch?\n                // Maybe... in case the in-memory key we have is a local write\n                // we still need to trigger a pull/merge from peers.\n                }\n                //Gun.window? Gun.obj.copy(node) : node; // HNPERF: If !browser bump Performance? Is this too dangerous to reference root graph? Copy / shallow copy too expensive for big nodes. Gun.obj.to(node); // 1 layer deep copy // Gun.obj.copy(node); // too slow on big nodes\n                node && ack(msg, node);\n                root.on(\"get\", msg); // send GET to storage adapters.\n            };\n            function ack(msg, node) {\n                var S = +new Date, ctx = msg._ || {}, DBG = ctx.DBG = msg.DBG;\n                var to = msg[\"#\"], id = text_rand(9), keys = Object.keys(node || \"\").sort(), soul = ((node || \"\")._ || \"\")[\"#\"], kl = keys.length, j = 0, root = msg.$._.root, F = node === root.graph[soul];\n                console.STAT && console.STAT(S, ((DBG || ctx).gk = +new Date) - S, \"got keys\");\n                // PERF: Consider commenting this out to force disk-only reads for perf testing? // TODO: .keys( is slow\n                node && function go() {\n                    S = +new Date;\n                    var i = 0, k, put = {}, tmp;\n                    while(i < 9 && (k = keys[i++]))state_ify(put, k, state_is(node, k), node[k], soul);\n                    keys = keys.slice(i);\n                    (tmp = {})[soul] = put;\n                    put = tmp;\n                    var faith;\n                    if (F) {\n                        faith = function() {};\n                        faith.ram = faith.faith = true;\n                    } // HNPERF: We're testing performance improvement by skipping going through security again, but this should be audited.\n                    tmp = keys.length;\n                    console.STAT && console.STAT(S, -(S - (S = +new Date)), \"got copied some\");\n                    DBG && (DBG.ga = +new Date);\n                    root.on(\"in\", {\n                        \"@\": to,\n                        \"#\": id,\n                        put: put,\n                        \"%\": tmp ? id = text_rand(9) : u,\n                        $: root.$,\n                        _: faith,\n                        DBG: DBG,\n                        FOO: 1\n                    });\n                    console.STAT && console.STAT(S, +new Date - S, \"got in\");\n                    if (!tmp) return;\n                    setTimeout.turn(go);\n                }();\n                if (!node) root.on(\"in\", {\n                    \"@\": msg[\"#\"]\n                });\n                 // TODO: I don't think I like this, the default lS adapter uses this but \"not found\" is a sensitive issue, so should probably be handled more carefully/individually.\n            }\n            Gun1.on.get.ack = ack;\n        })();\n        (function() {\n            Gun1.chain.opt = function(opt) {\n                opt = opt || {};\n                var gun = this, at = gun._, tmp = opt.peers || opt;\n                if (!Object.plain(opt)) opt = {};\n                if (!Object.plain(at.opt)) at.opt = opt;\n                if (\"string\" == typeof tmp) tmp = [\n                    tmp\n                ];\n                if (!Object.plain(at.opt.peers)) at.opt.peers = {};\n                if (tmp instanceof Array) {\n                    opt.peers = {};\n                    tmp.forEach(function(url) {\n                        var p = {};\n                        p.id = p.url = url;\n                        opt.peers[url] = at.opt.peers[url] = at.opt.peers[url] || p;\n                    });\n                }\n                obj_each(opt, function each(k) {\n                    var v = this[k];\n                    if (this && this.hasOwnProperty(k) || \"string\" == typeof v || Object.empty(v)) {\n                        this[k] = v;\n                        return;\n                    }\n                    if (v && v.constructor !== Object && !(v instanceof Array)) return;\n                    obj_each(v, each);\n                });\n                at.opt.from = opt;\n                Gun1.on(\"opt\", at);\n                at.opt.uuid = at.opt.uuid || function uuid(l) {\n                    return Gun1.state().toString(36).replace(\".\", \"\") + String.random(l || 12);\n                };\n                return gun;\n            };\n        })();\n        var obj_each = function(o, f) {\n            Object.keys(o).forEach(f, o);\n        }, text_rand = String.random, turn = setTimeout.turn, valid = Gun1.valid, state_is = Gun1.state.is, state_ify = Gun1.state.ify, u, empty = {}, C;\n        Gun1.log = function() {\n            return !Gun1.log.off && C.log.apply(C, arguments), [].slice.call(arguments).join(\" \");\n        };\n        Gun1.log.once = function(w, s, o) {\n            return (o = Gun1.log.once)[w] = o[w] || 0, o[w]++ || Gun1.log(s);\n        };\n        if (typeof window !== \"undefined\") (window.GUN = window.Gun = Gun1).window = window;\n        try {\n            if (typeof MODULE !== \"undefined\") MODULE.exports = Gun1;\n        } catch (e) {}\n        module1.exports = Gun1;\n        (Gun1.window || {}).console = (Gun1.window || {}).console || {\n            log: function() {}\n        };\n        (C = console).only = function(i, s) {\n            return C.only.i && i === C.only.i && C.only.i++ && (C.log.apply(C, arguments) || s);\n        };\n        \"Please do not remove welcome log unless you are paying for a monthly sponsorship, thanks!\";\n        Gun1.log.once(\"welcome\", \"Hello wonderful person! :) Thanks for using GUN, please ask for help on http://chat.gun.eco if anything takes you longer than 5min to figure out!\");\n    })(USE, \"./root\");\n    USE(function(module1) {\n        var Gun1 = USE(\"./root\");\n        Gun1.chain.back = function(n, opt) {\n            var tmp;\n            n = n || 1;\n            if (-1 === n || Infinity === n) return this._.root.$;\n            else if (1 === n) return (this._.back || this._).$;\n            var gun = this, at = gun._;\n            if (typeof n === \"string\") n = n.split(\".\");\n            if (n instanceof Array) {\n                var i = 0, l = n.length, tmp = at;\n                for(i; i < l; i++)tmp = (tmp || empty)[n[i]];\n                if (u !== tmp) return opt ? gun : tmp;\n                else if (tmp = at.back) return tmp.$.back(n, opt);\n                return;\n            }\n            if (\"function\" == typeof n) {\n                var yes, tmp = {\n                    back: at\n                };\n                while((tmp = tmp.back) && u === (yes = n(tmp, opt)));\n                return yes;\n            }\n            if (\"number\" == typeof n) return (at.back || at).$.back(n - 1);\n            return this;\n        };\n        var empty = {}, u;\n    })(USE, \"./back\");\n    USE(function(module1) {\n        // WARNING: GUN is very simple, but the JavaScript chaining API around GUN\n        // is complicated and was extremely hard to build. If you port GUN to another\n        // language, consider implementing an easier API to build.\n        var Gun1 = USE(\"./root\");\n        Gun1.chain.chain = function(sub) {\n            var gun = this, at = gun._, chain = new (sub || gun).constructor(gun), cat = chain._, root;\n            cat.root = root = at.root;\n            cat.id = ++root.once;\n            cat.back = gun._;\n            cat.on = Gun1.on;\n            cat.on(\"in\", Gun1.on.in, cat); // For 'in' if I add my own listeners to each then I MUST do it before in gets called. If I listen globally for all incoming data instead though, regardless of individual listeners, I can transform the data there and then as well.\n            cat.on(\"out\", Gun1.on.out, cat); // However for output, there isn't really the global option. I must listen by adding my own listener individually BEFORE this one is ever called.\n            return chain;\n        };\n        function output(msg) {\n            var put, get, at = this.as, back = at.back, root = at.root, tmp;\n            if (!msg.$) msg.$ = at.$;\n            this.to.next(msg);\n            if (at.err) {\n                at.on(\"in\", {\n                    put: at.put = u,\n                    $: at.$\n                });\n                return;\n            }\n            if (get = msg.get) {\n                /*if(u !== at.put){\n\t\t\t\t\tat.on('in', at);\n\t\t\t\t\treturn;\n\t\t\t\t}*/ if (root.pass) root.pass[at.id] = at;\n                 // will this make for buggy behavior elsewhere?\n                if (at.lex) Object.keys(at.lex).forEach(function(k) {\n                    tmp[k] = at.lex[k];\n                }, tmp = msg.get = msg.get || {});\n                if (get[\"#\"] || at.soul) {\n                    get[\"#\"] = get[\"#\"] || at.soul;\n                    //root.graph[get['#']] = root.graph[get['#']] || {_:{'#':get['#'],'>':{}}};\n                    msg[\"#\"] || (msg[\"#\"] = text_rand(9)); // A3120 ?\n                    back = root.$.get(get[\"#\"])._;\n                    if (!(get = get[\".\"])) {\n                        tmp = back.ask && back.ask[\"\"]; // check if we have already asked for the full node\n                        (back.ask || (back.ask = {}))[\"\"] = back; // add a flag that we are now.\n                        if (u !== back.put) {\n                            back.on(\"in\", back); // send what is cached down the chain\n                            if (tmp) return;\n                             // and don't ask for it again.\n                        }\n                        msg.$ = back.$;\n                    } else if (obj_has(back.put, get)) {\n                        tmp = back.ask && back.ask[get];\n                        (back.ask || (back.ask = {}))[get] = back.$.get(get)._;\n                        back.on(\"in\", {\n                            get: get,\n                            put: {\n                                \"#\": back.soul,\n                                \".\": get,\n                                \":\": back.put[get],\n                                \">\": state_is(root.graph[back.soul], get)\n                            }\n                        });\n                        if (tmp) return;\n                    }\n                    /*put = (back.$.get(get)._);\n\t\t\t\t\t\tif(!(tmp = put.ack)){ put.ack = -1 }\n\t\t\t\t\t\tback.on('in', {\n\t\t\t\t\t\t\t$: back.$,\n\t\t\t\t\t\t\tput: Gun.state.ify({}, get, Gun.state(back.put, get), back.put[get]),\n\t\t\t\t\t\t\tget: back.get\n\t\t\t\t\t\t});\n\t\t\t\t\t\tif(tmp){ return }\n\t\t\t\t\t} else\n\t\t\t\t\tif('string' != typeof get){\n\t\t\t\t\t\tvar put = {}, meta = (back.put||{})._;\n\t\t\t\t\t\tGun.obj.map(back.put, function(v,k){\n\t\t\t\t\t\t\tif(!Gun.text.match(k, get)){ return }\n\t\t\t\t\t\t\tput[k] = v;\n\t\t\t\t\t\t})\n\t\t\t\t\t\tif(!Gun.obj.empty(put)){\n\t\t\t\t\t\t\tput._ = meta;\n\t\t\t\t\t\t\tback.on('in', {$: back.$, put: put, get: back.get})\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(tmp = at.lex){\n\t\t\t\t\t\t\ttmp = (tmp._) || (tmp._ = function(){});\n\t\t\t\t\t\t\tif(back.ack < tmp.ask){ tmp.ask = back.ack }\n\t\t\t\t\t\t\tif(tmp.ask){ return }\n\t\t\t\t\t\t\ttmp.ask = 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t*/ root.ask(ack, msg); // A3120 ?\n                    return root.on(\"in\", msg);\n                }\n                //if(root.now){ root.now[at.id] = root.now[at.id] || true; at.pass = {} }\n                if (get[\".\"]) {\n                    if (at.get) {\n                        msg = {\n                            get: {\n                                \".\": at.get\n                            },\n                            $: at.$\n                        };\n                        (back.ask || (back.ask = {}))[at.get] = msg.$._; // TODO: PERFORMANCE? More elegant way?\n                        return back.on(\"out\", msg);\n                    }\n                    msg = {\n                        get: at.lex ? msg.get : {},\n                        $: at.$\n                    };\n                    return back.on(\"out\", msg);\n                }\n                (at.ask || (at.ask = {}))[\"\"] = at; //at.ack = at.ack || -1;\n                if (at.get) {\n                    get[\".\"] = at.get;\n                    (back.ask || (back.ask = {}))[at.get] = msg.$._; // TODO: PERFORMANCE? More elegant way?\n                    return back.on(\"out\", msg);\n                }\n            }\n            return back.on(\"out\", msg);\n        }\n        Gun1.on.out = output;\n        function input(msg, cat) {\n            cat = cat || this.as; // TODO: V8 may not be able to optimize functions with different parameter calls, so try to do benchmark to see if there is any actual difference.\n            var root = cat.root, gun = msg.$ || (msg.$ = cat.$), at = (gun || \"\")._ || empty, tmp = msg.put || \"\", soul = tmp[\"#\"], key = tmp[\".\"], change = u !== tmp[\"=\"] ? tmp[\"=\"] : tmp[\":\"], state = tmp[\">\"] || -Infinity, sat; // eve = event, at = data at, cat = chain at, sat = sub at (children chains).\n            if (u !== msg.put && (u === tmp[\"#\"] || u === tmp[\".\"] || u === tmp[\":\"] && u === tmp[\"=\"] || u === tmp[\">\"])) {\n                if (!valid(tmp)) {\n                    if (!(soul = ((tmp || \"\")._ || \"\")[\"#\"])) {\n                        console.log(\"chain not yet supported for\", tmp, \"...\", msg, cat);\n                        return;\n                    }\n                    gun = cat.root.$.get(soul);\n                    return setTimeout.each(Object.keys(tmp).sort(), function(k) {\n                        if (\"_\" == k || u === (state = state_is(tmp, k))) return;\n                        cat.on(\"in\", {\n                            $: gun,\n                            put: {\n                                \"#\": soul,\n                                \".\": k,\n                                \"=\": tmp[k],\n                                \">\": state\n                            },\n                            VIA: msg\n                        });\n                    });\n                }\n                cat.on(\"in\", {\n                    $: at.back.$,\n                    put: {\n                        \"#\": soul = at.back.soul,\n                        \".\": key = at.has || at.get,\n                        \"=\": tmp,\n                        \">\": state_is(at.back.put, key)\n                    },\n                    via: msg\n                }); // TODO: This could be buggy! It assumes/approxes data, other stuff could have corrupted it.\n                return;\n            }\n            if ((msg.seen || \"\")[cat.id]) return;\n            (msg.seen || (msg.seen = function() {}))[cat.id] = cat; // help stop some infinite loops\n            if (cat !== at) {\n                Object.keys(msg).forEach(function(k) {\n                    tmp[k] = msg[k];\n                }, tmp = {}); // make copy of message\n                tmp.get = cat.get || tmp.get;\n                if (!cat.soul && !cat.has) tmp.$$$ = tmp.$$$ || cat.$; // make a reference to wherever it came from.\n                else if (at.soul) {\n                    tmp.$ = cat.$;\n                    tmp.$$ = tmp.$$ || at.$;\n                }\n                msg = tmp; // use the message with the new context instead;\n            }\n            unlink(msg, cat);\n            if ((cat.soul /* && (cat.ask||'')['']*/  || msg.$$) && state >= state_is(root.graph[soul], key)) (tmp = root.$.get(soul)._).put = state_ify(tmp.put, key, state, change, soul);\n            if (!at.soul /*&& (at.ask||'')['']*/  && state >= state_is(root.graph[soul], key) && (sat = (root.$.get(soul)._.next || \"\")[key])) {\n                sat.put = change; // update cache\n                if (\"string\" == typeof (tmp = valid(change))) sat.put = root.$.get(tmp)._.put || change; // share same cache as what we're linked to.\n            }\n            this.to && this.to.next(msg); // 1st API job is to call all chain listeners.\n            // TODO: Make input more reusable by only doing these (some?) calls if we are a chain we recognize? This means each input listener would be responsible for when listeners need to be called, which makes sense, as they might want to filter.\n            cat.any && setTimeout.each(Object.keys(cat.any), function(any) {\n                (any = cat.any[any]) && any(msg);\n            }, 0, 99); // 1st API job is to call all chain listeners. // TODO: .keys( is slow // BUG: Some re-in logic may depend on this being sync.\n            cat.echo && setTimeout.each(Object.keys(cat.echo), function(lat) {\n                (lat = cat.echo[lat]) && lat.on(\"in\", msg);\n            }, 0, 99); // & linked at chains // TODO: .keys( is slow // BUG: Some re-in logic may depend on this being sync.\n            if (((msg.$$ || \"\")._ || at).soul) // is there cases where it is a $$ that we do NOT want to do the following? \n            {\n                if ((sat = cat.next) && (sat = sat[key])) {\n                    tmp = {};\n                    Object.keys(msg).forEach(function(k) {\n                        tmp[k] = msg[k];\n                    });\n                    tmp.$ = (msg.$$ || msg.$).get(tmp.get = key);\n                    delete tmp.$$;\n                    delete tmp.$$$;\n                    sat.on(\"in\", tmp);\n                }\n            }\n            link(msg, cat);\n        }\n        Gun1.on.in = input;\n        function link(msg, cat) {\n            cat = cat || this.as || msg.$._;\n            if (msg.$$ && this !== Gun1.on) return;\n             // $$ means we came from a link, so we are at the wrong level, thus ignore it unless overruled manually by being called directly.\n            if (!msg.put || cat.soul) return;\n             // But you cannot overrule being linked to nothing, or trying to link a soul chain - that must never happen.\n            var put = msg.put || \"\", link = put[\"=\"] || put[\":\"], tmp;\n            var root = cat.root, tat = root.$.get(put[\"#\"]).get(put[\".\"])._;\n            if (\"string\" != typeof (link = valid(link))) {\n                if (this === Gun1.on) (tat.echo || (tat.echo = {}))[cat.id] = cat;\n                 // allow some chain to explicitly force linking to simple data.\n                return; // by default do not link to data that is not a link.\n            }\n            if ((tat.echo || (tat.echo = {}))[cat.id] // we've already linked ourselves so we do not need to do it again. Except... (annoying implementation details)\n             && !(root.pass || \"\")[cat.id]) return;\n             // if a new event listener was added, we need to make a pass through for it. The pass will be on the chain, not always the chain passed down. \n            if (tmp = root.pass) {\n                if (tmp[link + cat.id]) return;\n                tmp[link + cat.id] = 1;\n            } // But the above edge case may \"pass through\" on a circular graph causing infinite passes, so we hackily add a temporary check for that.\n            (tat.echo || (tat.echo = {}))[cat.id] = cat; // set ourself up for the echo! // TODO: BUG? Echo to self no longer causes problems? Confirm.\n            if (cat.has) cat.link = link;\n            var sat = root.$.get(tat.link = link)._; // grab what we're linking to.\n            (sat.echo || (sat.echo = {}))[tat.id] = tat; // link it.\n            var tmp = cat.ask || \"\"; // ask the chain for what needs to be loaded next!\n            if (tmp[\"\"] || cat.lex) sat.on(\"out\", {\n                get: {\n                    \"#\": link\n                }\n            });\n            setTimeout.each(Object.keys(tmp), function(get, sat) {\n                if (!get || !(sat = tmp[get])) return;\n                sat.on(\"out\", {\n                    get: {\n                        \"#\": link,\n                        \".\": get\n                    }\n                }); // go get it.\n            }, 0, 99);\n        }\n        Gun1.on.link = link;\n        function unlink(msg, cat) {\n            var put = msg.put || \"\", change = u !== put[\"=\"] ? put[\"=\"] : put[\":\"], root = cat.root, link, tmp;\n            if (u === change) {\n                // TODO: BUG! because emptying cache could be async from below, make sure we are not emptying a newer cache. So maybe pass an Async ID to check against?\n                // TODO: BUG! What if this is a map? // Warning! Clearing things out needs to be robust against sync/async ops, or else you'll see `map val get put` test catastrophically fail because map attempts to link when parent graph is streamed before child value gets set. Need to differentiate between lack acks and force clearing.\n                if (cat.soul && u !== cat.put) return;\n                 // data may not be found on a soul, but if a soul already has data, then nothing can clear the soul as a whole.\n                //if(!cat.has){ return }\n                tmp = (msg.$$ || msg.$ || \"\")._ || \"\";\n                if (msg[\"@\"] && (u !== tmp.put || u !== cat.put)) return;\n                 // a \"not found\" from other peers should not clear out data if we have already found it.\n                //if(cat.has && u === cat.put && !(root.pass||'')[cat.id]){ return } // if we are already unlinked, do not call again, unless edge case. // TODO: BUG! This line should be deleted for \"unlink deeply nested\".\n                if (link = cat.link || msg.linked) delete (root.$.get(link)._.echo || \"\")[cat.id];\n                if (cat.has) cat.link = null;\n                cat.put = u; // empty out the cache if, for example, alice's car's color no longer exists (relative to alice) if alice no longer has a car.\n                // TODO: BUG! For maps, proxy this so the individual sub is triggered, not all subs.\n                setTimeout.each(Object.keys(cat.next || \"\"), function(get, sat) {\n                    if (!(sat = cat.next[get])) return;\n                    //if(cat.has && u === sat.put && !(root.pass||'')[sat.id]){ return } // if we are already unlinked, do not call again, unless edge case. // TODO: BUG! This line should be deleted for \"unlink deeply nested\".\n                    if (link) delete (root.$.get(link).get(get)._.echo || \"\")[sat.id];\n                    sat.on(\"in\", {\n                        get: get,\n                        put: u,\n                        $: sat.$\n                    }); // TODO: BUG? Add recursive seen check?\n                }, 0, 99);\n                return;\n            }\n            if (cat.soul) return;\n             // a soul cannot unlink itself.\n            if (msg.$$) return;\n             // a linked chain does not do the unlinking, the sub chain does. // TODO: BUG? Will this cancel maps?\n            link = valid(change); // need to unlink anytime we are not the same link, though only do this once per unlink (and not on init).\n            tmp = msg.$._ || \"\";\n            if (link === tmp.link || cat.has && !tmp.link) {\n                if ((root.pass || \"\")[cat.id] && \"string\" !== typeof link) ;\n                else return;\n            }\n            delete (tmp.echo || \"\")[cat.id];\n            unlink({\n                get: cat.get,\n                put: u,\n                $: msg.$,\n                linked: msg.linked = msg.linked || tmp.link\n            }, cat); // unlink our sub chains.\n        }\n        Gun1.on.unlink = unlink;\n        function ack(msg, ev) {\n            //if(!msg['%'] && (this||'').off){ this.off() } // do NOT memory leak, turn off listeners! Now handled by .ask itself\n            // manhattan:\n            var as = this.as, at = as.$._, root = at.root, get = as.get || \"\", tmp = (msg.put || \"\")[get[\"#\"]] || \"\";\n            if (!msg.put || \"string\" == typeof get[\".\"] && u === tmp[get[\".\"]]) {\n                if (u !== at.put) return;\n                if (!at.soul && !at.has) return;\n                 // TODO: BUG? For now, only core-chains will handle not-founds, because bugs creep in if non-core chains are used as $ but we can revisit this later for more powerful extensions.\n                at.ack = (at.ack || 0) + 1;\n                at.on(\"in\", {\n                    get: at.get,\n                    put: at.put = u,\n                    $: at.$,\n                    \"@\": msg[\"@\"]\n                });\n                /*(tmp = at.Q) && setTimeout.each(Object.keys(tmp), function(id){ // TODO: Temporary testing, not integrated or being used, probably delete.\n\t\t\t\t\tObject.keys(msg).forEach(function(k){ tmp[k] = msg[k] }, tmp = {}); tmp['@'] = id; // copy message\n\t\t\t\t\troot.on('in', tmp);\n\t\t\t\t}); delete at.Q;*/ return;\n            }\n            (msg._ || {}).miss = 1;\n            Gun1.on.put(msg);\n            return; // eom\n        }\n        var empty = {}, u, text_rand = String.random, valid = Gun1.valid, obj_has = function(o, k) {\n            return o && Object.prototype.hasOwnProperty.call(o, k);\n        }, state = Gun1.state, state_is = state.is, state_ify = state.ify;\n    })(USE, \"./chain\");\n    USE(function(module1) {\n        var Gun1 = USE(\"./root\");\n        Gun1.chain.get = function(key, cb, as) {\n            var gun, tmp;\n            if (typeof key === \"string\") {\n                if (key.length == 0) {\n                    (gun = this.chain())._.err = {\n                        err: Gun1.log(\"0 length key!\", key)\n                    };\n                    if (cb) cb.call(gun, gun._.err);\n                    return gun;\n                }\n                var back = this, cat = back._;\n                var next = cat.next || empty;\n                if (!(gun = next[key])) gun = key && cache(key, back);\n                gun = gun && gun.$;\n            } else if (\"function\" == typeof key) {\n                if (true === cb) return soul(this, key, cb, as), this;\n                gun = this;\n                var cat = gun._, opt = cb || {}, root = cat.root, id;\n                opt.at = cat;\n                opt.ok = key;\n                var wait = {}; // can we assign this to the at instead, like in once?\n                //var path = []; cat.$.back(at => { at.get && path.push(at.get.slice(0,9))}); path = path.reverse().join('.');\n                function any(msg, eve, f) {\n                    if (any.stun) return;\n                    if ((tmp = root.pass) && !tmp[id]) return;\n                    var at = msg.$._, sat = (msg.$$ || \"\")._, data = (sat || at).put, odd = !at.has && !at.soul, test = {}, link, tmp;\n                    if (odd || u === data) data = u === ((tmp = msg.put) || \"\")[\"=\"] ? u === (tmp || \"\")[\":\"] ? tmp : tmp[\":\"] : tmp[\"=\"];\n                    if (link = \"string\" == typeof (tmp = Gun1.valid(data))) data = u === (tmp = root.$.get(tmp)._.put) ? opt.not ? u : data : tmp;\n                    if (opt.not && u === data) return;\n                    if (u === opt.stun) {\n                        if ((tmp = root.stun) && tmp.on) {\n                            cat.$.back(function(a) {\n                                tmp.on(\"\" + a.id, test = {});\n                                if ((test.run || 0) < any.id) return test;\n                                 // if there is an earlier stun on gapless parents/self.\n                            });\n                            !test.run && tmp.on(\"\" + at.id, test = {}); // this node stunned?\n                            !test.run && sat && tmp.on(\"\" + sat.id, test = {}); // linked node stunned?\n                            if (any.id > test.run) {\n                                if (!test.stun || test.stun.end) {\n                                    test.stun = tmp.on(\"stun\");\n                                    test.stun = test.stun && test.stun.last;\n                                }\n                                if (test.stun && !test.stun.end) {\n                                    //if(odd && u === data){ return }\n                                    //if(u === msg.put){ return } // \"not found\" acks will be found if there is stun, so ignore these.\n                                    (test.stun.add || (test.stun.add = {}))[id] = function() {\n                                        any(msg, eve, 1);\n                                    } // add ourself to the stun callback list that is called at end of the write.\n                                    ;\n                                    return;\n                                }\n                            }\n                        }\n                        if (/*odd &&*/ u === data) f = 0;\n                         // if data not found, keep waiting/trying.\n                        /*if(f && u === data){\n\t\t\t\t\t\t\tcat.on('out', opt.out);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}*/ if ((tmp = root.hatch) && !tmp.end && u === opt.hatch && !f) {\n                            if (wait[at.$._.id]) return;\n                            wait[at.$._.id] = 1;\n                            tmp.push(function() {\n                                any(msg, eve, 1);\n                            });\n                            return;\n                        }\n                        wait = {}; // end quick hack.\n                    }\n                    // call:\n                    if (root.pass) {\n                        if (root.pass[id + at.id]) return;\n                        root.pass[id + at.id] = 1;\n                    }\n                    if (opt.on) {\n                        opt.ok.call(at.$, data, at.get, msg, eve || any);\n                        return;\n                    } // TODO: Also consider breaking `this` since a lot of people do `=>` these days and `.call(` has slower performance.\n                    if (opt.v2020) {\n                        opt.ok(msg, eve || any);\n                        return;\n                    }\n                    Object.keys(msg).forEach(function(k) {\n                        tmp[k] = msg[k];\n                    }, tmp = {});\n                    msg = tmp;\n                    msg.put = data; // 2019 COMPATIBILITY! TODO: GET RID OF THIS!\n                    opt.ok.call(opt.as, msg, eve || any); // is this the right\n                }\n                any.at = cat;\n                //(cat.any||(cat.any=function(msg){ setTimeout.each(Object.keys(cat.any||''), function(act){ (act = cat.any[act]) && act(msg) },0,99) }))[id = String.random(7)] = any; // maybe switch to this in future?\n                (cat.any || (cat.any = {}))[id = String.random(7)] = any;\n                any.off = function() {\n                    any.stun = 1;\n                    if (!cat.any) return;\n                    delete cat.any[id];\n                };\n                any.rid = rid; // logic from old version, can we clean it up now?\n                any.id = opt.run || ++root.once; // used in callback to check if we are earlier than a write. // will this ever cause an integer overflow?\n                tmp = root.pass;\n                (root.pass = {})[id] = 1; // Explanation: test trade-offs want to prevent recursion so we add/remove pass flag as it gets fulfilled to not repeat, however map map needs many pass flags - how do we reconcile?\n                opt.out = opt.out || {\n                    get: {}\n                };\n                cat.on(\"out\", opt.out);\n                root.pass = tmp;\n                return gun;\n            } else if (\"number\" == typeof key) return this.get(\"\" + key, cb, as);\n            else if (\"string\" == typeof (tmp = valid(key))) return this.get(tmp, cb, as);\n            else if (tmp = this.get.next) gun = tmp(this, key);\n            if (!gun) {\n                (gun = this.chain())._.err = {\n                    err: Gun1.log(\"Invalid get request!\", key)\n                }; // CLEAN UP\n                if (cb) cb.call(gun, gun._.err);\n                return gun;\n            }\n            if (cb && \"function\" == typeof cb) gun.get(cb, as);\n            return gun;\n        };\n        function cache(key, back) {\n            var cat = back._, next = cat.next, gun = back.chain(), at = gun._;\n            if (!next) next = cat.next = {};\n            next[at.get = key] = at;\n            if (back === cat.root.$) at.soul = key;\n            else if (cat.soul || cat.has) at.has = key;\n            return at;\n        }\n        function soul(gun, cb, opt, as) {\n            var cat = gun._, acks = 0, tmp;\n            if (tmp = cat.soul || cat.link) return cb(tmp, as, cat);\n            if (cat.jam) return cat.jam.push([\n                cb,\n                as\n            ]);\n            cat.jam = [\n                [\n                    cb,\n                    as\n                ]\n            ];\n            gun.get(function go(msg, eve) {\n                if (u === msg.put && !cat.root.opt.super && (tmp = Object.keys(cat.root.opt.peers).length) && ++acks <= tmp) return;\n                eve.rid(msg);\n                var at = (at = msg.$) && at._ || {}, i = 0, as;\n                tmp = cat.jam;\n                delete cat.jam; // tmp = cat.jam.splice(0, 100);\n                //if(tmp.length){ process.nextTick(function(){ go(msg, eve) }) }\n                while(as = tmp[i++]){\n                    var cb = as[0], id;\n                    as = as[1];\n                    cb && cb(id = at.link || at.soul || Gun1.valid(msg.put) || ((msg.put || {})._ || {})[\"#\"], as, msg, eve);\n                } //);\n            }, {\n                out: {\n                    get: {\n                        \".\": true\n                    }\n                }\n            });\n            return gun;\n        }\n        function rid(at) {\n            var cat = this.at || this.on;\n            if (!at || cat.soul || cat.has) return this.off();\n            if (!(at = (at = (at = at.$ || at)._ || at).id)) return;\n            var map = cat.map, tmp, seen;\n            //if(!map || !(tmp = map[at]) || !(tmp = tmp.at)){ return }\n            if (tmp = (seen = this.seen || (this.seen = {}))[at]) return true;\n            seen[at] = true;\n            return;\n        }\n        var empty = {}, valid = Gun1.valid, u;\n    })(USE, \"./get\");\n    USE(function(module1) {\n        var Gun1 = USE(\"./root\");\n        Gun1.chain.put = function(data, cb, as) {\n            var gun = this, at = gun._, root = at.root;\n            as = as || {};\n            as.root = at.root;\n            as.run || (as.run = root.once);\n            stun(as, at.id); // set a flag for reads to check if this chain is writing.\n            as.ack = as.ack || cb;\n            as.via = as.via || gun;\n            as.data = as.data || data;\n            as.soul || (as.soul = at.soul || \"string\" == typeof cb && cb);\n            var s = as.state = as.state || Gun1.state();\n            if (\"function\" == typeof data) {\n                data(function(d) {\n                    as.data = d;\n                    gun.put(u, u, as);\n                });\n                return gun;\n            }\n            if (!as.soul) return get(as), gun;\n            as.$ = root.$.get(as.soul); // TODO: This may not allow user chaining and similar?\n            as.todo = [\n                {\n                    it: as.data,\n                    ref: as.$\n                }\n            ];\n            as.turn = as.turn || turn;\n            as.ran = as.ran || ran;\n            //var path = []; as.via.back(at => { at.get && path.push(at.get.slice(0,9)) }); path = path.reverse().join('.');\n            // TODO: Perf! We only need to stun chains that are being modified, not necessarily written to.\n            (function walk() {\n                var to = as.todo, at = to.pop(), d = at.it, cid = at.ref && at.ref._.id, v, k, cat, tmp, g;\n                stun(as, at.ref);\n                if (tmp = at.todo) {\n                    k = tmp.pop();\n                    d = d[k];\n                    if (tmp.length) to.push(at);\n                }\n                k && (to.path || (to.path = [])).push(k);\n                if (!(v = valid(d)) && !(g = Gun1.is(d))) {\n                    if (!Object.plain(d)) {\n                        ran.err(as, \"Invalid data: \" + check(d) + \" at \" + (as.via.back(function(at) {\n                            at.get && tmp.push(at.get);\n                        }, tmp = []) || tmp.join(\".\")) + \".\" + (to.path || []).join(\".\"));\n                        return;\n                    }\n                    var seen = as.seen || (as.seen = []), i = seen.length;\n                    while(i--)if (d === (tmp = seen[i]).it) {\n                        v = d = tmp.link;\n                        break;\n                    }\n                }\n                if (k && v) at.node = state_ify(at.node, k, s, d);\n                else {\n                    if (!as.seen) {\n                        ran.err(as, \"Data at root of graph must be a node (an object).\");\n                        return;\n                    }\n                    as.seen.push(cat = {\n                        it: d,\n                        link: {},\n                        todo: g ? [] : Object.keys(d).sort().reverse(),\n                        path: (to.path || []).slice(),\n                        up: at\n                    }); // Any perf reasons to CPU schedule this .keys( ?\n                    at.node = state_ify(at.node, k, s, cat.link);\n                    !g && cat.todo.length && to.push(cat);\n                    // ---------------\n                    var id = as.seen.length;\n                    (as.wait || (as.wait = {}))[id] = \"\";\n                    tmp = (cat.ref = g ? d : k ? at.ref.get(k) : at.ref)._;\n                    (tmp = d && (d._ || \"\")[\"#\"] || tmp.soul || tmp.link) ? resolve({\n                        soul: tmp\n                    }) : cat.ref.get(resolve, {\n                        run: as.run,\n                        /*hatch: 0,*/ v2020: 1,\n                        out: {\n                            get: {\n                                \".\": \" \"\n                            }\n                        }\n                    }); // TODO: BUG! This should be resolve ONLY soul to prevent full data from being loaded. // Fixed now?\n                    //setTimeout(function(){ if(F){ return } console.log(\"I HAVE NOT BEEN CALLED!\", path, id, cat.ref._.id, k) }, 9000); var F; // MAKE SURE TO ADD F = 1 below!\n                    function resolve(msg, eve) {\n                        var end = cat.link[\"#\"];\n                        if (eve) {\n                            eve.off();\n                            eve.rid(msg);\n                        } // TODO: Too early! Check all peers ack not found.\n                        // TODO: BUG maybe? Make sure this does not pick up a link change wipe, that it uses the changign link instead.\n                        var soul = end || msg.soul || (tmp = (msg.$$ || msg.$)._ || \"\").soul || tmp.link || ((tmp = tmp.put || \"\")._ || \"\")[\"#\"] || tmp[\"#\"] || ((tmp = msg.put || \"\") && msg.$$ ? tmp[\"#\"] : (tmp[\"=\"] || tmp[\":\"] || \"\")[\"#\"]);\n                        !end && stun(as, msg.$);\n                        if (!soul && !at.link[\"#\"]) {\n                            (at.wait || (at.wait = [])).push(function() {\n                                resolve(msg, eve);\n                            }) // wait\n                            ;\n                            return;\n                        }\n                        if (!soul) {\n                            soul = [];\n                            (msg.$$ || msg.$).back(function(at) {\n                                if (tmp = at.soul || at.link) return soul.push(tmp);\n                                soul.push(at.get);\n                            });\n                            soul = soul.reverse().join(\"/\");\n                        }\n                        cat.link[\"#\"] = soul;\n                        !g && (((as.graph || (as.graph = {}))[soul] = cat.node || (cat.node = {\n                            _: {}\n                        }))._[\"#\"] = soul);\n                        delete as.wait[id];\n                        cat.wait && setTimeout.each(cat.wait, function(cb) {\n                            cb && cb();\n                        });\n                        as.ran(as);\n                    }\n                // ---------------\n                }\n                if (!to.length) return as.ran(as);\n                as.turn(walk);\n            })();\n            return gun;\n        };\n        function stun(as, id) {\n            if (!id) return;\n            id = (id._ || \"\").id || id;\n            var run = as.root.stun || (as.root.stun = {\n                on: Gun1.on\n            }), test = {}, tmp;\n            as.stun || (as.stun = run.on(\"stun\", function() {}));\n            if (tmp = run.on(\"\" + id)) tmp.the.last.next(test);\n            if (test.run >= as.run) return;\n            run.on(\"\" + id, function(test) {\n                if (as.stun.end) {\n                    this.off();\n                    this.to.next(test);\n                    return;\n                }\n                test.run = test.run || as.run;\n                test.stun = test.stun || as.stun;\n                return;\n            });\n        }\n        function ran(as) {\n            if (as.err) {\n                ran.end(as.stun, as.root);\n                return;\n            } // move log handle here.\n            if (as.todo.length || as.end || !Object.empty(as.wait)) return;\n            as.end = 1;\n            //(as.retry = function(){ as.acks = 0;\n            var cat = as.$.back(-1)._, root = cat.root, ask = cat.ask(function(ack) {\n                root.on(\"ack\", ack);\n                if (ack.err && !ack.lack) Gun1.log(ack);\n                if (++acks > (as.acks || 0)) this.off();\n                 // Adjustable ACKs! Only 1 by default.\n                if (!as.ack) return;\n                as.ack(ack, this);\n            }, as.opt), acks = 0, stun = as.stun, tmp;\n            (tmp = function() {\n                if (!stun) return;\n                ran.end(stun, root);\n                setTimeout.each(Object.keys(stun = stun.add || \"\"), function(cb) {\n                    if (cb = stun[cb]) cb();\n                }); // resume the stunned reads // Any perf reasons to CPU schedule this .keys( ?\n            }).hatch = tmp; // this is not official yet ^\n            //console.log(1, \"PUT\", as.run, as.graph);\n            if (as.ack && !as.ok) as.ok = as.acks || 9;\n             // TODO: In future! Remove this! This is just old API support.\n            as.via._.on(\"out\", {\n                put: as.out = as.graph,\n                ok: as.ok && {\n                    \"@\": as.ok + 1\n                },\n                opt: as.opt,\n                \"#\": ask,\n                _: tmp\n            });\n        //})();\n        }\n        ran.end = function(stun, root) {\n            stun.end = noop; // like with the earlier id, cheaper to make this flag a function so below callbacks do not have to do an extra type check.\n            if (stun.the.to === stun && stun === stun.the.last) delete root.stun;\n            stun.off();\n        };\n        ran.err = function(as, err) {\n            (as.ack || noop).call(as, as.out = {\n                err: as.err = Gun1.log(err)\n            });\n            as.ran(as);\n        };\n        function get(as) {\n            var at = as.via._, tmp;\n            as.via = as.via.back(function(at) {\n                if (at.soul || !at.get) return at.$;\n                tmp = as.data;\n                (as.data = {})[at.get] = tmp;\n            });\n            if (!as.via || !as.via._.soul) as.via = at.root.$.get(((as.data || \"\")._ || \"\")[\"#\"] || at.$.back(\"opt.uuid\")());\n            as.via.put(as.data, as.ack, as);\n            return;\n        }\n        function check(d, tmp) {\n            return d && (tmp = d.constructor) && tmp.name || typeof d;\n        }\n        var u, empty = {}, noop = function() {}, turn = setTimeout.turn, valid = Gun1.valid, state_ify = Gun1.state.ify;\n        var iife = function(fn, as) {\n            fn.call(as || empty);\n        };\n    })(USE, \"./put\");\n    USE(function(module1) {\n        var Gun1 = USE(\"./root\");\n        USE(\"./chain\");\n        USE(\"./back\");\n        USE(\"./put\");\n        USE(\"./get\");\n        module1.exports = Gun1;\n    })(USE, \"./index\");\n    USE(function(module1) {\n        var Gun1 = USE(\"./index\");\n        Gun1.chain.on = function(tag, arg, eas, as) {\n            var gun = this, cat = gun._, root = cat.root, act, off, id, tmp;\n            if (typeof tag === \"string\") {\n                if (!arg) return cat.on(tag);\n                act = cat.on(tag, arg, eas || cat, as);\n                if (eas && eas.$) (eas.subs || (eas.subs = [])).push(act);\n                return gun;\n            }\n            var opt = arg;\n            (opt = true === opt ? {\n                change: true\n            } : opt || {}).not = 1;\n            opt.on = 1;\n            //opt.at = cat;\n            //opt.ok = tag;\n            //opt.last = {};\n            var wait = {}; // can we assign this to the at instead, like in once?\n            gun.get(tag, opt);\n            /*gun.get(function on(data,key,msg,eve){ var $ = this;\n\t\t\t\tif(tmp = root.hatch){ // quick hack!\n\t\t\t\t\tif(wait[$._.id]){ return } wait[$._.id] = 1;\n\t\t\t\t\ttmp.push(function(){on.call($, data,key,msg,eve)});\n\t\t\t\t\treturn;\n\t\t\t\t}; wait = {}; // end quick hack.\n\t\t\t\ttag.call($, data,key,msg,eve);\n\t\t\t}, opt); // TODO: PERF! Event listener leak!!!?*/ /*\n\t\t\tfunction one(msg, eve){\n\t\t\t\tif(one.stun){ return }\n\t\t\t\tvar at = msg.$._, data = at.put, tmp;\n\t\t\t\tif(tmp = at.link){ data = root.$.get(tmp)._.put }\n\t\t\t\tif(opt.not===u && u === data){ return }\n\t\t\t\tif(opt.stun===u && (tmp = root.stun) && (tmp = tmp[at.id] || tmp[at.back.id]) && !tmp.end){ // Remember! If you port this into `.get(cb` make sure you allow stun:0 skip option for `.put(`.\n\t\t\t\t\ttmp[id] = function(){one(msg,eve)};\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t//tmp = one.wait || (one.wait = {}); console.log(tmp[at.id] === ''); if(tmp[at.id] !== ''){ tmp[at.id] = tmp[at.id] || setTimeout(function(){tmp[at.id]='';one(msg,eve)},1); return } delete tmp[at.id];\n\t\t\t\t// call:\n\t\t\t\tif(opt.as){\n\t\t\t\t\topt.ok.call(opt.as, msg, eve || one);\n\t\t\t\t} else {\n\t\t\t\t\topt.ok.call(at.$, data, msg.get || at.get, msg, eve || one);\n\t\t\t\t}\n\t\t\t};\n\t\t\tone.at = cat;\n\t\t\t(cat.act||(cat.act={}))[id = String.random(7)] = one;\n\t\t\tone.off = function(){ one.stun = 1; if(!cat.act){ return } delete cat.act[id] }\n\t\t\tcat.on('out', {get: {}});*/ return gun;\n        };\n        // Rules:\n        // 1. If cached, should be fast, but not read while write.\n        // 2. Should not retrigger other listeners, should get triggered even if nothing found.\n        // 3. If the same callback passed to many different once chains, each should resolve - an unsubscribe from the same callback should not effect the state of the other resolving chains, if you do want to cancel them all early you should mutate the callback itself with a flag & check for it at top of callback\n        Gun1.chain.once = function(cb, opt) {\n            opt = opt || {}; // avoid rewriting\n            if (!cb) return none(this, opt);\n            var gun = this, cat = gun._, root = cat.root, data = cat.put, id = String.random(7), one, tmp;\n            gun.get(function(data, key, msg, eve) {\n                var $ = this, at = $._, one = at.one || (at.one = {});\n                if (eve.stun) return;\n                if (\"\" === one[id]) return;\n                if (true === (tmp = Gun1.valid(data))) {\n                    once();\n                    return;\n                }\n                if (\"string\" == typeof tmp) return;\n                 // TODO: BUG? Will this always load?\n                clearTimeout((cat.one || \"\")[id]); // clear \"not found\" since they only get set on cat.\n                clearTimeout(one[id]);\n                one[id] = setTimeout(once, opt.wait || 99); // TODO: Bug? This doesn't handle plural chains.\n                function once(f) {\n                    if (!at.has && !at.soul) at = {\n                        put: data,\n                        get: key\n                    };\n                     // handles non-core messages.\n                    if (u === (tmp = at.put)) tmp = ((msg.$$ || \"\")._ || \"\").put;\n                    if (\"string\" == typeof Gun1.valid(tmp)) {\n                        tmp = root.$.get(tmp)._.put;\n                        if (tmp === u && !f) {\n                            one[id] = setTimeout(function() {\n                                once(1);\n                            }, opt.wait || 99); // TODO: Quick fix. Maybe use ack count for more predictable control?\n                            return;\n                        }\n                    }\n                    //console.log(\"AND VANISHED\", data);\n                    if (eve.stun) return;\n                    if (\"\" === one[id]) return;\n                    one[id] = \"\";\n                    if (cat.soul || cat.has) eve.off();\n                     // TODO: Plural chains? // else { ?.off() } // better than one check?\n                    cb.call($, tmp, at.get);\n                    clearTimeout(one[id]); // clear \"not found\" since they only get set on cat. // TODO: This was hackily added, is it necessary or important? Probably not, in future try removing this. Was added just as a safety for the `&& !f` check.\n                }\n            }, {\n                on: 1\n            });\n            return gun;\n        };\n        function none(gun, opt, chain) {\n            Gun1.log.once(\"valonce\", \"Chainable val is experimental, its behavior and API may change moving forward. Please play with it and report bugs and ideas on how to improve it.\");\n            (chain = gun.chain())._.nix = gun.once(function(data, key) {\n                chain._.on(\"in\", this._);\n            });\n            chain._.lex = gun._.lex; // TODO: Better approach in future? This is quick for now.\n            return chain;\n        }\n        Gun1.chain.off = function() {\n            // make off more aggressive. Warning, it might backfire!\n            var gun = this, at = gun._, tmp;\n            var cat = at.back;\n            if (!cat) return;\n            at.ack = 0; // so can resubscribe.\n            if (tmp = cat.next) {\n                if (tmp[at.get]) delete tmp[at.get];\n            }\n            // TODO: delete cat.one[map.id]?\n            if (tmp = cat.any) {\n                delete cat.any;\n                cat.any = {};\n            }\n            if (tmp = cat.ask) delete tmp[at.get];\n            if (tmp = cat.put) delete tmp[at.get];\n            if (tmp = at.soul) delete cat.root.graph[tmp];\n            if (tmp = at.map) Object.keys(tmp).forEach(function(i, at) {\n                at = tmp[i]; //obj_map(tmp, function(at){\n                if (at.link) cat.root.$.get(at.link).off();\n            });\n            if (tmp = at.next) Object.keys(tmp).forEach(function(i, neat) {\n                neat = tmp[i]; //obj_map(tmp, function(neat){\n                neat.$.off();\n            });\n            at.on(\"off\", {});\n            return gun;\n        };\n        var empty = {}, noop = function() {}, u;\n    })(USE, \"./on\");\n    USE(function(module1) {\n        var Gun1 = USE(\"./index\"), next = Gun1.chain.get.next;\n        Gun1.chain.get.next = function(gun, lex) {\n            var tmp;\n            if (!Object.plain(lex)) return (next || noop)(gun, lex);\n            if (tmp = ((tmp = lex[\"#\"]) || \"\")[\"=\"] || tmp) return gun.get(tmp);\n            (tmp = gun.chain()._).lex = lex; // LEX!\n            gun.on(\"in\", function(eve) {\n                if (String.match(eve.get || (eve.put || \"\")[\".\"], lex[\".\"] || lex[\"#\"] || lex)) tmp.on(\"in\", eve);\n                this.to.next(eve);\n            });\n            return tmp.$;\n        };\n        Gun1.chain.map = function(cb, opt, t) {\n            var gun = this, cat = gun._, lex, chain;\n            if (Object.plain(cb)) {\n                lex = cb[\".\"] ? cb : {\n                    \".\": cb\n                };\n                cb = u;\n            }\n            if (!cb) {\n                if (chain = cat.each) return chain;\n                (cat.each = chain = gun.chain())._.lex = lex || chain._.lex || cat.lex;\n                chain._.nix = gun.back(\"nix\");\n                gun.on(\"in\", map, chain._);\n                return chain;\n            }\n            Gun1.log.once(\"mapfn\", \"Map functions are experimental, their behavior and API may change moving forward. Please play with it and report bugs and ideas on how to improve it.\");\n            chain = gun.chain();\n            gun.map().on(function(data, key, msg, eve) {\n                var next = (cb || noop).call(this, data, key, msg, eve);\n                if (u === next) return;\n                if (data === next) return chain._.on(\"in\", msg);\n                if (Gun1.is(next)) return chain._.on(\"in\", next._);\n                var tmp = {};\n                Object.keys(msg.put).forEach(function(k) {\n                    tmp[k] = msg.put[k];\n                }, tmp);\n                tmp[\"=\"] = next;\n                chain._.on(\"in\", {\n                    get: key,\n                    put: tmp\n                });\n            });\n            return chain;\n        };\n        function map(msg) {\n            this.to.next(msg);\n            var cat = this.as, gun = msg.$, at = gun._, put = msg.put, tmp;\n            if (!at.soul && !msg.$$) return;\n             // this line took hundreds of tries to figure out. It only works if core checks to filter out above chains during link tho. This says \"only bother to map on a node\" for this layer of the chain. If something is not a node, map should not work.\n            if ((tmp = cat.lex) && !String.match(msg.get || (put || \"\")[\".\"], tmp[\".\"] || tmp[\"#\"] || tmp)) return;\n            Gun1.on.link(msg, cat);\n        }\n        var noop = function() {}, event = {\n            stun: noop,\n            off: noop\n        }, u;\n    })(USE, \"./map\");\n    USE(function(module1) {\n        var Gun1 = USE(\"./index\");\n        Gun1.chain.set = function(item, cb, opt) {\n            var gun = this, root = gun.back(-1), soul, tmp;\n            cb = cb || function() {};\n            opt = opt || {};\n            opt.item = opt.item || item;\n            if (soul = ((item || \"\")._ || \"\")[\"#\"]) (item = {})[\"#\"] = soul;\n             // check if node, make link.\n            if (\"string\" == typeof (tmp = Gun1.valid(item))) return gun.get(soul = tmp).put(item, cb, opt);\n             // check if link\n            if (!Gun1.is(item)) {\n                if (Object.plain(item)) item = root.get(soul = gun.back(\"opt.uuid\")()).put(item);\n                return gun.get(soul || root.back(\"opt.uuid\")(7)).put(item, cb, opt);\n            }\n            gun.put(function(go) {\n                item.get(function(soul, o, msg) {\n                    if (!soul) return cb.call(gun, {\n                        err: Gun1.log('Only a node can be linked! Not \"' + msg.put + '\"!')\n                    });\n                    (tmp = {})[soul] = {\n                        \"#\": soul\n                    };\n                    go(tmp);\n                }, true);\n            });\n            return item;\n        };\n    })(USE, \"./set\");\n    USE(function(module1) {\n        USE(\"./shim\");\n        var noop = function() {};\n        var parse = JSON.parseAsync || function(t, cb, r) {\n            var u, d = +new Date;\n            try {\n                cb(u, JSON.parse(t, r), json.sucks(+new Date - d));\n            } catch (e) {\n                cb(e);\n            }\n        };\n        var json = JSON.stringifyAsync || function(v, cb, r, s) {\n            var u, d = +new Date;\n            try {\n                cb(u, JSON.stringify(v, r, s), json.sucks(+new Date - d));\n            } catch (e) {\n                cb(e);\n            }\n        };\n        json.sucks = function(d) {\n            if (d > 99) {\n                console.log(\"Warning: JSON blocking CPU detected. Add `gun/lib/yson.js` to fix.\");\n                json.sucks = noop;\n            }\n        };\n        function Mesh(root) {\n            var mesh = function() {};\n            var opt = root.opt || {};\n            opt.log = opt.log || console.log;\n            opt.gap = opt.gap || opt.wait || 0;\n            opt.max = opt.max || (opt.memory ? opt.memory * 998001 : 300000000) * 0.3;\n            opt.pack = opt.pack || opt.max * 0.0001;\n            opt.puff = opt.puff || 9; // IDEA: do a start/end benchmark, divide ops/result.\n            var puff = setTimeout.turn || setTimeout;\n            var dup = root.dup, dup_check = dup.check, dup_track = dup.track;\n            var ST = +new Date, LT = ST;\n            var hear = mesh.hear = function(raw, peer) {\n                if (!raw) return;\n                if (opt.max <= raw.length) return mesh.say({\n                    dam: \"!\",\n                    err: \"Message too big!\"\n                }, peer);\n                if (mesh === this) {\n                    /*if('string' == typeof raw){ try{\n\t\t\t\t\t\tvar stat = console.STAT || {};\n\t\t\t\t\t\t//console.log('HEAR:', peer.id, (raw||'').slice(0,250), ((raw||'').length / 1024 / 1024).toFixed(4));\n\t\t\t\t\t\t\n\t\t\t\t\t\t//console.log(setTimeout.turn.s.length, 'stacks', parseFloat((-(LT - (LT = +new Date))/1000).toFixed(3)), 'sec', parseFloat(((LT-ST)/1000 / 60).toFixed(1)), 'up', stat.peers||0, 'peers', stat.has||0, 'has', stat.memhused||0, stat.memused||0, stat.memax||0, 'heap mem max');\n\t\t\t\t\t}catch(e){ console.log('DBG err', e) }}*/ hear.d += raw.length || 0;\n                    ++hear.c;\n                } // STATS!\n                var S = peer.SH = +new Date;\n                var tmp = raw[0], msg;\n                //raw && raw.slice && console.log(\"hear:\", ((peer.wire||'').headers||'').origin, raw.length, raw.slice && raw.slice(0,50)); //tc-iamunique-tc-package-ds1\n                if (\"[\" === tmp) {\n                    parse(raw, function(err, msg) {\n                        if (err || !msg) return mesh.say({\n                            dam: \"!\",\n                            err: \"DAM JSON parse error.\"\n                        }, peer);\n                        console.STAT && console.STAT(+new Date, msg.length, \"# on hear batch\");\n                        var P = opt.puff;\n                        (function go() {\n                            var S = +new Date;\n                            var i = 0, m;\n                            while(i < P && (m = msg[i++]))mesh.hear(m, peer);\n                            msg = msg.slice(i); // slicing after is faster than shifting during.\n                            console.STAT && console.STAT(S, +new Date - S, \"hear loop\");\n                            flush(peer); // force send all synchronously batched acks.\n                            if (!msg.length) return;\n                            puff(go, 0);\n                        })();\n                    });\n                    raw = \"\"; // \n                    return;\n                }\n                if (\"{\" === tmp || (raw[\"#\"] || Object.plain(raw)) && (msg = raw)) {\n                    if (msg) return hear.one(msg, peer, S);\n                    parse(raw, function(err, msg) {\n                        if (err || !msg) return mesh.say({\n                            dam: \"!\",\n                            err: \"DAM JSON parse error.\"\n                        }, peer);\n                        hear.one(msg, peer, S);\n                    });\n                    return;\n                }\n            };\n            hear.one = function(msg, peer, S) {\n                var id, hash, tmp, ash, DBG;\n                if (msg.DBG) msg.DBG = DBG = {\n                    DBG: msg.DBG\n                };\n                DBG && (DBG.h = S);\n                DBG && (DBG.hp = +new Date);\n                if (!(id = msg[\"#\"])) id = msg[\"#\"] = String.random(9);\n                if (tmp = dup_check(id)) return;\n                // DAM logic:\n                hash = msg[\"##\"]; // disable hashing for now // TODO: impose warning/penalty instead (?)\n                if (hash && (tmp = msg[\"@\"] || msg.get && id) && dup.check(ash = tmp + hash)) return;\n                 // Imagine A <-> B <=> (C & D), C & D reply with same ACK but have different IDs, B can use hash to dedup. Or if a GET has a hash already, we shouldn't ACK if same.\n                (msg._ = function() {}).via = mesh.leap = peer;\n                if ((tmp = msg[\"><\"]) && \"string\" == typeof tmp) tmp.slice(0, 99).split(\",\").forEach(function(k) {\n                    this[k] = 1;\n                }, msg._.yo = {});\n                 // Peers already sent to, do not resend.\n                // DAM ^\n                if (tmp = msg.dam) {\n                    if (tmp = mesh.hear[tmp]) tmp(msg, peer, root);\n                    dup_track(id);\n                    return;\n                }\n                if (tmp = msg.ok) msg._.near = tmp[\"/\"];\n                var S = +new Date;\n                DBG && (DBG.is = S);\n                peer.SI = id;\n                dup_track.ed = function(d) {\n                    if (id !== d) return;\n                    dup_track.ed = 0;\n                    if (!(d = dup.s[id])) return;\n                    d.via = peer;\n                    if (msg.get) d.it = msg;\n                };\n                root.on(\"in\", mesh.last = msg);\n                DBG && (DBG.hd = +new Date);\n                console.STAT && console.STAT(S, +new Date - S, msg.get ? \"msg get\" : msg.put ? \"msg put\" : \"msg\");\n                dup_track(id); // in case 'in' does not call track.\n                if (ash) dup_track(ash);\n                 //dup.track(tmp+hash, true).it = it(msg);\n                mesh.leap = mesh.last = null; // warning! mesh.leap could be buggy.\n            };\n            var tomap = function(k, i, m) {\n                m(k, true);\n            };\n            hear.c = hear.d = 0;\n            (function() {\n                var SMIA = 0;\n                var loop;\n                mesh.hash = function(msg, peer) {\n                    var h, s, t;\n                    var S = +new Date;\n                    json(msg.put, function hash(err, text) {\n                        var ss = (s || (s = t = text || \"\")).slice(0, 32768); // 1024 * 32\n                        h = String.hash(ss, h);\n                        s = s.slice(32768);\n                        if (s) {\n                            puff(hash, 0);\n                            return;\n                        }\n                        console.STAT && console.STAT(S, +new Date - S, \"say json+hash\");\n                        msg._.$put = t;\n                        msg[\"##\"] = h;\n                        mesh.say(msg, peer);\n                        delete msg._.$put;\n                    }, sort);\n                };\n                function sort(k, v) {\n                    var tmp;\n                    if (!(v instanceof Object)) return v;\n                    Object.keys(v).sort().forEach(sorta, {\n                        to: tmp = {},\n                        on: v\n                    });\n                    return tmp;\n                }\n                function sorta(k) {\n                    this.to[k] = this.on[k];\n                }\n                var say = mesh.say = function(msg, peer) {\n                    var tmp;\n                    if ((tmp = this) && (tmp = tmp.to) && tmp.next) tmp.next(msg);\n                     // compatible with middleware adapters.\n                    if (!msg) return false;\n                    var id, hash, raw, ack = msg[\"@\"];\n                    //if(opt.super && (!ack || !msg.put)){ return } // TODO: MANHATTAN STUB //OBVIOUSLY BUG! But squelch relay. // :( get only is 100%+ CPU usage :(\n                    var meta = msg._ || (msg._ = function() {});\n                    var DBG = msg.DBG, S = +new Date;\n                    meta.y = meta.y || S;\n                    if (!peer) DBG && (DBG.y = S);\n                    if (!(id = msg[\"#\"])) id = msg[\"#\"] = String.random(9);\n                    !loop && dup_track(id); //.it = it(msg); // track for 9 seconds, default. Earth<->Mars would need more! // always track, maybe move this to the 'after' logic if we split function.\n                    //if(msg.put && (msg.err || (dup.s[id]||'').err)){ return false } // TODO: in theory we should not be able to stun a message, but for now going to check if it can help network performance preventing invalid data to relay.\n                    if (!(hash = msg[\"##\"]) && u !== msg.put && !meta.via && ack) {\n                        mesh.hash(msg, peer);\n                        return;\n                    } // TODO: Should broadcasts be hashed?\n                    if (!peer && ack) peer = (tmp = dup.s[ack]) && (tmp.via || (tmp = tmp.it) && (tmp = tmp._) && tmp.via) || (tmp = mesh.last) && ack === tmp[\"#\"] && mesh.leap;\n                     // warning! mesh.leap could be buggy! mesh last check reduces this. // TODO: CLEAN UP THIS LINE NOW? `.it` should be reliable.\n                    if (!peer && ack) {\n                        if (dup.s[ack]) return;\n                         // in dups but no peer hints that this was ack to ourself, ignore.\n                        console.STAT && console.STAT(+new Date, ++SMIA, \"total no peer to ack to\"); // TODO: Delete this now. Dropping lost ACKs is protocol fine now.\n                        return false;\n                    } // TODO: Temporary? If ack via trace has been lost, acks will go to all peers, which trashes browser bandwidth. Not relaying the ack will force sender to ask for ack again. Note, this is technically wrong for mesh behavior.\n                    if (ack && !msg.put && !hash && ((dup.s[ack] || \"\").it || \"\")[\"##\"]) return false;\n                     // If we're saying 'not found' but a relay had data, do not bother sending our not found. // Is this correct, return false? // NOTE: ADD PANIC TEST FOR THIS!\n                    if (!peer && mesh.way) return mesh.way(msg);\n                    DBG && (DBG.yh = +new Date);\n                    if (!(raw = meta.raw)) {\n                        mesh.raw(msg, peer);\n                        return;\n                    }\n                    DBG && (DBG.yr = +new Date);\n                    if (!peer || !peer.id) {\n                        if (!Object.plain(peer || opt.peers)) return false;\n                        var S = +new Date;\n                        var P = opt.puff, ps = opt.peers, pl = Object.keys(peer || opt.peers || {}); // TODO: .keys( is slow\n                        console.STAT && console.STAT(S, +new Date - S, \"peer keys\");\n                        (function go() {\n                            var S = +new Date;\n                            //Type.obj.map(peer || opt.peers, each); // in case peer is a peer list.\n                            loop = 1;\n                            var wr = meta.raw;\n                            meta.raw = raw; // quick perf hack\n                            var i = 0, p;\n                            while(i < 9 && (p = (pl || \"\")[i++])){\n                                if (!(p = ps[p] || (peer || \"\")[p])) continue;\n                                mesh.say(msg, p);\n                            }\n                            meta.raw = wr;\n                            loop = 0;\n                            pl = pl.slice(i); // slicing after is faster than shifting during.\n                            console.STAT && console.STAT(S, +new Date - S, \"say loop\");\n                            if (!pl.length) return;\n                            puff(go, 0);\n                            ack && dup_track(ack); // keep for later\n                        })();\n                        return;\n                    }\n                    // TODO: PERF: consider splitting function here, so say loops do less work.\n                    if (!peer.wire && mesh.wire) mesh.wire(peer);\n                    if (id === peer.last) return;\n                    peer.last = id; // was it just sent?\n                    if (peer === meta.via) return false;\n                     // don't send back to self.\n                    if ((tmp = meta.yo) && (tmp[peer.url] || tmp[peer.pid] || tmp[peer.id])) return false;\n                    console.STAT && console.STAT(S, ((DBG || meta).yp = +new Date) - (meta.y || S), \"say prep\");\n                    !loop && ack && dup_track(ack); // streaming long responses needs to keep alive the ack.\n                    if (peer.batch) {\n                        peer.tail = (tmp = peer.tail || 0) + raw.length;\n                        if (peer.tail <= opt.pack) {\n                            peer.batch += (tmp ? \",\" : \"\") + raw;\n                            return;\n                        }\n                        flush(peer);\n                    }\n                    peer.batch = \"[\"; // Prevents double JSON!\n                    var ST = +new Date;\n                    setTimeout(function() {\n                        console.STAT && console.STAT(ST, +new Date - ST, \"0ms TO\");\n                        flush(peer);\n                    }, opt.gap); // TODO: queuing/batching might be bad for low-latency video game performance! Allow opt out?\n                    send(raw, peer);\n                    console.STAT && ack === peer.SI && console.STAT(S, +new Date - peer.SH, \"say ack\");\n                };\n                mesh.say.c = mesh.say.d = 0;\n                // TODO: this caused a out-of-memory crash!\n                mesh.raw = function(msg, peer) {\n                    if (!msg) return \"\";\n                    var meta = msg._ || {}, put, tmp;\n                    if (tmp = meta.raw) return tmp;\n                    if (\"string\" == typeof msg) return msg;\n                    var hash = msg[\"##\"], ack = msg[\"@\"];\n                    if (hash && ack) {\n                        if (!meta.via && dup_check(ack + hash)) return false;\n                         // for our own out messages, memory & storage may ack the same thing, so dedup that. Tho if via another peer, we already tracked it upon hearing, so this will always trigger false positives, so don't do that!\n                        if (tmp = (dup.s[ack] || \"\").it) {\n                            if (hash === tmp[\"##\"]) return false;\n                             // if ask has a matching hash, acking is optional.\n                            if (!tmp[\"##\"]) tmp[\"##\"] = hash;\n                             // if none, add our hash to ask so anyone we relay to can dedup. // NOTE: May only check against 1st ack chunk, 2nd+ won't know and still stream back to relaying peers which may then dedup. Any way to fix this wasted bandwidth? I guess force rate limiting breaking change, that asking peer has to ask for next lexical chunk.\n                        }\n                    }\n                    if (!msg.dam && !msg[\"@\"]) {\n                        var i = 0, to = [];\n                        tmp = opt.peers;\n                        for(var k in tmp){\n                            var p = tmp[k]; // TODO: Make it up peers instead!\n                            to.push(p.url || p.pid || p.id);\n                            if (++i > 6) break;\n                        }\n                        if (i > 1) msg[\"><\"] = to.join();\n                         // TODO: BUG! This gets set regardless of peers sent to! Detect?\n                    }\n                    if (msg.put && (tmp = msg.ok)) msg.ok = {\n                        \"@\": (tmp[\"@\"] || 1) - 1,\n                        \"/\": tmp[\"/\"] == msg._.near ? mesh.near : tmp[\"/\"]\n                    };\n                    if (put = meta.$put) {\n                        tmp = {};\n                        Object.keys(msg).forEach(function(k) {\n                            tmp[k] = msg[k];\n                        });\n                        tmp.put = \":])([:\";\n                        json(tmp, function(err, raw) {\n                            if (err) return;\n                             // TODO: Handle!!\n                            var S = +new Date;\n                            tmp = raw.indexOf('\"put\":\":])([:\"');\n                            res(u, raw = raw.slice(0, tmp + 6) + put + raw.slice(tmp + 14));\n                            console.STAT && console.STAT(S, +new Date - S, \"say slice\");\n                        });\n                        return;\n                    }\n                    json(msg, res);\n                    function res(err, raw) {\n                        if (err) return;\n                         // TODO: Handle!!\n                        meta.raw = raw; //if(meta && (raw||'').length < (999 * 99)){ meta.raw = raw } // HNPERF: If string too big, don't keep in memory.\n                        mesh.say(msg, peer);\n                    }\n                };\n            })();\n            function flush(peer) {\n                var tmp = peer.batch, t = \"string\" == typeof tmp, l;\n                if (t) tmp += \"]\";\n                 // TODO: Prevent double JSON!\n                peer.batch = peer.tail = null;\n                if (!tmp) return;\n                if (t ? 3 > tmp.length : !tmp.length) return;\n                 // TODO: ^\n                if (!t) try {\n                    tmp = 1 === tmp.length ? tmp[0] : JSON.stringify(tmp);\n                } catch (e) {\n                    return opt.log(\"DAM JSON stringify error\", e);\n                }\n                if (!tmp) return;\n                send(tmp, peer);\n            }\n            // for now - find better place later.\n            function send(raw, peer) {\n                try {\n                    var wire = peer.wire;\n                    if (peer.say) peer.say(raw);\n                    else if (wire.send) wire.send(raw);\n                    mesh.say.d += raw.length || 0;\n                    ++mesh.say.c; // STATS!\n                } catch (e) {\n                    (peer.queue = peer.queue || []).push(raw);\n                }\n            }\n            mesh.near = 0;\n            mesh.hi = function(peer) {\n                var wire = peer.wire, tmp;\n                if (!wire) {\n                    mesh.wire(peer.length && {\n                        url: peer,\n                        id: peer\n                    } || peer);\n                    return;\n                }\n                if (peer.id) opt.peers[peer.url || peer.id] = peer;\n                else {\n                    tmp = peer.id = peer.id || peer.url || String.random(9);\n                    mesh.say({\n                        dam: \"?\",\n                        pid: root.opt.pid\n                    }, opt.peers[tmp] = peer);\n                    delete dup.s[peer.last]; // IMPORTANT: see https://gun.eco/docs/DAM#self\n                }\n                if (!peer.met) {\n                    mesh.near++;\n                    peer.met = +new Date;\n                    root.on(\"hi\", peer);\n                }\n                // @rogowski I need this here by default for now to fix go1dfish's bug\n                tmp = peer.queue;\n                peer.queue = [];\n                setTimeout.each(tmp || [], function(msg) {\n                    send(msg, peer);\n                }, 0, 9);\n            //Type.obj.native && Type.obj.native(); // dirty place to check if other JS polluted.\n            };\n            mesh.bye = function(peer) {\n                peer.met && --mesh.near;\n                delete peer.met;\n                root.on(\"bye\", peer);\n                var tmp = +new Date;\n                tmp = tmp - (peer.met || tmp);\n                mesh.bye.time = ((mesh.bye.time || tmp) + tmp) / 2;\n            };\n            mesh.hear[\"!\"] = function(msg, peer) {\n                opt.log(\"Error:\", msg.err);\n            };\n            mesh.hear[\"?\"] = function(msg, peer) {\n                if (msg.pid) {\n                    if (!peer.pid) peer.pid = msg.pid;\n                    if (msg[\"@\"]) return;\n                }\n                mesh.say({\n                    dam: \"?\",\n                    pid: opt.pid,\n                    \"@\": msg[\"#\"]\n                }, peer);\n                delete dup.s[peer.last]; // IMPORTANT: see https://gun.eco/docs/DAM#self\n            };\n            mesh.hear[\"mob\"] = function(msg, peer) {\n                if (!msg.peers) return;\n                var peers = Object.keys(msg.peers), one = peers[Math.random() * peers.length >> 0];\n                if (!one) return;\n                mesh.bye(peer);\n                mesh.hi(one);\n            };\n            root.on(\"create\", function(root) {\n                root.opt.pid = root.opt.pid || String.random(9);\n                this.to.next(root);\n                root.on(\"out\", mesh.say);\n            });\n            root.on(\"bye\", function(peer, tmp) {\n                peer = opt.peers[peer.id || peer] || peer;\n                this.to.next(peer);\n                peer.bye ? peer.bye() : (tmp = peer.wire) && tmp.close && tmp.close();\n                delete opt.peers[peer.id];\n                peer.wire = null;\n            });\n            var gets = {};\n            root.on(\"bye\", function(peer, tmp) {\n                this.to.next(peer);\n                if (tmp = console.STAT) tmp.peers = mesh.near;\n                if (!(tmp = peer.url)) return;\n                gets[tmp] = true;\n                setTimeout(function() {\n                    delete gets[tmp];\n                }, opt.lack || 9000);\n            });\n            root.on(\"hi\", function(peer, tmp) {\n                this.to.next(peer);\n                if (tmp = console.STAT) tmp.peers = mesh.near;\n                if (opt.super) return;\n                 // temporary (?) until we have better fix/solution?\n                var souls = Object.keys(root.next || \"\"); // TODO: .keys( is slow\n                if (souls.length > 9999 && !console.SUBS) console.log(console.SUBS = \"Warning: You have more than 10K live GETs, which might use more bandwidth than your screen can show - consider `.off()`.\");\n                setTimeout.each(souls, function(soul) {\n                    var node = root.next[soul];\n                    if (opt.super || (node.ask || \"\")[\"\"]) {\n                        mesh.say({\n                            get: {\n                                \"#\": soul\n                            }\n                        }, peer);\n                        return;\n                    }\n                    setTimeout.each(Object.keys(node.ask || \"\"), function(key) {\n                        if (!key) return;\n                        // is the lack of ## a !onion hint?\n                        mesh.say({\n                            \"##\": String.hash((root.graph[soul] || \"\")[key]),\n                            get: {\n                                \"#\": soul,\n                                \".\": key\n                            }\n                        }, peer);\n                    // TODO: Switch this so Book could route?\n                    });\n                });\n            });\n            return mesh;\n        }\n        var empty = {}, ok = true, u;\n        try {\n            module1.exports = Mesh;\n        } catch (e) {}\n    })(USE, \"./mesh\");\n    USE(function(module1) {\n        var Gun1 = USE(\"./index\");\n        Gun1.Mesh = USE(\"./mesh\");\n        // TODO: resync upon reconnect online/offline\n        //window.ononline = window.onoffline = function(){ console.log('online?', navigator.onLine) }\n        Gun1.on(\"opt\", function(root) {\n            this.to.next(root);\n            if (root.once) return;\n            var opt = root.opt;\n            if (false === opt.WebSocket) return;\n            var env = Gun1.window || {};\n            var websocket = opt.WebSocket || env.WebSocket || env.webkitWebSocket || env.mozWebSocket;\n            if (!websocket) return;\n            opt.WebSocket = websocket;\n            var mesh = opt.mesh = opt.mesh || Gun1.Mesh(root);\n            var wire = mesh.wire || opt.wire;\n            mesh.wire = opt.wire = open;\n            function open(peer) {\n                try {\n                    if (!peer || !peer.url) return wire && wire(peer);\n                    var url = peer.url.replace(/^http/, \"ws\");\n                    var wire = peer.wire = new opt.WebSocket(url);\n                    wire.onclose = function() {\n                        reconnect(peer);\n                        opt.mesh.bye(peer);\n                    };\n                    wire.onerror = function(err) {\n                        reconnect(peer);\n                    };\n                    wire.onopen = function() {\n                        opt.mesh.hi(peer);\n                    };\n                    wire.onmessage = function(msg) {\n                        if (!msg) return;\n                        opt.mesh.hear(msg.data || msg, peer);\n                    };\n                    return wire;\n                } catch (e) {\n                    opt.mesh.bye(peer);\n                }\n            }\n            setTimeout(function() {\n                !opt.super && root.on(\"out\", {\n                    dam: \"hi\"\n                });\n            }, 1); // it can take a while to open a socket, so maybe no longer lazy load for perf reasons?\n            var wait = 1998;\n            function reconnect(peer) {\n                clearTimeout(peer.defer);\n                if (!opt.peers[peer.url]) return;\n                if (doc && peer.retry <= 0) return;\n                peer.retry = (peer.retry || opt.retry + 1 || 60) - (-peer.tried + (peer.tried = +new Date) < wait * 4 ? 1 : 0);\n                peer.defer = setTimeout(function to() {\n                    if (doc && doc.hidden) return setTimeout(to, wait);\n                    open(peer);\n                }, wait);\n            }\n            var doc = \"\" + u !== typeof document && document;\n        });\n        var noop = function() {}, u;\n    })(USE, \"./websocket\");\n    USE(function(module1) {\n        if (typeof Gun === \"undefined\") return;\n        var noop = function() {}, store, u;\n        try {\n            store = (Gun.window || noop).localStorage;\n        } catch (e) {}\n        if (!store) {\n            Gun.log(\"Warning: No localStorage exists to persist data to!\");\n            store = {\n                setItem: function(k, v) {\n                    this[k] = v;\n                },\n                removeItem: function(k) {\n                    delete this[k];\n                },\n                getItem: function(k) {\n                    return this[k];\n                }\n            };\n        }\n        var parse = JSON.parseAsync || function(t, cb, r) {\n            var u;\n            try {\n                cb(u, JSON.parse(t, r));\n            } catch (e) {\n                cb(e);\n            }\n        };\n        var json = JSON.stringifyAsync || function(v, cb, r, s) {\n            var u;\n            try {\n                cb(u, JSON.stringify(v, r, s));\n            } catch (e) {\n                cb(e);\n            }\n        };\n        Gun.on(\"create\", function lg(root) {\n            this.to.next(root);\n            var opt = root.opt, graph = root.graph, acks = [], disk, to, size, stop;\n            if (false === opt.localStorage) return;\n            opt.prefix = opt.file || \"gun/\";\n            try {\n                disk = lg[opt.prefix] = lg[opt.prefix] || JSON.parse(size = store.getItem(opt.prefix)) || {}; // TODO: Perf! This will block, should we care, since limited to 5MB anyways?\n            } catch (e) {\n                disk = lg[opt.prefix] = {};\n            }\n            size = (size || \"\").length;\n            root.on(\"get\", function(msg) {\n                this.to.next(msg);\n                var lex = msg.get, soul, data, tmp, u;\n                if (!lex || !(soul = lex[\"#\"])) return;\n                data = disk[soul] || u;\n                if (data && (tmp = lex[\".\"]) && !Object.plain(tmp)) data = Gun.state.ify({}, tmp, Gun.state.is(data, tmp), data[tmp], soul);\n                //if(data){ (tmp = {})[soul] = data } // back into a graph.\n                //setTimeout(function(){\n                Gun.on.get.ack(msg, data); //root.on('in', {'@': msg['#'], put: tmp, lS:1});// || root.$});\n            //}, Math.random() * 10); // FOR TESTING PURPOSES!\n            });\n            root.on(\"put\", function(msg) {\n                this.to.next(msg); // remember to call next middleware adapter\n                var put = msg.put, soul = put[\"#\"], key = put[\".\"], id = msg[\"#\"], ok = msg.ok || \"\", tmp; // pull data off wire envelope\n                disk[soul] = Gun.state.ify(disk[soul], key, put[\">\"], put[\":\"], soul); // merge into disk object\n                if (stop && size > 4999880) {\n                    root.on(\"in\", {\n                        \"@\": id,\n                        err: \"localStorage max!\"\n                    });\n                    return;\n                }\n                //if(!msg['@']){ acks.push(id) } // then ack any non-ack write. // TODO: use batch id.\n                if (!msg[\"@\"] && (!msg._.via || Math.random() < ok[\"@\"] / ok[\"/\"])) acks.push(id);\n                 // then ack any non-ack write. // TODO: use batch id.\n                if (to) return;\n                to = setTimeout(flush, 9 + size / 333); // 0.1MB = 0.3s, 5MB = 15s \n            });\n            function flush() {\n                if (!acks.length && ((setTimeout.turn || \"\").s || \"\").length) {\n                    setTimeout(flush, 99);\n                    return;\n                } // defer if \"busy\" && no saves.\n                var err, ack = acks;\n                clearTimeout(to);\n                to = false;\n                acks = [];\n                json(disk, function(err, tmp) {\n                    try {\n                        !err && store.setItem(opt.prefix, tmp);\n                    } catch (e) {\n                        err = stop = e || \"localStorage failure\";\n                    }\n                    if (err) {\n                        Gun.log(err + \" Consider using GUN's IndexedDB plugin for RAD for more storage space, https://gun.eco/docs/RAD#install\");\n                        root.on(\"localStorage:error\", {\n                            err: err,\n                            get: opt.prefix,\n                            put: disk\n                        });\n                    }\n                    size = tmp.length;\n                    //if(!err && !Object.empty(opt.peers)){ return } // only ack if there are no peers. // Switch this to probabilistic mode\n                    setTimeout.each(ack, function(id) {\n                        root.on(\"in\", {\n                            \"@\": id,\n                            err: err,\n                            ok: 0\n                        }); // localStorage isn't reliable, so make its `ok` code be a low number.\n                    }, 0, 99);\n                });\n            }\n        });\n    })(USE, \"./localStorage\");\n})(); /* BELOW IS TEMPORARY FOR OLD INTERNAL COMPATIBILITY, THEY ARE IMMEDIATELY DEPRECATED AND WILL BE REMOVED IN NEXT VERSION */ \n(function() {\n    var u;\n    if (\"\" + u == typeof Gun) return;\n    var DEP = function(n) {\n        console.warn(\"Warning! Deprecated internal utility will break in next version:\", n);\n    };\n    // Generic javascript utilities.\n    var Type = Gun;\n    //Type.fns = Type.fn = {is: function(fn){ return (!!fn && fn instanceof Function) }}\n    Type.fn = Type.fn || {\n        is: function(fn) {\n            DEP(\"fn\");\n            return !!fn && \"function\" == typeof fn;\n        }\n    };\n    Type.bi = Type.bi || {\n        is: function(b) {\n            DEP(\"bi\");\n            return b instanceof Boolean || typeof b == \"boolean\";\n        }\n    };\n    Type.num = Type.num || {\n        is: function(n) {\n            DEP(\"num\");\n            return !list_is(n) && (n - parseFloat(n) + 1 >= 0 || Infinity === n || -Infinity === n);\n        }\n    };\n    Type.text = Type.text || {\n        is: function(t) {\n            DEP(\"text\");\n            return typeof t == \"string\";\n        }\n    };\n    Type.text.ify = Type.text.ify || function(t) {\n        DEP(\"text.ify\");\n        if (Type.text.is(t)) return t;\n        if (typeof JSON !== \"undefined\") return JSON.stringify(t);\n        return t && t.toString ? t.toString() : t;\n    };\n    Type.text.random = Type.text.random || function(l, c) {\n        DEP(\"text.random\");\n        var s = \"\";\n        l = l || 24; // you are not going to make a 0 length random number, so no need to check type\n        c = c || \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXZabcdefghijklmnopqrstuvwxyz\";\n        while(l > 0){\n            s += c.charAt(Math.floor(Math.random() * c.length));\n            l--;\n        }\n        return s;\n    };\n    Type.text.match = Type.text.match || function(t, o) {\n        var tmp, u;\n        DEP(\"text.match\");\n        if (\"string\" !== typeof t) return false;\n        if (\"string\" == typeof o) o = {\n            \"=\": o\n        };\n        o = o || {};\n        tmp = o[\"=\"] || o[\"*\"] || o[\">\"] || o[\"<\"];\n        if (t === tmp) return true;\n        if (u !== o[\"=\"]) return false;\n        tmp = o[\"*\"] || o[\">\"] || o[\"<\"];\n        if (t.slice(0, (tmp || \"\").length) === tmp) return true;\n        if (u !== o[\"*\"]) return false;\n        if (u !== o[\">\"] && u !== o[\"<\"]) return t >= o[\">\"] && t <= o[\"<\"] ? true : false;\n        if (u !== o[\">\"] && t >= o[\">\"]) return true;\n        if (u !== o[\"<\"] && t <= o[\"<\"]) return true;\n        return false;\n    };\n    Type.text.hash = Type.text.hash || function(s, c) {\n        DEP(\"text.hash\");\n        if (typeof s !== \"string\") return;\n        c = c || 0;\n        if (!s.length) return c;\n        for(var i = 0, l = s.length, n; i < l; ++i){\n            n = s.charCodeAt(i);\n            c = (c << 5) - c + n;\n            c |= 0;\n        }\n        return c;\n    };\n    Type.list = Type.list || {\n        is: function(l) {\n            DEP(\"list\");\n            return l instanceof Array;\n        }\n    };\n    Type.list.slit = Type.list.slit || Array.prototype.slice;\n    Type.list.sort = Type.list.sort || function(k) {\n        DEP(\"list.sort\");\n        return function(A, B) {\n            if (!A || !B) return 0;\n            A = A[k];\n            B = B[k];\n            if (A < B) return -1;\n            else if (A > B) return 1;\n            else return 0;\n        };\n    };\n    Type.list.map = Type.list.map || function(l, c, _) {\n        DEP(\"list.map\");\n        return obj_map(l, c, _);\n    };\n    Type.list.index = 1; // change this to 0 if you want non-logical, non-mathematical, non-matrix, non-convenient array notation\n    Type.obj = Type.boj || {\n        is: function(o) {\n            DEP(\"obj\");\n            return o ? o instanceof Object && o.constructor === Object || Object.prototype.toString.call(o).match(/^\\[object (\\w+)\\]$/)[1] === \"Object\" : false;\n        }\n    };\n    Type.obj.put = Type.obj.put || function(o, k, v) {\n        DEP(\"obj.put\");\n        return (o || {})[k] = v, o;\n    };\n    Type.obj.has = Type.obj.has || function(o, k) {\n        DEP(\"obj.has\");\n        return o && Object.prototype.hasOwnProperty.call(o, k);\n    };\n    Type.obj.del = Type.obj.del || function(o, k) {\n        DEP(\"obj.del\");\n        if (!o) return;\n        o[k] = null;\n        delete o[k];\n        return o;\n    };\n    Type.obj.as = Type.obj.as || function(o, k, v, u) {\n        DEP(\"obj.as\");\n        return o[k] = o[k] || (u === v ? {} : v);\n    };\n    Type.obj.ify = Type.obj.ify || function(o) {\n        DEP(\"obj.ify\");\n        if (obj_is(o)) return o;\n        try {\n            o = JSON.parse(o);\n        } catch (e) {\n            o = {};\n        }\n        return o;\n    };\n    (function() {\n        var u;\n        function map(v, k) {\n            if (obj_has(this, k) && u !== this[k]) return;\n            this[k] = v;\n        }\n        Type.obj.to = Type.obj.to || function(from, to) {\n            DEP(\"obj.to\");\n            to = to || {};\n            obj_map(from, map, to);\n            return to;\n        };\n    })();\n    Type.obj.copy = Type.obj.copy || function(o) {\n        DEP(\"obj.copy\"); // because http://web.archive.org/web/20140328224025/http://jsperf.com/cloning-an-object/2\n        return !o ? o : JSON.parse(JSON.stringify(o)); // is shockingly faster than anything else, and our data has to be a subset of JSON anyways!\n    };\n    (function() {\n        function empty(v, i) {\n            var n = this.n, u;\n            if (n && (i === n || obj_is(n) && obj_has(n, i))) return;\n            if (u !== i) return true;\n        }\n        Type.obj.empty = Type.obj.empty || function(o, n) {\n            DEP(\"obj.empty\");\n            if (!o) return true;\n            return obj_map(o, empty, {\n                n: n\n            }) ? false : true;\n        };\n    })();\n    (function() {\n        function t(k, v) {\n            if (2 === arguments.length) {\n                t.r = t.r || {};\n                t.r[k] = v;\n                return;\n            }\n            t.r = t.r || [];\n            t.r.push(k);\n        }\n        var keys = Object.keys, map, u;\n        Object.keys = Object.keys || function(o) {\n            return map(o, function(v, k, t) {\n                t(k);\n            });\n        };\n        Type.obj.map = map = Type.obj.map || function(l, c, _) {\n            DEP(\"obj.map\");\n            var u, i = 0, x, r, ll, lle, f = \"function\" == typeof c;\n            t.r = u;\n            if (keys && obj_is(l)) {\n                ll = keys(l);\n                lle = true;\n            }\n            _ = _ || {};\n            if (list_is(l) || ll) {\n                x = (ll || l).length;\n                for(; i < x; i++){\n                    var ii = i + Type.list.index;\n                    if (f) {\n                        r = lle ? c.call(_, l[ll[i]], ll[i], t) : c.call(_, l[i], ii, t);\n                        if (r !== u) return r;\n                    } else {\n                        //if(Type.test.is(c,l[i])){ return ii } // should implement deep equality testing!\n                        if (c === l[lle ? ll[i] : i]) return ll ? ll[i] : ii;\n                         // use this for now\n                    }\n                }\n            } else for(i in l){\n                if (f) {\n                    if (obj_has(l, i)) {\n                        r = _ ? c.call(_, l[i], i, t) : c(l[i], i, t);\n                        if (r !== u) return r;\n                    }\n                } else {\n                    //if(a.test.is(c,l[i])){ return i } // should implement deep equality testing!\n                    if (c === l[i]) return i;\n                     // use this for now\n                }\n            }\n            return f ? t.r : Type.list.index ? 0 : -1;\n        };\n    })();\n    Type.time = Type.time || {};\n    Type.time.is = Type.time.is || function(t) {\n        DEP(\"time\");\n        return t ? t instanceof Date : +new Date().getTime();\n    };\n    var fn_is = Type.fn.is;\n    var list_is = Type.list.is;\n    var obj = Type.obj, obj_is = obj.is, obj_has = obj.has, obj_map = obj.map;\n    var Val = {};\n    Val.is = function(v) {\n        DEP(\"val.is\"); // Valid values are a subset of JSON: null, binary, number (!Infinity), text, or a soul relation. Arrays need special algorithms to handle concurrency, so they are not supported directly. Use an extension that supports them if needed but research their problems first.\n        if (v === u) return false;\n        if (v === null) return true;\n         // \"deletes\", nulling out keys.\n        if (v === Infinity) return false;\n         // we want this to be, but JSON does not support it, sad face.\n        if (text_is(v) // by \"text\" we mean strings.\n         || bi_is(v) // by \"binary\" we mean boolean.\n         || num_is(v)) return true; // simple values are valid.\n        return Val.link.is(v) || false; // is the value a soul relation? Then it is valid and return it. If not, everything else remaining is an invalid data type. Custom extensions can be built on top of these primitives to support other types.\n    };\n    Val.link = Val.rel = {\n        _: \"#\"\n    };\n    (function() {\n        Val.link.is = function(v) {\n            DEP(\"val.link.is\"); // this defines whether an object is a soul relation or not, they look like this: {'#': 'UUID'}\n            if (v && v[rel_] && !v._ && obj_is(v)) {\n                var o = {};\n                obj_map(v, map, o);\n                if (o.id) return o.id; // yay! Return it.\n            }\n            return false; // the value was not a valid soul relation.\n        };\n        function map(s, k) {\n            var o = this; // map over the object...\n            if (o.id) return o.id = false;\n             // if ID is already defined AND we're still looping through the object, it is considered invalid.\n            if (k == rel_ && text_is(s)) o.id = s; // we found the soul!\n            else return o.id = false; // if there exists anything else on the object that isn't the soul, then it is considered invalid.\n        }\n    })();\n    Val.link.ify = function(t) {\n        DEP(\"val.link.ify\");\n        return obj_put({}, rel_, t);\n    } // convert a soul into a relation and return it.\n    ;\n    Type.obj.has._ = \".\";\n    var rel_ = Val.link._, u;\n    var bi_is = Type.bi.is;\n    var num_is = Type.num.is;\n    var text_is = Type.text.is;\n    var obj = Type.obj, obj_is = obj.is, obj_put = obj.put, obj_map = obj.map;\n    Type.val = Type.val || Val;\n    var Node = {\n        _: \"_\"\n    };\n    Node.soul = function(n, o) {\n        DEP(\"node.soul\");\n        return n && n._ && n._[o || soul_];\n    } // convenience function to check to see if there is a soul on a node and return it.\n    ;\n    Node.soul.ify = function(n, o) {\n        DEP(\"node.soul.ify\"); // put a soul on an object.\n        o = typeof o === \"string\" ? {\n            soul: o\n        } : o || {};\n        n = n || {}; // make sure it exists.\n        n._ = n._ || {}; // make sure meta exists.\n        n._[soul_] = o.soul || n._[soul_] || text_random(); // put the soul on it.\n        return n;\n    };\n    Node.soul._ = Val.link._;\n    (function() {\n        Node.is = function(n, cb, as) {\n            DEP(\"node.is\");\n            var s; // checks to see if an object is a valid node.\n            if (!obj_is(n)) return false;\n             // must be an object.\n            if (s = Node.soul(n)) return !obj_map(n, map, {\n                as: as,\n                cb: cb,\n                s: s,\n                n: n\n            });\n            return false; // nope! This was not a valid node.\n        };\n        function map(v, k) {\n            if (k === Node._) return;\n             // skip over the metadata.\n            if (!Val.is(v)) return true;\n             // it is true that this is an invalid node.\n            if (this.cb) this.cb.call(this.as, v, k, this.n, this.s);\n             // optionally callback each key/value.\n        }\n    })();\n    (function() {\n        Node.ify = function(obj, o, as) {\n            DEP(\"node.ify\"); // returns a node from a shallow object.\n            if (!o) o = {};\n            else if (typeof o === \"string\") o = {\n                soul: o\n            };\n            else if (\"function\" == typeof o) o = {\n                map: o\n            };\n            if (o.map) o.node = o.map.call(as, obj, u, o.node || {});\n            if (o.node = Node.soul.ify(o.node || {}, o)) obj_map(obj, map, {\n                o: o,\n                as: as\n            });\n            return o.node; // This will only be a valid node if the object wasn't already deep!\n        };\n        function map(v, k) {\n            var o = this.o, tmp, u; // iterate over each key/value.\n            if (o.map) {\n                tmp = o.map.call(this.as, v, \"\" + k, o.node);\n                if (u === tmp) obj_del(o.node, k);\n                else if (o.node) o.node[k] = tmp;\n                return;\n            }\n            if (Val.is(v)) o.node[k] = v;\n        }\n    })();\n    var obj = Type.obj, obj_is = obj.is, obj_del = obj.del, obj_map = obj.map;\n    var text = Type.text, text_random = text.random;\n    var soul_ = Node.soul._;\n    var u;\n    Type.node = Type.node || Node;\n    var State = Type.state;\n    State.lex = function() {\n        DEP(\"state.lex\");\n        return State().toString(36).replace(\".\", \"\");\n    };\n    State.to = function(from, k, to) {\n        DEP(\"state.to\");\n        var val = (from || {})[k];\n        if (obj_is(val)) val = obj_copy(val);\n        return State.ify(to, k, State.is(from, k), val, Node.soul(from));\n    };\n    (function() {\n        State.map = function(cb, s, as) {\n            DEP(\"state.map\");\n            var u; // for use with Node.ify\n            var o = obj_is(o = cb || s) ? o : null;\n            cb = fn_is(cb = cb || s) ? cb : null;\n            if (o && !cb) {\n                s = num_is(s) ? s : State();\n                o[N_] = o[N_] || {};\n                obj_map(o, map, {\n                    o: o,\n                    s: s\n                });\n                return o;\n            }\n            as = as || obj_is(s) ? s : u;\n            s = num_is(s) ? s : State();\n            return function(v, k, o, opt) {\n                if (!cb) {\n                    map.call({\n                        o: o,\n                        s: s\n                    }, v, k);\n                    return v;\n                }\n                cb.call(as || this || {}, v, k, o, opt);\n                if (obj_has(o, k) && u === o[k]) return;\n                map.call({\n                    o: o,\n                    s: s\n                }, v, k);\n            };\n        };\n        function map(v, k) {\n            if (N_ === k) return;\n            State.ify(this.o, k, this.s);\n        }\n    })();\n    var obj = Type.obj, obj_as = obj.as, obj_has = obj.has, obj_is = obj.is, obj_map = obj.map, obj_copy = obj.copy;\n    var num = Type.num, num_is = num.is;\n    var fn = Type.fn, fn_is = fn.is;\n    var N_ = Node._, u;\n    var Graph = {};\n    (function() {\n        Graph.is = function(g, cb, fn, as) {\n            DEP(\"graph.is\"); // checks to see if an object is a valid graph.\n            if (!g || !obj_is(g) || obj_empty(g)) return false;\n             // must be an object.\n            return !obj_map(g, map, {\n                cb: cb,\n                fn: fn,\n                as: as\n            }); // makes sure it wasn't an empty object.\n        };\n        function map(n, s) {\n            if (!n || s !== Node.soul(n) || !Node.is(n, this.fn, this.as)) return true;\n             // it is true that this is an invalid graph.\n            if (!this.cb) return;\n            nf.n = n;\n            nf.as = this.as; // sequential race conditions aren't races.\n            this.cb.call(nf.as, n, s, nf);\n        }\n        function nf(fn) {\n            if (fn) Node.is(nf.n, fn, nf.as);\n             // where we then have an optional callback for each key/value.\n        }\n    })();\n    (function() {\n        Graph.ify = function(obj, env, as) {\n            DEP(\"graph.ify\");\n            var at = {\n                path: [],\n                obj: obj\n            };\n            if (!env) env = {};\n            else if (typeof env === \"string\") env = {\n                soul: env\n            };\n            else if (\"function\" == typeof env) env.map = env;\n            if (typeof as === \"string\") {\n                env.soul = env.soul || as;\n                as = u;\n            }\n            if (env.soul) at.link = Val.link.ify(env.soul);\n            env.shell = (as || {}).shell;\n            env.graph = env.graph || {};\n            env.seen = env.seen || [];\n            env.as = env.as || as;\n            node(env, at);\n            env.root = at.node;\n            return env.graph;\n        };\n        function node(env, at) {\n            var tmp;\n            if (tmp = seen(env, at)) return tmp;\n            at.env = env;\n            at.soul = soul;\n            if (Node.ify(at.obj, map, at)) {\n                at.link = at.link || Val.link.ify(Node.soul(at.node));\n                if (at.obj !== env.shell) env.graph[Val.link.is(at.link)] = at.node;\n            }\n            return at;\n        }\n        function map(v, k, n) {\n            var at = this, env = at.env, is, tmp;\n            if (Node._ === k && obj_has(v, Val.link._)) return n._; // TODO: Bug?\n            if (!(is = valid(v, k, n, at, env))) return;\n            if (!k) {\n                at.node = at.node || n || {};\n                if (obj_has(v, Node._) && Node.soul(v)) at.node._ = obj_copy(v._);\n                at.node = Node.soul.ify(at.node, Val.link.is(at.link));\n                at.link = at.link || Val.link.ify(Node.soul(at.node));\n            }\n            if (tmp = env.map) {\n                tmp.call(env.as || {}, v, k, n, at);\n                if (obj_has(n, k)) {\n                    v = n[k];\n                    if (u === v) {\n                        obj_del(n, k);\n                        return;\n                    }\n                    if (!(is = valid(v, k, n, at, env))) return;\n                }\n            }\n            if (!k) return at.node;\n            if (true === is) return v;\n            tmp = node(env, {\n                obj: v,\n                path: at.path.concat(k)\n            });\n            if (!tmp.node) return;\n            return tmp.link; //{'#': Node.soul(tmp.node)};\n        }\n        function soul(id) {\n            var at = this;\n            var prev = Val.link.is(at.link), graph = at.env.graph;\n            at.link = at.link || Val.link.ify(id);\n            at.link[Val.link._] = id;\n            if (at.node && at.node[Node._]) at.node[Node._][Val.link._] = id;\n            if (obj_has(graph, prev)) {\n                graph[id] = graph[prev];\n                obj_del(graph, prev);\n            }\n        }\n        function valid(v, k, n, at, env) {\n            var tmp;\n            if (Val.is(v)) return true;\n            if (obj_is(v)) return 1;\n            if (tmp = env.invalid) {\n                v = tmp.call(env.as || {}, v, k, n);\n                return valid(v, k, n, at, env);\n            }\n            env.err = \"Invalid value at '\" + at.path.concat(k).join(\".\") + \"'!\";\n            if (Type.list.is(v)) env.err += \" Use `.set(item)` instead of an Array.\";\n        }\n        function seen(env, at) {\n            var arr = env.seen, i = arr.length, has;\n            while(i--){\n                has = arr[i];\n                if (at.obj === has.obj) return has;\n            }\n            arr.push(at);\n        }\n    })();\n    Graph.node = function(node) {\n        DEP(\"graph.node\");\n        var soul = Node.soul(node);\n        if (!soul) return;\n        return obj_put({}, soul, node);\n    };\n    (function() {\n        Graph.to = function(graph, root, opt) {\n            DEP(\"graph.to\");\n            if (!graph) return;\n            var obj = {};\n            opt = opt || {\n                seen: {}\n            };\n            obj_map(graph[root], map, {\n                obj: obj,\n                graph: graph,\n                opt: opt\n            });\n            return obj;\n        };\n        function map(v, k) {\n            var tmp, obj;\n            if (Node._ === k) {\n                if (obj_empty(v, Val.link._)) return;\n                this.obj[k] = obj_copy(v);\n                return;\n            }\n            if (!(tmp = Val.link.is(v))) {\n                this.obj[k] = v;\n                return;\n            }\n            if (obj = this.opt.seen[tmp]) {\n                this.obj[k] = obj;\n                return;\n            }\n            this.obj[k] = this.opt.seen[tmp] = Graph.to(this.graph, tmp, this.opt);\n        }\n    })();\n    var fn_is = Type.fn.is;\n    var obj = Type.obj, obj_is = obj.is, obj_del = obj.del, obj_has = obj.has, obj_empty = obj.empty, obj_put = obj.put, obj_map = obj.map, obj_copy = obj.copy;\n    var u;\n    Type.graph = Type.graph || Graph;\n})();\n\n});\n\nvar $f2978c0beb25fdc9$exports = {};\n\n$f2978c0beb25fdc9$exports = (parcelRequire(\"bn4Dc\"));\n\n\n// aes-gcm-helpers.js\n// Function to generate an AES-GCM key\nasync function $1fed304a9d21047d$export$3a7728e868aa3ebd() {\n    return crypto.subtle.generateKey({\n        name: \"AES-GCM\",\n        length: 256\n    }, true, // whether the key is extractable (i.e. can be used in exportKey)\n    [\n        \"encrypt\",\n        \"decrypt\"\n    ] // can \"encrypt\" and \"decrypt\"\n    );\n}\nasync function $1fed304a9d21047d$export$cfb0e8a6f536315e(key, data) {\n    const encodedData = new TextEncoder().encode(JSON.stringify(data));\n    const iv = crypto.getRandomValues(new Uint8Array(12)); // Initialization Vector\n    const encryptedData = await crypto.subtle.encrypt({\n        name: \"AES-GCM\",\n        iv: iv\n    }, key, encodedData);\n    return {\n        iv: iv,\n        encryptedData: encryptedData\n    };\n}\nasync function $1fed304a9d21047d$export$989b3bbdce9ac2d4(key, iv, encryptedData) {\n    const decryptedData = await crypto.subtle.decrypt({\n        name: \"AES-GCM\",\n        iv: iv\n    }, key, encryptedData);\n    return JSON.parse(new TextDecoder().decode(decryptedData));\n}\nasync function $1fed304a9d21047d$export$7904c6256691057a(data) {\n    const encodedData = new TextEncoder().encode(data);\n    const hashBuffer = await crypto.subtle.digest(\"SHA-256\", encodedData);\n    return new Uint8Array(hashBuffer);\n}\nfunction $1fed304a9d21047d$export$c48fc777188c96e3(buffer) {\n    return Array.prototype.map.call(buffer, (x)=>(\"00\" + x.toString(16)).slice(-2)).join(\"\");\n}\nfunction $1fed304a9d21047d$export$de4231026bca1594(hex) {\n    const length = hex.length / 2;\n    const buffer = new Uint8Array(length);\n    for(let i = 0; i < length; i++)buffer[i] = parseInt(hex.substr(i * 2, 2), 16);\n    return buffer;\n}\n\n\nconst $5373e622fde9ea23$var$reactive = new WeakMap();\nconst $5373e622fde9ea23$var$registerReactive = $5373e622fde9ea23$var$reactive.set.bind($5373e622fde9ea23$var$reactive);\nconst $5373e622fde9ea23$export$352205f445242f02 = $5373e622fde9ea23$var$reactive.has.bind($5373e622fde9ea23$var$reactive);\nconst $5373e622fde9ea23$export$f664a1e17c3f0b8 = $5373e622fde9ea23$var$reactive.get.bind($5373e622fde9ea23$var$reactive);\nconst $5373e622fde9ea23$var$apply = (fn)=>fn();\nconst $5373e622fde9ea23$var$observable = ()=>{\n    const listeners = new Set();\n    const notify = (value)=>{\n        for (const listener of listeners){\n            console.log({\n                listener: listener,\n                listeners: listeners\n            });\n            listener(value);\n        }\n    };\n    const subscribe = (listener)=>{\n        listeners.add(listener);\n        return ()=>{\n            listeners.remove(listeners);\n        };\n    };\n    return {\n        notify: notify,\n        subscribe: subscribe\n    };\n};\nconst $5373e622fde9ea23$export$ca000e230c0caa3e = (value)=>{\n    const { notify: notify, subscribe: subscribe } = $5373e622fde9ea23$var$observable();\n    const getter = ()=>value;\n    const setter = (newVal)=>{\n        if (value !== newVal) {\n            value = newVal;\n            notify(value);\n        }\n    };\n    $5373e622fde9ea23$var$registerReactive(getter, subscribe);\n    return [\n        getter,\n        setter\n    ];\n};\nconst $5373e622fde9ea23$var$initDeps = (deps, handler)=>deps.map((dep)=>$5373e622fde9ea23$export$352205f445242f02(dep) ? ($5373e622fde9ea23$export$f664a1e17c3f0b8(dep)(handler), dep) : ()=>dep);\nconst $5373e622fde9ea23$export$2983e091f1a1e8e2 = (expr, deps)=>{\n    const { notify: notify, subscribe: subscribe } = $5373e622fde9ea23$var$observable();\n    let cache, cached = false;\n    const invalidate = ()=>{\n        cached = false;\n        notify();\n    };\n    const getter = ()=>{\n        if (!cached) {\n            cache = expr(...args.map($5373e622fde9ea23$var$apply));\n            cached = true;\n        }\n        return cache;\n    };\n    const args = $5373e622fde9ea23$var$initDeps(deps, invalidate);\n    $5373e622fde9ea23$var$registerReactive(getter, subscribe);\n    return getter;\n};\nlet $5373e622fde9ea23$var$effectInProgress = false;\nconst $5373e622fde9ea23$var$cleanupEffects = ()=>{\n    $5373e622fde9ea23$var$effects.forEach($5373e622fde9ea23$var$apply);\n    $5373e622fde9ea23$var$effects.length = 0;\n    $5373e622fde9ea23$var$effectsScheduled = false;\n};\nconst $5373e622fde9ea23$var$wrapEffect = (effect)=>()=>{\n        const effectCache = $5373e622fde9ea23$var$effectInProgress;\n        $5373e622fde9ea23$var$effectInProgress = true;\n        effect();\n        $5373e622fde9ea23$var$effectInProgress = effectCache;\n    };\nconst $5373e622fde9ea23$var$effects = [];\nlet $5373e622fde9ea23$var$effectsScheduled = false;\nconst $5373e622fde9ea23$export$dc573d8a6576cdb3 = (handler, deps)=>{\n    let cleanup, scheduled = false;\n    const effect = $5373e622fde9ea23$var$wrapEffect(()=>{\n        // cleanup?.() // maybe here\n        cleanup = handler(...args.map($5373e622fde9ea23$var$apply));\n        scheduled = false;\n    }); // problem: ...args initialization\n    const args = $5373e622fde9ea23$var$initDeps(deps, ()=>{\n        if (!scheduled) {\n            cleanup?.(); // or here\n            scheduled = true;\n            $5373e622fde9ea23$var$effects.push(effect);\n            $5373e622fde9ea23$var$effectsScheduled || queueMicrotask($5373e622fde9ea23$var$cleanupEffects);\n        }\n    });\n};\n\n\nvar $b7c09da4321996c3$export$2e2bcd8739ae039 = (HtmlPage)=>{\n    // const [passkey, setPasskey] = state(\"\")\n    // const maskedPasskey = computed(\n    //   passkey => passkey.join(\"\").replaceAll(/.{1}/gi, \"•\"),\n    //   [passkey]\n    // )\n    // const style = computed(passkey => `--content: \"${passkey.join(\"\") || \"_\"}\"`, [passkey])\n    // const handlePasskey = (event) => {\n    //   const { target: { value, selectionStart }, data } = event\n    //   const p = [...passkey()]\n    //   console.log(data, value, selectionStart, event)\n    //   data\n    //     ? p.splice(selectionStart - 1, value.length > p.length ? 0 : p.length - value.length + 1, data)\n    //     : p.splice(selectionStart, p.length - value.length)\n    //   setPasskey(p)\n    //   // event.target.value = value.replaceAll(/.{1}/gi, \"•\")\n    //   event.target.setSelectionRange(selectionStart, selectionStart)\n    // }\n    return h(HtmlPage, null, h(\"div\", {\n        class: \"login-screen\"\n    }, h(\"label\", {\n        class: \"passkey-label\"\n    }, \"Enter your passkey:\"), false, h(frag, null, h(\"br\", null), h(frag, null, h(\"br\", null), h(\"input\", {\n        class: \"passkey-input\",\n        type: \"text\",\n        autocomplete: \"off\"\n    }))), h(\"br\", null), h(frag, null, h(\"br\", null), h(\"button\", {\n        class: \"passkey-submit-button\",\n        onclick: ()=>alert(\"Pero\")\n    }, \"Go Man, Go!\"), h(\"div\", {\n        class: \"passkey-preview\"\n    }))));\n};\n\n\nconst $2054ae0330e74516$var$simplePage = (content)=>()=>(Html)=>h(Html, null, content);\nvar $2054ae0330e74516$export$2e2bcd8739ae039 = {\n    \"/\": (0, $b7c09da4321996c3$export$2e2bcd8739ae039),\n    \"(.*)\": $2054ae0330e74516$var$simplePage(\"404 - Not found\")\n};\n\n\nconst $4b7cb130d6b5df81$var$REGEX_PARAM_DEFAULT = /^[^/]+/;\nconst $4b7cb130d6b5df81$var$REGEX_START_WITH_PARAM = /^(:\\w|\\()/;\nconst $4b7cb130d6b5df81$var$REGEX_INCLUDE_PARAM = /:\\w|\\(/;\nconst $4b7cb130d6b5df81$var$REGEX_MATCH_PARAM = /^(?::(\\w+))?(?:\\(([^)]+)\\))?/;\nclass $4b7cb130d6b5df81$var$Router {\n    constructor(routes){\n        this.root = this.createNode();\n        if (routes) Object.entries(routes).forEach((route)=>this.add(...route));\n    }\n    createNode({ regex: regex, param: param, handler: handler } = {}) {\n        return {\n            regex: regex,\n            param: param,\n            handler: handler,\n            children: {\n                string: {},\n                regex: {}\n            }\n        };\n    }\n    add(pattern, handler) {\n        this.parseOptim(pattern, handler, this.root);\n        return this;\n    }\n    parseOptim(remain, handler, node) {\n        if ($4b7cb130d6b5df81$var$REGEX_INCLUDE_PARAM.test(remain)) this.parse(remain, handler, node);\n        else {\n            const child = node.children.string[remain];\n            if (child) child.handler = handler;\n            else node.children.string[remain] = this.createNode({\n                handler: handler\n            });\n        }\n    }\n    parse(remain, handler, parent) {\n        if ($4b7cb130d6b5df81$var$REGEX_START_WITH_PARAM.test(remain)) {\n            const match = remain.match($4b7cb130d6b5df81$var$REGEX_MATCH_PARAM);\n            if (match) {\n                let node = parent.children.regex[match[0]];\n                if (!node) node = parent.children.regex[match[0]] = this.createNode({\n                    regex: match[2] ? new RegExp(\"^\" + match[2]) : $4b7cb130d6b5df81$var$REGEX_PARAM_DEFAULT,\n                    param: match[1]\n                });\n                if (match[0].length === remain.length) node.handler = handler;\n                else this.parseOptim(remain.slice(match[0].length), handler, node);\n            }\n        } else {\n            const char = remain[0];\n            let node = parent.children.string[char];\n            if (!node) node = parent.children.string[char] = this.createNode();\n            this.parse(remain.slice(1), handler, node);\n        }\n    }\n    find(path) {\n        return this.findOptim(path, this.root, {});\n    }\n    findOptim(remain, node, params) {\n        const child = node.children.string[remain];\n        if (child && child.handler !== undefined) return {\n            handler: child.handler,\n            params: params\n        };\n        return this.findRecursive(remain, node, params);\n    }\n    findRecursive(remain, node, params) {\n        let child = node.children.string[remain[0]];\n        if (child) {\n            const result = this.findRecursive(remain.slice(1), child, params);\n            if (result) return result;\n        }\n        for(const k in node.children.regex){\n            child = node.children.regex[k];\n            if (child.regex) {\n                const match = remain.match(child.regex);\n                if (match) {\n                    if (match[0].length === remain.length && child.handler !== undefined) {\n                        if (child.param) params[child.param] = decodeURIComponent(match[0]);\n                        return {\n                            handler: child.handler,\n                            params: params\n                        };\n                    } else {\n                        const result = this.findOptim(remain.slice(match[0].length), child, params);\n                        if (result) {\n                            if (child.param) params[child.param] = decodeURIComponent(match[0]);\n                            return result;\n                        }\n                    }\n                }\n            }\n        }\n        return null;\n    }\n}\nvar $4b7cb130d6b5df81$export$2e2bcd8739ae039 = $4b7cb130d6b5df81$var$Router;\n\n\nconst $5013ee11ca2270f9$var$renderPage = (HtmlPageTemplate, handler)=>([key, Page])=>[\n            key,\n            handler.bind(null, Page(HtmlPageTemplate))\n        ];\nconst $5013ee11ca2270f9$export$baddd0131ee8c05b = (HtmlPageTemplate, handler, routes)=>{\n    const router = new (0, $4b7cb130d6b5df81$export$2e2bcd8739ae039)(Object.fromEntries(Object.entries(routes).map($5013ee11ca2270f9$var$renderPage(HtmlPageTemplate, handler))));\n    return (url)=>{\n        const match = router.find(url);\n        console.log({\n            match: match\n        });\n        return match.handler(match.params);\n    };\n};\n\n\nconst $25e983ec92c90903$var$escapeAttr = (attr)=>attr && attr.replace(/(?<!\\\\)\"/g, '\\\\\"');\nconst $25e983ec92c90903$var$escapeTextNode = (text)=>text.replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\");\nconst $25e983ec92c90903$var$voidElements = new Set([\n    \"area\",\n    \"base\",\n    \"br\",\n    \"col\",\n    \"embed\",\n    \"hr\",\n    \"img\",\n    \"input\",\n    \"link\",\n    \"meta\",\n    \"source\",\n    \"track\",\n    \"wbr\"\n]);\nconst $25e983ec92c90903$var$printAttr = ([key, value])=>{\n    switch(typeof value){\n        case \"string\":\n            return ` ${key}=\"${$25e983ec92c90903$var$escapeAttr(value)}\"`;\n        case \"number\":\n            return ` ${key}=\"${value}\"`;\n        default:\n            return value === true ? ` ${key}` : \"\";\n    }\n};\nconst $25e983ec92c90903$var$printAttrs = (props)=>props ? Object.entries(props).map($25e983ec92c90903$var$printAttr).join(\"\") : \"\";\nconst $25e983ec92c90903$var$printJSX = ({ tag: tag, props: props, children: children })=>{\n    switch(typeof tag){\n        case \"string\":\n            return `<${tag}${$25e983ec92c90903$var$printAttrs(props)}${!$25e983ec92c90903$var$voidElements.has(tag) ? `>${children.map($25e983ec92c90903$export$c2d084dc44961371).join(\"\")}</${tag}>` : ` />`}`;\n        case \"function\":\n            return $25e983ec92c90903$export$c2d084dc44961371(tag({\n                props: props,\n                children: children\n            }));\n        case \"object\":\n            if (tag == null) return $25e983ec92c90903$export$c2d084dc44961371(children);\n    }\n};\nconst $25e983ec92c90903$export$c2d084dc44961371 = (vdom)=>{\n    if (Array.isArray(vdom)) return vdom.map($25e983ec92c90903$export$c2d084dc44961371).join(\"\");\n    switch(vdom){\n        case true:\n        case false:\n        case null:\n        case undefined:\n            return \"\";\n    }\n    return typeof vdom === \"string\" ? $25e983ec92c90903$var$escapeTextNode(vdom) : $25e983ec92c90903$var$printJSX(vdom);\n};\nconst $25e983ec92c90903$export$52c9890d8bfd24b9 = (vdom)=>`<!DOCTYPE html>${$25e983ec92c90903$export$c2d084dc44961371(vdom)}`;\n\n\n\nconst $5736268d46219ac1$export$6642944bbb0750ae = (documentRoot)=>(vdom)=>$5736268d46219ac1$var$mount(documentRoot.childNodes[1], vdom, 0, documentRoot);\nconst $5736268d46219ac1$var$registerEvent = (target, key, value)=>target[key] = value;\nconst $5736268d46219ac1$var$syncAttr = (target, key)=>(value)=>{\n        switch(typeof value){\n            case \"string\":\n            case \"number\":\n                return target.setAttribute(key, value);\n            default:\n                return value === true ? target.setAttribute(key, \"\") : target.removeAttribute(key);\n        }\n    };\nconst $5736268d46219ac1$var$mountAttrs = (target, props)=>{\n    // skip syncs for now\n    for (const [key, value] of Object.entries(props))switch(typeof value){\n        case \"function\":\n            if ((0, $5373e622fde9ea23$export$352205f445242f02)(value)) (0, $5373e622fde9ea23$export$dc573d8a6576cdb3)((value)=>{\n                target.setAttribute(key, value);\n            }, [\n                value\n            ]);\n            else if (key[0] === \"o\" && key[1] === \"n\") {\n                target[key] = value;\n                break;\n            }\n    }\n};\nconst $5736268d46219ac1$var$mountJSX = (target, vdom, indexOffset = 0, parent, parentContext)=>{\n    const { tag: tag, props: props, children: children } = vdom;\n    const context = vdom.context = {\n        vdom: vdom,\n        parent: parent,\n        target: target,\n        prev: null,\n        next: null,\n        prevTarget: null,\n        nextTarget: null\n    };\n    switch(typeof tag){\n        case \"string\":\n            Object.keys(props).length && $5736268d46219ac1$var$mountAttrs(target, props);\n            if (children.length) {\n                const { childNodes: childNodes } = target ?? {};\n                return children.reduce((indexOffset, child)=>$5736268d46219ac1$var$mount(childNodes[indexOffset], child, indexOffset, target, context) + 1, 0), indexOffset;\n            }\n            return indexOffset;\n        case \"function\":\n            return $5736268d46219ac1$var$mount(target, tag({\n                props: props,\n                children: children\n            }), indexOffset, parent, context);\n        case \"object\":\n            if (tag == null) return $5736268d46219ac1$var$mount(target, children, indexOffset, parent, context);\n        default:\n            return indexOffset;\n    }\n};\nconst $5736268d46219ac1$var$mount = (target, vdom, indexOffset = 0, parent, parentContext)=>{\n    if (Array.isArray(vdom)) {\n        const { childNodes: childNodes } = parent;\n        return vdom.reduce((indexOffset, vdom, i)=>$5736268d46219ac1$var$mount(childNodes[indexOffset], vdom, indexOffset, parent, parentContext) + 1, indexOffset) - 1;\n    }\n    switch(vdom){\n        case true:\n        case false:\n        case null:\n        case undefined:\n            return indexOffset - 1;\n    }\n    switch(typeof vdom){\n        case \"string\":\n        case \"number\":\n            // TODO: handle multimple text nodes, for example: asdf {someVar} bsd\n            return indexOffset;\n        // TODO: add syncJSX => isReactive -> effect(syncJSX)\n        default:\n            return $5736268d46219ac1$var$mountJSX(target, vdom, indexOffset, parent, parentContext);\n    }\n// return typeof vdom === \"string\"\n//   ? indexOffset\n//   : mountJSX(target, vdom, indexOffset, parent)\n}; // Next Big TODOs:\n // ===============\n // Figure out text node one to meny mounting\n // add the context to VDOM trees (double linked lists)\n\n\nconst $cbef3f91ba6dd3f5$export$dda1d9f60106f0e9 = (tag, props, ...children)=>({\n        tag: tag,\n        props: props || {},\n        children: children\n    });\nconst $cbef3f91ba6dd3f5$export$6a2d9549213d3666 = ({ props: props, children: children })=>({\n        tag: null,\n        props: props,\n        children: children\n    });\n\n\nconst $f61e82ad6902d872$var$htmlPage = ({ children: children, props: { background: background = \"#f0f0f0\", title: title = \"\" } })=>h(\"html\", {\n        lang: \"en\"\n    }, h(\"head\", null, h(\"meta\", {\n        charset: \"utf-8\"\n    }), h(\"meta\", {\n        name: \"viewport\",\n        content: \"width=device-width, height=device-height, initial-scale=1.0, user-scalable=0, minimum-scale=1.0, maximum-scale=1.0\"\n    }), h(\"link\", {\n        rel: \"preconnect\",\n        href: \"https://fonts.googleapis.com\"\n    }), h(\"link\", {\n        rel: \"preconnect\",\n        href: \"https://fonts.gstatic.com\",\n        crossorigin: true\n    }), h(\"link\", {\n        href: \"https://fonts.googleapis.com/css2?family=Merriweather:ital,wght@0,300;0,400;0,700;0,900;1,300;1,400;1,700;1,900&display=swap\",\n        rel: \"stylesheet\"\n    }), h(\"link\", {\n        href: \"https://fonts.googleapis.com/css2?family=Comfortaa:wght@300..700&display=swap\",\n        rel: \"stylesheet\"\n    }), h(\"link\", {\n        href: \"https://fonts.googleapis.com/css2?family=Nunito:ital,wght@0,200..1000;1,200..1000&display=swap\",\n        rel: \"stylesheet\"\n    }), h(\"link\", {\n        href: \"https://fonts.googleapis.com/css2?family=Raleway:ital,wght@0,100..900;1,100..900&display=swap\",\n        rel: \"stylesheet\"\n    }), h(\"link\", {\n        rel: \"stylesheet\",\n        href: \"/css/style.css\"\n    }), h(\"title\", null, title)), h(\"body\", null, children, h(\"script\", {\n        src: \"/client.js\"\n    })));\nvar $f61e82ad6902d872$export$2e2bcd8739ae039 = $f61e82ad6902d872$var$htmlPage;\n\n\nglobalThis.h = (0, $cbef3f91ba6dd3f5$export$dda1d9f60106f0e9);\nglobalThis.frag = (0, $cbef3f91ba6dd3f5$export$6a2d9549213d3666);\nwindow.addEventListener(\"load\", ()=>{\n    const match = (0, $5013ee11ca2270f9$export$baddd0131ee8c05b)((0, $f61e82ad6902d872$export$2e2bcd8739ae039), (0, $5736268d46219ac1$export$6642944bbb0750ae)(document), (0, $2054ae0330e74516$export$2e2bcd8739ae039));\n    const { pathname: pathname } = window.location;\n    m = match(pathname);\n    console.log({\n        m: m,\n        pathname: pathname\n    });\n});\nconst $db325d66e9652a73$var$$ = (...selectors)=>(handler)=>{\n        window.addEventListener(\"load\", ()=>{\n            const matches = selectors.map((selector)=>document.querySelector(selector));\n            matches.every((x)=>x) && handler(...matches);\n        });\n    };\nconst $db325d66e9652a73$var$preventDefault = (e)=>(e.preventDefault(), false);\nlet $db325d66e9652a73$var$passkey = [];\n$db325d66e9652a73$var$$(\".passkey-input\", \".passkey-preview\")((input, preview)=>{\n    input.oncut = $db325d66e9652a73$var$preventDefault;\n    input.oncopy = $db325d66e9652a73$var$preventDefault;\n    input.onpaste = $db325d66e9652a73$var$preventDefault;\n    input.addEventListener(\"onkeypress\", (e)=>{\n        if ((e.metaKey || e.ctrlKey) && e.key === \"z\") {\n            e.preventDefault();\n            return false;\n        }\n    });\n    input.addEventListener(\"input\", (event)=>{\n        const { target: { value: value, selectionStart: selectionStart }, data: data } = event;\n        // console.log(data, value, selectionStart, event)\n        data ? $db325d66e9652a73$var$passkey.splice(selectionStart - 1, value.length > $db325d66e9652a73$var$passkey.length ? 0 : $db325d66e9652a73$var$passkey.length - value.length + 1, data) : $db325d66e9652a73$var$passkey.splice(selectionStart, $db325d66e9652a73$var$passkey.length - value.length);\n        event.target.value = value.replaceAll(/.{1}/gi, \"\\u2022\");\n        event.target.setSelectionRange(selectionStart, selectionStart);\n        preview.setAttribute(\"style\", `--content: \"${$db325d66e9652a73$var$passkey.join(\"\")}\"`);\n    });\n});\n\n})();\n//# sourceMappingURL=client.js.map\n",";(function(){\n\n  /* UNBUILD */\n  function USE(arg, req){\n    return req? require(arg) : arg.slice? USE[R(arg)] : function(mod, path){\n      arg(mod = {exports: {}});\n      USE[R(path)] = mod.exports;\n    }\n    function R(p){\n      return p.split('/').slice(-1).toString().replace('.js','');\n    }\n  }\n  if(typeof module !== \"undefined\"){ var MODULE = module }\n  /* UNBUILD */\n\n\t;USE(function(module){\n\t\t// Shim for generic javascript utilities.\n\t\tString.random = function(l, c){\n\t\t\tvar s = '';\n\t\t\tl = l || 24; // you are not going to make a 0 length random number, so no need to check type\n\t\t\tc = c || '0123456789ABCDEFGHIJKLMNOPQRSTUVWXZabcdefghijklmnopqrstuvwxyz';\n\t\t\twhile(l-- > 0){ s += c.charAt(Math.floor(Math.random() * c.length)) }\n\t\t\treturn s;\n\t\t}\n\t\tString.match = function(t, o){ var tmp, u;\n\t\t\tif('string' !== typeof t){ return false }\n\t\t\tif('string' == typeof o){ o = {'=': o} }\n\t\t\to = o || {};\n\t\t\ttmp = (o['='] || o['*'] || o['>'] || o['<']);\n\t\t\tif(t === tmp){ return true }\n\t\t\tif(u !== o['=']){ return false }\n\t\t\ttmp = (o['*'] || o['>']);\n\t\t\tif(t.slice(0, (tmp||'').length) === tmp){ return true }\n\t\t\tif(u !== o['*']){ return false }\n\t\t\tif(u !== o['>'] && u !== o['<']){\n\t\t\t\treturn (t >= o['>'] && t <= o['<'])? true : false;\n\t\t\t}\n\t\t\tif(u !== o['>'] && t >= o['>']){ return true }\n\t\t\tif(u !== o['<'] && t <= o['<']){ return true }\n\t\t\treturn false;\n\t\t}\n\t\tString.hash = function(s, c){ // via SO\n\t\t\tif(typeof s !== 'string'){ return }\n\t    c = c || 0; // CPU schedule hashing by\n\t    if(!s.length){ return c }\n\t    for(var i=0,l=s.length,n; i<l; ++i){\n\t      n = s.charCodeAt(i);\n\t      c = ((c<<5)-c)+n;\n\t      c |= 0;\n\t    }\n\t    return c;\n\t  }\n\t\tvar has = Object.prototype.hasOwnProperty;\n\t\tObject.plain = function(o){ return o? (o instanceof Object && o.constructor === Object) || Object.prototype.toString.call(o).match(/^\\[object (\\w+)\\]$/)[1] === 'Object' : false }\n\t\tObject.empty = function(o, n){\n\t\t\tfor(var k in o){ if(has.call(o, k) && (!n || -1==n.indexOf(k))){ return false } }\n\t\t\treturn true;\n\t\t}\n\t\tObject.keys = Object.keys || function(o){\n\t\t\tvar l = [];\n\t\t\tfor(var k in o){ if(has.call(o, k)){ l.push(k) } }\n\t\t\treturn l;\n\t\t}\n\t\t;(function(){\n\t\t\tvar u, sT = setTimeout, l = 0, c = 0\n\t\t\t, sI = (typeof setImmediate !== ''+u && setImmediate) || (function(c,f){\n\t\t\t\tif(typeof MessageChannel == ''+u){ return sT }\n\t\t\t\t(c = new MessageChannel()).port1.onmessage = function(e){ ''==e.data && f() }\n\t\t\t\treturn function(q){ f=q;c.port2.postMessage('') }\n\t\t\t}()), check = sT.check = sT.check || (typeof performance !== ''+u && performance)\n\t\t\t|| {now: function(){ return +new Date }};\n\t\t\tsT.hold = sT.hold || 9; // half a frame benchmarks faster than < 1ms?\n\t\t\tsT.poll = sT.poll || function(f){\n\t\t\t\tif((sT.hold >= (check.now() - l)) && c++ < 3333){ f(); return }\n\t\t\t\tsI(function(){ l = check.now(); f() },c=0)\n\t\t\t}\n\t\t}());\n\t\t;(function(){ // Too many polls block, this \"threads\" them in turns over a single thread in time.\n\t\t\tvar sT = setTimeout, t = sT.turn = sT.turn || function(f){ 1 == s.push(f) && p(T) }\n\t\t\t, s = t.s = [], p = sT.poll, i = 0, f, T = function(){\n\t\t\t\tif(f = s[i++]){ f() }\n\t\t\t\tif(i == s.length || 99 == i){\n\t\t\t\t\ts = t.s = s.slice(i);\n\t\t\t\t\ti = 0;\n\t\t\t\t}\n\t\t\t\tif(s.length){ p(T) }\n\t\t\t}\n\t\t}());\n\t\t;(function(){\n\t\t\tvar u, sT = setTimeout, T = sT.turn;\n\t\t\t(sT.each = sT.each || function(l,f,e,S){ S = S || 9; (function t(s,L,r){\n\t\t\t  if(L = (s = (l||[]).splice(0,S)).length){\n\t\t\t  \tfor(var i = 0; i < L; i++){\n\t\t\t  \t\tif(u !== (r = f(s[i]))){ break }\n\t\t\t  \t}\n\t\t\t  \tif(u === r){ T(t); return }\n\t\t\t  } e && e(r);\n\t\t\t}())})();\n\t\t}());\n\t})(USE, './shim');\n\n\t;USE(function(module){\n\t\t// On event emitter generic javascript utility.\n\t\tmodule.exports = function onto(tag, arg, as){\n\t\t\tif(!tag){ return {to: onto} }\n\t\t\tvar u, f = 'function' == typeof arg, tag = (this.tag || (this.tag = {}))[tag] || f && (\n\t\t\t\tthis.tag[tag] = {tag: tag, to: onto._ = { next: function(arg){ var tmp;\n\t\t\t\t\tif(tmp = this.to){ tmp.next(arg) }\n\t\t\t}}});\n\t\t\tif(f){\n\t\t\t\tvar be = {\n\t\t\t\t\toff: onto.off ||\n\t\t\t\t\t(onto.off = function(){\n\t\t\t\t\t\tif(this.next === onto._.next){ return !0 }\n\t\t\t\t\t\tif(this === this.the.last){\n\t\t\t\t\t\t\tthis.the.last = this.back;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.to.back = this.back;\n\t\t\t\t\t\tthis.next = onto._.next;\n\t\t\t\t\t\tthis.back.to = this.to;\n\t\t\t\t\t\tif(this.the.last === this.the){\n\t\t\t\t\t\t\tdelete this.on.tag[this.the.tag];\n\t\t\t\t\t\t}\n\t\t\t\t\t}),\n\t\t\t\t\tto: onto._,\n\t\t\t\t\tnext: arg,\n\t\t\t\t\tthe: tag,\n\t\t\t\t\ton: this,\n\t\t\t\t\tas: as,\n\t\t\t\t};\n\t\t\t\t(be.back = tag.last || tag).to = be;\n\t\t\t\treturn tag.last = be;\n\t\t\t}\n\t\t\tif((tag = tag.to) && u !== arg){ tag.next(arg) }\n\t\t\treturn tag;\n\t\t};\n\t})(USE, './onto');\n\n\t;USE(function(module){\n\t\t// Valid values are a subset of JSON: null, binary, number (!Infinity), text,\n\t\t// or a soul relation. Arrays need special algorithms to handle concurrency,\n\t\t// so they are not supported directly. Use an extension that supports them if\n\t\t// needed but research their problems first.\n\t\tmodule.exports = function (v) {\n\t\t  // \"deletes\", nulling out keys.\n\t\t  return v === null ||\n\t\t\t\"string\" === typeof v ||\n\t\t\t\"boolean\" === typeof v ||\n\t\t\t// we want +/- Infinity to be, but JSON does not support it, sad face.\n\t\t\t// can you guess what v === v checks for? ;)\n\t\t\t(\"number\" === typeof v && v != Infinity && v != -Infinity && v === v) ||\n\t\t\t(!!v && \"string\" == typeof v[\"#\"] && Object.keys(v).length === 1 && v[\"#\"]);\n\t\t}\n\t})(USE, './valid');\n\n\t;USE(function(module){\n\t\tUSE('./shim');\n\t\tfunction State(){\n\t\t\tvar t = +new Date;\n\t\t\tif(last < t){\n\t\t\t\treturn N = 0, last = t + State.drift;\n\t\t\t}\n\t\t\treturn last = t + ((N += 1) / D) + State.drift;\n\t\t}\n\t\tState.drift = 0;\n\t\tvar NI = -Infinity, N = 0, D = 999, last = NI, u; // WARNING! In the future, on machines that are D times faster than 2016AD machines, you will want to increase D by another several orders of magnitude so the processing speed never out paces the decimal resolution (increasing an integer effects the state accuracy).\n\t\tState.is = function(n, k, o){ // convenience function to get the state on a key on a node and return it.\n\t\t\tvar tmp = (k && n && n._ && n._['>']) || o;\n\t\t\tif(!tmp){ return }\n\t\t\treturn ('number' == typeof (tmp = tmp[k]))? tmp : NI;\n\t\t}\n\t\tState.ify = function(n, k, s, v, soul){ // put a key's state on a node.\n\t\t\t(n = n || {})._ = n._ || {}; // safety check or init.\n\t\t\tif(soul){ n._['#'] = soul } // set a soul if specified.\n\t\t\tvar tmp = n._['>'] || (n._['>'] = {}); // grab the states data.\n\t\t\tif(u !== k && k !== '_'){\n\t\t\t\tif('number' == typeof s){ tmp[k] = s } // add the valid state.\n\t\t\t\tif(u !== v){ n[k] = v } // Note: Not its job to check for valid values!\n\t\t\t}\n\t\t\treturn n;\n\t\t}\n\t\tmodule.exports = State;\n\t})(USE, './state');\n\n\t;USE(function(module){\n\t\tUSE('./shim');\n\t\tfunction Dup(opt){\n\t\t\tvar dup = {s:{}}, s = dup.s;\n\t\t\topt = opt || {max: 999, age: 1000 * 9};//*/ 1000 * 9 * 3};\n\t\t\tdup.check = function(id){\n\t\t\t\tif(!s[id]){ return false }\n\t\t\t\treturn dt(id);\n\t\t\t}\n\t\t\tvar dt = dup.track = function(id){\n\t\t\t\tvar it = s[id] || (s[id] = {});\n\t\t\t\tit.was = dup.now = +new Date;\n\t\t\t\tif(!dup.to){ dup.to = setTimeout(dup.drop, opt.age + 9) }\n\t\t\t\tif(dt.ed){ dt.ed(id) }\n\t\t\t\treturn it;\n\t\t\t}\n\t\t\tdup.drop = function(age){\n\t\t\t\tdup.to = null;\n\t\t\t\tdup.now = +new Date;\n\t\t\t\tvar l = Object.keys(s);\n\t\t\t\tconsole.STAT && console.STAT(dup.now, +new Date - dup.now, 'dup drop keys'); // prev ~20% CPU 7% RAM 300MB // now ~25% CPU 7% RAM 500MB\n\t\t\t\tsetTimeout.each(l, function(id){ var it = s[id]; // TODO: .keys( is slow?\n\t\t\t\t\tif(it && (age || opt.age) > (dup.now - it.was)){ return }\n\t\t\t\t\tdelete s[id];\n\t\t\t\t},0,99);\n\t\t\t}\n\t\t\treturn dup;\n\t\t}\n\t\tmodule.exports = Dup;\n\t})(USE, './dup');\n\n\t;USE(function(module){\n\t\t// request / response module, for asking and acking messages.\n\t\tUSE('./onto'); // depends upon onto!\n\t\tmodule.exports = function ask(cb, as){\n\t\t\tif(!this.on){ return }\n\t\t\tvar lack = (this.opt||{}).lack || 9000;\n\t\t\tif(!('function' == typeof cb)){\n\t\t\t\tif(!cb){ return }\n\t\t\t\tvar id = cb['#'] || cb, tmp = (this.tag||'')[id];\n\t\t\t\tif(!tmp){ return }\n\t\t\t\tif(as){\n\t\t\t\t\ttmp = this.on(id, as);\n\t\t\t\t\tclearTimeout(tmp.err);\n\t\t\t\t\ttmp.err = setTimeout(function(){ tmp.off() }, lack);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tvar id = (as && as['#']) || random(9);\n\t\t\tif(!cb){ return id }\n\t\t\tvar to = this.on(id, cb, as);\n\t\t\tto.err = to.err || setTimeout(function(){ to.off();\n\t\t\t\tto.next({err: \"Error: No ACK yet.\", lack: true});\n\t\t\t}, lack);\n\t\t\treturn id;\n\t\t}\n\t\tvar random = String.random || function(){ return Math.random().toString(36).slice(2) }\n\t})(USE, './ask');\n\n\t;USE(function(module){\n\n\t\tfunction Gun(o){\n\t\t\tif(o instanceof Gun){ return (this._ = {$: this}).$ }\n\t\t\tif(!(this instanceof Gun)){ return new Gun(o) }\n\t\t\treturn Gun.create(this._ = {$: this, opt: o});\n\t\t}\n\n\t\tGun.is = function($){ return ($ instanceof Gun) || ($ && $._ && ($ === $._.$)) || false }\n\n\t\tGun.version = 0.2020;\n\n\t\tGun.chain = Gun.prototype;\n\t\tGun.chain.toJSON = function(){};\n\n\t\tUSE('./shim');\n\t\tGun.valid = USE('./valid');\n\t\tGun.state = USE('./state');\n\t\tGun.on = USE('./onto');\n\t\tGun.dup = USE('./dup');\n\t\tGun.ask = USE('./ask');\n\n\t\t;(function(){\n\t\t\tGun.create = function(at){\n\t\t\t\tat.root = at.root || at;\n\t\t\t\tat.graph = at.graph || {};\n\t\t\t\tat.on = at.on || Gun.on;\n\t\t\t\tat.ask = at.ask || Gun.ask;\n\t\t\t\tat.dup = at.dup || Gun.dup();\n\t\t\t\tvar gun = at.$.opt(at.opt);\n\t\t\t\tif(!at.once){\n\t\t\t\t\tat.on('in', universe, at);\n\t\t\t\t\tat.on('out', universe, at);\n\t\t\t\t\tat.on('put', map, at);\n\t\t\t\t\tGun.on('create', at);\n\t\t\t\t\tat.on('create', at);\n\t\t\t\t}\n\t\t\t\tat.once = 1;\n\t\t\t\treturn gun;\n\t\t\t}\n\t\t\tfunction universe(msg){\n\t\t\t\t// TODO: BUG! msg.out = null being set!\n\t\t\t\t//if(!F){ var eve = this; setTimeout(function(){ universe.call(eve, msg,1) },Math.random() * 100);return; } // ADD F TO PARAMS!\n\t\t\t\tif(!msg){ return }\n\t\t\t\tif(msg.out === universe){ this.to.next(msg); return }\n\t\t\t\tvar eve = this, as = eve.as, at = as.at || as, gun = at.$, dup = at.dup, tmp, DBG = msg.DBG;\n\t\t\t\t(tmp = msg['#']) || (tmp = msg['#'] = text_rand(9));\n\t\t\t\tif(dup.check(tmp)){ return } dup.track(tmp);\n\t\t\t\ttmp = msg._; msg._ = ('function' == typeof tmp)? tmp : function(){};\n\t\t\t\t(msg.$ && (msg.$ === (msg.$._||'').$)) || (msg.$ = gun);\n\t\t\t\tif(msg['@'] && !msg.put){ ack(msg) }\n\t\t\t\tif(!at.ask(msg['@'], msg)){ // is this machine listening for an ack?\n\t\t\t\t\tDBG && (DBG.u = +new Date);\n\t\t\t\t\tif(msg.put){ put(msg); return } else\n\t\t\t\t\tif(msg.get){ Gun.on.get(msg, gun) }\n\t\t\t\t}\n\t\t\t\tDBG && (DBG.uc = +new Date);\n\t\t\t\teve.to.next(msg);\n\t\t\t\tDBG && (DBG.ua = +new Date);\n\t\t\t\tif(msg.nts || msg.NTS){ return } // TODO: This shouldn't be in core, but fast way to prevent NTS spread. Delete this line after all peers have upgraded to newer versions.\n\t\t\t\tmsg.out = universe; at.on('out', msg);\n\t\t\t\tDBG && (DBG.ue = +new Date);\n\t\t\t}\n\t\t\tfunction put(msg){\n\t\t\t\tif(!msg){ return }\n\t\t\t\tvar ctx = msg._||'', root = ctx.root = ((ctx.$ = msg.$||'')._||'').root;\n\t\t\t\tif(msg['@'] && ctx.faith && !ctx.miss){ // TODO: AXE may split/route based on 'put' what should we do here? Detect @ in AXE? I think we don't have to worry, as DAM will route it on @.\n\t\t\t\t\tmsg.out = universe;\n\t\t\t\t\troot.on('out', msg);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tctx.latch = root.hatch; ctx.match = root.hatch = [];\n\t\t\t\tvar put = msg.put;\n\t\t\t\tvar DBG = ctx.DBG = msg.DBG, S = +new Date; CT = CT || S;\n\t\t\t\tif(put['#'] && put['.']){ /*root && root.on('put', msg);*/ return } // TODO: BUG! This needs to call HAM instead.\n\t\t\t\tDBG && (DBG.p = S);\n\t\t\t\tctx['#'] = msg['#'];\n\t\t\t\tctx.msg = msg;\n\t\t\t\tctx.all = 0;\n\t\t\t\tctx.stun = 1;\n\t\t\t\tvar nl = Object.keys(put);//.sort(); // TODO: This is unbounded operation, large graphs will be slower. Write our own CPU scheduled sort? Or somehow do it in below? Keys itself is not O(1) either, create ES5 shim over ?weak map? or custom which is constant.\n\t\t\t\tconsole.STAT && console.STAT(S, ((DBG||ctx).pk = +new Date) - S, 'put sort');\n\t\t\t\tvar ni = 0, nj, kl, soul, node, states, err, tmp;\n\t\t\t\t(function pop(o){\n\t\t\t\t\tif(nj != ni){ nj = ni;\n\t\t\t\t\t\tif(!(soul = nl[ni])){\n\t\t\t\t\t\t\tconsole.STAT && console.STAT(S, ((DBG||ctx).pd = +new Date) - S, 'put');\n\t\t\t\t\t\t\tfire(ctx);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(!(node = put[soul])){ err = ERR+cut(soul)+\"no node.\" } else\n\t\t\t\t\t\tif(!(tmp = node._)){ err = ERR+cut(soul)+\"no meta.\" } else\n\t\t\t\t\t\tif(soul !== tmp['#']){ err = ERR+cut(soul)+\"soul not same.\" } else\n\t\t\t\t\t\tif(!(states = tmp['>'])){ err = ERR+cut(soul)+\"no state.\" }\n\t\t\t\t\t\tkl = Object.keys(node||{}); // TODO: .keys( is slow\n\t\t\t\t\t}\n\t\t\t\t\tif(err){\n\t\t\t\t\t\tmsg.err = ctx.err = err; // invalid data should error and stun the message.\n\t\t\t\t\t\tfire(ctx);\n\t\t\t\t\t\t//console.log(\"handle error!\", err) // handle!\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tvar i = 0, key; o = o || 0;\n\t\t\t\t\twhile(o++ < 9 && (key = kl[i++])){\n\t\t\t\t\t\tif('_' === key){ continue }\n\t\t\t\t\t\tvar val = node[key], state = states[key];\n\t\t\t\t\t\tif(u === state){ err = ERR+cut(key)+\"on\"+cut(soul)+\"no state.\"; break }\n\t\t\t\t\t\tif(!valid(val)){ err = ERR+cut(key)+\"on\"+cut(soul)+\"bad \"+(typeof val)+cut(val); break }\n\t\t\t\t\t\t//ctx.all++; //ctx.ack[soul+key] = '';\n\t\t\t\t\t\tham(val, key, soul, state, msg);\n\t\t\t\t\t\t++C; // courtesy count;\n\t\t\t\t\t}\n\t\t\t\t\tif((kl = kl.slice(i)).length){ turn(pop); return }\n\t\t\t\t\t++ni; kl = null; pop(o);\n\t\t\t\t}());\n\t\t\t} Gun.on.put = put;\n\t\t\t// TODO: MARK!!! clock below, reconnect sync, SEA certify wire merge, User.auth taking multiple times, // msg put, put, say ack, hear loop...\n\t\t\t// WASIS BUG! local peer not ack. .off other people: .open\n\t\t\tfunction ham(val, key, soul, state, msg){\n\t\t\t\tvar ctx = msg._||'', root = ctx.root, graph = root.graph, lot, tmp;\n\t\t\t\tvar vertex = graph[soul] || empty, was = state_is(vertex, key, 1), known = vertex[key];\n\t\t\t\t\n\t\t\t\tvar DBG = ctx.DBG; if(tmp = console.STAT){ if(!graph[soul] || !known){ tmp.has = (tmp.has || 0) + 1 } }\n\n\t\t\t\tvar now = State(), u;\n\t\t\t\tif(state > now){\n\t\t\t\t\tsetTimeout(function(){ ham(val, key, soul, state, msg) }, (tmp = state - now) > MD? MD : tmp); // Max Defer 32bit. :(\n\t\t\t\t\tconsole.STAT && console.STAT(((DBG||ctx).Hf = +new Date), tmp, 'future');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif(state < was){ /*old;*/ if(true || !ctx.miss){ return } } // but some chains have a cache miss that need to re-fire. // TODO: Improve in future. // for AXE this would reduce rebroadcast, but GUN does it on message forwarding. // TURNS OUT CACHE MISS WAS NOT NEEDED FOR NEW CHAINS ANYMORE!!! DANGER DANGER DANGER, ALWAYS RETURN! (or am I missing something?)\n\t\t\t\tif(!ctx.faith){ // TODO: BUG? Can this be used for cache miss as well? // Yes this was a bug, need to check cache miss for RAD tests, but should we care about the faith check now? Probably not.\n\t\t\t\t\tif(state === was && (val === known || L(val) <= L(known))){ /*console.log(\"same\");*/ /*same;*/ if(!ctx.miss){ return } } // same\n\t\t\t\t}\n\t\t\t\tctx.stun++; // TODO: 'forget' feature in SEA tied to this, bad approach, but hacked in for now. Any changes here must update there.\n\t\t\t\tvar aid = msg['#']+ctx.all++, id = {toString: function(){ return aid }, _: ctx}; id.toJSON = id.toString; // this *trick* makes it compatible between old & new versions.\n\t\t\t\troot.dup.track(id)['#'] = msg['#']; // fixes new OK acks for RPC like RTC.\n\t\t\t\tDBG && (DBG.ph = DBG.ph || +new Date);\n\t\t\t\troot.on('put', {'#': id, '@': msg['@'], put: {'#': soul, '.': key, ':': val, '>': state}, ok: msg.ok, _: ctx});\n\t\t\t}\n\t\t\tfunction map(msg){\n\t\t\t\tvar DBG; if(DBG = (msg._||'').DBG){ DBG.pa = +new Date; DBG.pm = DBG.pm || +new Date}\n      \tvar eve = this, root = eve.as, graph = root.graph, ctx = msg._, put = msg.put, soul = put['#'], key = put['.'], val = put[':'], state = put['>'], id = msg['#'], tmp;\n      \tif((tmp = ctx.msg) && (tmp = tmp.put) && (tmp = tmp[soul])){ state_ify(tmp, key, state, val, soul) } // necessary! or else out messages do not get SEA transforms.\n      \t//var bytes = ((graph[soul]||'')[key]||'').length||1;\n\t\t\t\tgraph[soul] = state_ify(graph[soul], key, state, val, soul);\n\t\t\t\tif(tmp = (root.next||'')[soul]){\n\t\t\t\t\t//tmp.bytes = (tmp.bytes||0) + ((val||'').length||1) - bytes;\n\t\t\t\t\t//if(tmp.bytes > 2**13){ Gun.log.once('byte-limit', \"Note: In the future, GUN peers will enforce a ~4KB query limit. Please see https://gun.eco/docs/Page\") }\n\t\t\t\t\ttmp.on('in', msg)\n\t\t\t\t}\n\t\t\t\tfire(ctx);\n\t\t\t\teve.to.next(msg);\n\t\t\t}\n\t\t\tfunction fire(ctx, msg){ var root;\n\t\t\t\tif(ctx.stop){ return }\n\t\t\t\tif(!ctx.err && 0 < --ctx.stun){ return } // TODO: 'forget' feature in SEA tied to this, bad approach, but hacked in for now. Any changes here must update there.\n\t\t\t\tctx.stop = 1;\n\t\t\t\tif(!(root = ctx.root)){ return }\n\t\t\t\tvar tmp = ctx.match; tmp.end = 1;\n\t\t\t\tif(tmp === root.hatch){ if(!(tmp = ctx.latch) || tmp.end){ delete root.hatch } else { root.hatch = tmp } }\n\t\t\t\tctx.hatch && ctx.hatch(); // TODO: rename/rework how put & this interact.\n\t\t\t\tsetTimeout.each(ctx.match, function(cb){cb && cb()}); \n\t\t\t\tif(!(msg = ctx.msg) || ctx.err || msg.err){ return }\n\t\t\t\tmsg.out = universe;\n\t\t\t\tctx.root.on('out', msg);\n\n\t\t\t\tCF(); // courtesy check;\n\t\t\t}\n\t\t\tfunction ack(msg){ // aggregate ACKs.\n\t\t\t\tvar id = msg['@'] || '', ctx, ok, tmp;\n\t\t\t\tif(!(ctx = id._)){\n\t\t\t\t\tvar dup = (dup = msg.$) && (dup = dup._) && (dup = dup.root) && (dup = dup.dup);\n\t\t\t\t\tif(!(dup = dup.check(id))){ return }\n\t\t\t\t\tmsg['@'] = dup['#'] || msg['@']; // This doesn't do anything anymore, backtrack it to something else?\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tctx.acks = (ctx.acks||0) + 1;\n\t\t\t\tif(ctx.err = msg.err){\n\t\t\t\t\tmsg['@'] = ctx['#'];\n\t\t\t\t\tfire(ctx); // TODO: BUG? How it skips/stops propagation of msg if any 1 item is error, this would assume a whole batch/resync has same malicious intent.\n\t\t\t\t}\n\t\t\t\tctx.ok = msg.ok || ctx.ok;\n\t\t\t\tif(!ctx.stop && !ctx.crack){ ctx.crack = ctx.match && ctx.match.push(function(){back(ctx)}) } // handle synchronous acks. NOTE: If a storage peer ACKs synchronously then the PUT loop has not even counted up how many items need to be processed, so ctx.STOP flags this and adds only 1 callback to the end of the PUT loop.\n\t\t\t\tback(ctx);\n\t\t\t}\n\t\t\tfunction back(ctx){\n\t\t\t\tif(!ctx || !ctx.root){ return }\n\t\t\t\tif(ctx.stun || ctx.acks !== ctx.all){ return }\n\t\t\t\tctx.root.on('in', {'@': ctx['#'], err: ctx.err, ok: ctx.err? u : ctx.ok || {'':1}});\n\t\t\t}\n\n\t\t\tvar ERR = \"Error: Invalid graph!\";\n\t\t\tvar cut = function(s){ return \" '\"+(''+s).slice(0,9)+\"...' \" }\n\t\t\tvar L = JSON.stringify, MD = 2147483647, State = Gun.state;\n\t\t\tvar C = 0, CT, CF = function(){if(C>999 && (C/-(CT - (CT = +new Date))>1)){Gun.window && console.log(\"Warning: You're syncing 1K+ records a second, faster than DOM can update - consider limiting query.\");CF=function(){C=0}}};\n\n\t\t}());\n\n\t\t;(function(){\n\t\t\tGun.on.get = function(msg, gun){\n\t\t\t\tvar root = gun._, get = msg.get, soul = get['#'], node = root.graph[soul], has = get['.'];\n\t\t\t\tvar next = root.next || (root.next = {}), at = next[soul];\n\n\t\t\t\t// TODO: Azarattum bug, what is in graph is not same as what is in next. Fix!\n\n\t\t\t\t// queue concurrent GETs?\n\t\t\t\t// TODO: consider tagging original message into dup for DAM.\n\t\t\t\t// TODO: ^ above? In chat app, 12 messages resulted in same peer asking for `#user.pub` 12 times. (same with #user GET too, yipes!) // DAM note: This also resulted in 12 replies from 1 peer which all had same ##hash but none of them deduped because each get was different.\n\t\t\t\t// TODO: Moving quick hacks fixing these things to axe for now.\n\t\t\t\t// TODO: a lot of GET #foo then GET #foo.\"\" happening, why?\n\t\t\t\t// TODO: DAM's ## hash check, on same get ACK, producing multiple replies still, maybe JSON vs YSON?\n\t\t\t\t// TMP note for now: viMZq1slG was chat LEX query #.\n\t\t\t\t/*if(gun !== (tmp = msg.$) && (tmp = (tmp||'')._)){\n\t\t\t\t\tif(tmp.Q){ tmp.Q[msg['#']] = ''; return } // chain does not need to ask for it again.\n\t\t\t\t\ttmp.Q = {};\n\t\t\t\t}*/\n\t\t\t\t/*if(u === has){\n\t\t\t\t\tif(at.Q){\n\t\t\t\t\t\t//at.Q[msg['#']] = '';\n\t\t\t\t\t\t//return;\n\t\t\t\t\t}\n\t\t\t\t\tat.Q = {};\n\t\t\t\t}*/\n\t\t\t\tvar ctx = msg._||{}, DBG = ctx.DBG = msg.DBG;\n\t\t\t\tDBG && (DBG.g = +new Date);\n\t\t\t\t//console.log(\"GET:\", get, node, has, at);\n\t\t\t\t//if(!node && !at){ return root.on('get', msg) }\n\t\t\t\t//if(has && node){ // replace 2 below lines to continue dev?\n\t\t\t\tif(!node){ return root.on('get', msg) }\n\t\t\t\tif(has){\n\t\t\t\t\tif('string' != typeof has || u === node[has]){\n\t\t\t\t\t\tif(!((at||'').next||'')[has]){ root.on('get', msg); return }\n\t\t\t\t\t}\n\t\t\t\t\tnode = state_ify({}, has, state_is(node, has), node[has], soul);\n\t\t\t\t\t// If we have a key in-memory, do we really need to fetch?\n\t\t\t\t\t// Maybe... in case the in-memory key we have is a local write\n\t\t\t\t\t// we still need to trigger a pull/merge from peers.\n\t\t\t\t}\n\t\t\t\t//Gun.window? Gun.obj.copy(node) : node; // HNPERF: If !browser bump Performance? Is this too dangerous to reference root graph? Copy / shallow copy too expensive for big nodes. Gun.obj.to(node); // 1 layer deep copy // Gun.obj.copy(node); // too slow on big nodes\n\t\t\t\tnode && ack(msg, node);\n\t\t\t\troot.on('get', msg); // send GET to storage adapters.\n\t\t\t}\n\t\t\tfunction ack(msg, node){\n\t\t\t\tvar S = +new Date, ctx = msg._||{}, DBG = ctx.DBG = msg.DBG;\n\t\t\t\tvar to = msg['#'], id = text_rand(9), keys = Object.keys(node||'').sort(), soul = ((node||'')._||'')['#'], kl = keys.length, j = 0, root = msg.$._.root, F = (node === root.graph[soul]);\n\t\t\t\tconsole.STAT && console.STAT(S, ((DBG||ctx).gk = +new Date) - S, 'got keys');\n\t\t\t\t// PERF: Consider commenting this out to force disk-only reads for perf testing? // TODO: .keys( is slow\n\t\t\t\tnode && (function go(){\n\t\t\t\t\tS = +new Date;\n\t\t\t\t\tvar i = 0, k, put = {}, tmp;\n\t\t\t\t\twhile(i < 9 && (k = keys[i++])){\n\t\t\t\t\t\tstate_ify(put, k, state_is(node, k), node[k], soul);\n\t\t\t\t\t}\n\t\t\t\t\tkeys = keys.slice(i);\n\t\t\t\t\t(tmp = {})[soul] = put; put = tmp;\n\t\t\t\t\tvar faith; if(F){ faith = function(){}; faith.ram = faith.faith = true; } // HNPERF: We're testing performance improvement by skipping going through security again, but this should be audited.\n\t\t\t\t\ttmp = keys.length;\n\t\t\t\t\tconsole.STAT && console.STAT(S, -(S - (S = +new Date)), 'got copied some');\n\t\t\t\t\tDBG && (DBG.ga = +new Date);\n\t\t\t\t\troot.on('in', {'@': to, '#': id, put: put, '%': (tmp? (id = text_rand(9)) : u), $: root.$, _: faith, DBG: DBG, FOO: 1});\n\t\t\t\t\tconsole.STAT && console.STAT(S, +new Date - S, 'got in');\n\t\t\t\t\tif(!tmp){ return }\n\t\t\t\t\tsetTimeout.turn(go);\n\t\t\t\t}());\n\t\t\t\tif(!node){ root.on('in', {'@': msg['#']}) } // TODO: I don't think I like this, the default lS adapter uses this but \"not found\" is a sensitive issue, so should probably be handled more carefully/individually.\n\t\t\t} Gun.on.get.ack = ack;\n\t\t}());\n\n\t\t;(function(){\n\t\t\tGun.chain.opt = function(opt){\n\t\t\t\topt = opt || {};\n\t\t\t\tvar gun = this, at = gun._, tmp = opt.peers || opt;\n\t\t\t\tif(!Object.plain(opt)){ opt = {} }\n\t\t\t\tif(!Object.plain(at.opt)){ at.opt = opt }\n\t\t\t\tif('string' == typeof tmp){ tmp = [tmp] }\n\t\t\t\tif(!Object.plain(at.opt.peers)){ at.opt.peers = {}}\n\t\t\t\tif(tmp instanceof Array){\n\t\t\t\t\topt.peers = {};\n\t\t\t\t\ttmp.forEach(function(url){\n\t\t\t\t\t\tvar p = {}; p.id = p.url = url;\n\t\t\t\t\t\topt.peers[url] = at.opt.peers[url] = at.opt.peers[url] || p;\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\tobj_each(opt, function each(k){ var v = this[k];\n\t\t\t\t\tif((this && this.hasOwnProperty(k)) || 'string' == typeof v || Object.empty(v)){ this[k] = v; return }\n\t\t\t\t\tif(v && v.constructor !== Object && !(v instanceof Array)){ return }\n\t\t\t\t\tobj_each(v, each);\n\t\t\t\t});\n\t\t\t\tat.opt.from = opt;\n\t\t\t\tGun.on('opt', at);\n\t\t\t\tat.opt.uuid = at.opt.uuid || function uuid(l){ return Gun.state().toString(36).replace('.','') + String.random(l||12) }\n\t\t\t\treturn gun;\n\t\t\t}\n\t\t}());\n\n\t\tvar obj_each = function(o,f){ Object.keys(o).forEach(f,o) }, text_rand = String.random, turn = setTimeout.turn, valid = Gun.valid, state_is = Gun.state.is, state_ify = Gun.state.ify, u, empty = {}, C;\n\n\t\tGun.log = function(){ return (!Gun.log.off && C.log.apply(C, arguments)), [].slice.call(arguments).join(' ') };\n\t\tGun.log.once = function(w,s,o){ return (o = Gun.log.once)[w] = o[w] || 0, o[w]++ || Gun.log(s) };\n\n\t\tif(typeof window !== \"undefined\"){ (window.GUN = window.Gun = Gun).window = window }\n\t\ttry{ if(typeof MODULE !== \"undefined\"){ MODULE.exports = Gun } }catch(e){}\n\t\tmodule.exports = Gun;\n\t\t\n\t\t(Gun.window||{}).console = (Gun.window||{}).console || {log: function(){}};\n\t\t(C = console).only = function(i, s){ return (C.only.i && i === C.only.i && C.only.i++) && (C.log.apply(C, arguments) || s) };\n\n\t\t;\"Please do not remove welcome log unless you are paying for a monthly sponsorship, thanks!\";\n\t\tGun.log.once(\"welcome\", \"Hello wonderful person! :) Thanks for using GUN, please ask for help on http://chat.gun.eco if anything takes you longer than 5min to figure out!\");\n\t})(USE, './root');\n\n\t;USE(function(module){\n\t\tvar Gun = USE('./root');\n\t\tGun.chain.back = function(n, opt){ var tmp;\n\t\t\tn = n || 1;\n\t\t\tif(-1 === n || Infinity === n){\n\t\t\t\treturn this._.root.$;\n\t\t\t} else\n\t\t\tif(1 === n){\n\t\t\t\treturn (this._.back || this._).$;\n\t\t\t}\n\t\t\tvar gun = this, at = gun._;\n\t\t\tif(typeof n === 'string'){\n\t\t\t\tn = n.split('.');\n\t\t\t}\n\t\t\tif(n instanceof Array){\n\t\t\t\tvar i = 0, l = n.length, tmp = at;\n\t\t\t\tfor(i; i < l; i++){\n\t\t\t\t\ttmp = (tmp||empty)[n[i]];\n\t\t\t\t}\n\t\t\t\tif(u !== tmp){\n\t\t\t\t\treturn opt? gun : tmp;\n\t\t\t\t} else\n\t\t\t\tif((tmp = at.back)){\n\t\t\t\t\treturn tmp.$.back(n, opt);\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif('function' == typeof n){\n\t\t\t\tvar yes, tmp = {back: at};\n\t\t\t\twhile((tmp = tmp.back)\n\t\t\t\t&& u === (yes = n(tmp, opt))){}\n\t\t\t\treturn yes;\n\t\t\t}\n\t\t\tif('number' == typeof n){\n\t\t\t\treturn (at.back || at).$.back(n - 1);\n\t\t\t}\n\t\t\treturn this;\n\t\t}\n\t\tvar empty = {}, u;\n\t})(USE, './back');\n\n\t;USE(function(module){\n\t\t// WARNING: GUN is very simple, but the JavaScript chaining API around GUN\n\t\t// is complicated and was extremely hard to build. If you port GUN to another\n\t\t// language, consider implementing an easier API to build.\n\t\tvar Gun = USE('./root');\n\t\tGun.chain.chain = function(sub){\n\t\t\tvar gun = this, at = gun._, chain = new (sub || gun).constructor(gun), cat = chain._, root;\n\t\t\tcat.root = root = at.root;\n\t\t\tcat.id = ++root.once;\n\t\t\tcat.back = gun._;\n\t\t\tcat.on = Gun.on;\n\t\t\tcat.on('in', Gun.on.in, cat); // For 'in' if I add my own listeners to each then I MUST do it before in gets called. If I listen globally for all incoming data instead though, regardless of individual listeners, I can transform the data there and then as well.\n\t\t\tcat.on('out', Gun.on.out, cat); // However for output, there isn't really the global option. I must listen by adding my own listener individually BEFORE this one is ever called.\n\t\t\treturn chain;\n\t\t}\n\n\t\tfunction output(msg){\n\t\t\tvar put, get, at = this.as, back = at.back, root = at.root, tmp;\n\t\t\tif(!msg.$){ msg.$ = at.$ }\n\t\t\tthis.to.next(msg);\n\t\t\tif(at.err){ at.on('in', {put: at.put = u, $: at.$}); return }\n\t\t\tif(get = msg.get){\n\t\t\t\t/*if(u !== at.put){\n\t\t\t\t\tat.on('in', at);\n\t\t\t\t\treturn;\n\t\t\t\t}*/\n\t\t\t\tif(root.pass){ root.pass[at.id] = at; } // will this make for buggy behavior elsewhere?\n\t\t\t\tif(at.lex){ Object.keys(at.lex).forEach(function(k){ tmp[k] = at.lex[k] }, tmp = msg.get = msg.get || {}) }\n\t\t\t\tif(get['#'] || at.soul){\n\t\t\t\t\tget['#'] = get['#'] || at.soul;\n\t\t\t\t\t//root.graph[get['#']] = root.graph[get['#']] || {_:{'#':get['#'],'>':{}}};\n\t\t\t\t\tmsg['#'] || (msg['#'] = text_rand(9)); // A3120 ?\n\t\t\t\t\tback = (root.$.get(get['#'])._);\n\t\t\t\t\tif(!(get = get['.'])){ // soul\n\t\t\t\t\t\ttmp = back.ask && back.ask['']; // check if we have already asked for the full node\n\t\t\t\t\t\t(back.ask || (back.ask = {}))[''] = back; // add a flag that we are now.\n\t\t\t\t\t\tif(u !== back.put){ // if we already have data,\n\t\t\t\t\t\t\tback.on('in', back); // send what is cached down the chain\n\t\t\t\t\t\t\tif(tmp){ return } // and don't ask for it again.\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmsg.$ = back.$;\n\t\t\t\t\t} else\n\t\t\t\t\tif(obj_has(back.put, get)){ // TODO: support #LEX !\n\t\t\t\t\t\ttmp = back.ask && back.ask[get];\n\t\t\t\t\t\t(back.ask || (back.ask = {}))[get] = back.$.get(get)._;\n\t\t\t\t\t\tback.on('in', {get: get, put: {'#': back.soul, '.': get, ':': back.put[get], '>': state_is(root.graph[back.soul], get)}});\n\t\t\t\t\t\tif(tmp){ return }\n\t\t\t\t\t}\n\t\t\t\t\t\t/*put = (back.$.get(get)._);\n\t\t\t\t\t\tif(!(tmp = put.ack)){ put.ack = -1 }\n\t\t\t\t\t\tback.on('in', {\n\t\t\t\t\t\t\t$: back.$,\n\t\t\t\t\t\t\tput: Gun.state.ify({}, get, Gun.state(back.put, get), back.put[get]),\n\t\t\t\t\t\t\tget: back.get\n\t\t\t\t\t\t});\n\t\t\t\t\t\tif(tmp){ return }\n\t\t\t\t\t} else\n\t\t\t\t\tif('string' != typeof get){\n\t\t\t\t\t\tvar put = {}, meta = (back.put||{})._;\n\t\t\t\t\t\tGun.obj.map(back.put, function(v,k){\n\t\t\t\t\t\t\tif(!Gun.text.match(k, get)){ return }\n\t\t\t\t\t\t\tput[k] = v;\n\t\t\t\t\t\t})\n\t\t\t\t\t\tif(!Gun.obj.empty(put)){\n\t\t\t\t\t\t\tput._ = meta;\n\t\t\t\t\t\t\tback.on('in', {$: back.$, put: put, get: back.get})\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(tmp = at.lex){\n\t\t\t\t\t\t\ttmp = (tmp._) || (tmp._ = function(){});\n\t\t\t\t\t\t\tif(back.ack < tmp.ask){ tmp.ask = back.ack }\n\t\t\t\t\t\t\tif(tmp.ask){ return }\n\t\t\t\t\t\t\ttmp.ask = 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t*/\n\t\t\t\t\troot.ask(ack, msg); // A3120 ?\n\t\t\t\t\treturn root.on('in', msg);\n\t\t\t\t}\n\t\t\t\t//if(root.now){ root.now[at.id] = root.now[at.id] || true; at.pass = {} }\n\t\t\t\tif(get['.']){\n\t\t\t\t\tif(at.get){\n\t\t\t\t\t\tmsg = {get: {'.': at.get}, $: at.$};\n\t\t\t\t\t\t(back.ask || (back.ask = {}))[at.get] = msg.$._; // TODO: PERFORMANCE? More elegant way?\n\t\t\t\t\t\treturn back.on('out', msg);\n\t\t\t\t\t}\n\t\t\t\t\tmsg = {get: at.lex? msg.get : {}, $: at.$};\n\t\t\t\t\treturn back.on('out', msg);\n\t\t\t\t}\n\t\t\t\t(at.ask || (at.ask = {}))[''] = at;\t //at.ack = at.ack || -1;\n\t\t\t\tif(at.get){\n\t\t\t\t\tget['.'] = at.get;\n\t\t\t\t\t(back.ask || (back.ask = {}))[at.get] = msg.$._; // TODO: PERFORMANCE? More elegant way?\n\t\t\t\t\treturn back.on('out', msg);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn back.on('out', msg);\n\t\t}; Gun.on.out = output;\n\n\t\tfunction input(msg, cat){ cat = cat || this.as; // TODO: V8 may not be able to optimize functions with different parameter calls, so try to do benchmark to see if there is any actual difference.\n\t\t\tvar root = cat.root, gun = msg.$ || (msg.$ = cat.$), at = (gun||'')._ || empty, tmp = msg.put||'', soul = tmp['#'], key = tmp['.'], change = (u !== tmp['='])? tmp['='] : tmp[':'], state = tmp['>'] || -Infinity, sat; // eve = event, at = data at, cat = chain at, sat = sub at (children chains).\n\t\t\tif(u !== msg.put && (u === tmp['#'] || u === tmp['.'] || (u === tmp[':'] && u === tmp['=']) || u === tmp['>'])){ // convert from old format\n\t\t\t\tif(!valid(tmp)){\n\t\t\t\t\tif(!(soul = ((tmp||'')._||'')['#'])){ console.log(\"chain not yet supported for\", tmp, '...', msg, cat); return; }\n\t\t\t\t\tgun = cat.root.$.get(soul);\n\t\t\t\t\treturn setTimeout.each(Object.keys(tmp).sort(), function(k){ // TODO: .keys( is slow // BUG? ?Some re-in logic may depend on this being sync?\n\t\t\t\t\t\tif('_' == k || u === (state = state_is(tmp, k))){ return }\n\t\t\t\t\t\tcat.on('in', {$: gun, put: {'#': soul, '.': k, '=': tmp[k], '>': state}, VIA: msg});\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tcat.on('in', {$: at.back.$, put: {'#': soul = at.back.soul, '.': key = at.has || at.get, '=': tmp, '>': state_is(at.back.put, key)}, via: msg}); // TODO: This could be buggy! It assumes/approxes data, other stuff could have corrupted it.\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif((msg.seen||'')[cat.id]){ return } (msg.seen || (msg.seen = function(){}))[cat.id] = cat; // help stop some infinite loops\n\n\t\t\tif(cat !== at){ // don't worry about this when first understanding the code, it handles changing contexts on a message. A soul chain will never have a different context.\n\t\t\t\tObject.keys(msg).forEach(function(k){ tmp[k] = msg[k] }, tmp = {}); // make copy of message\n\t\t\t\ttmp.get = cat.get || tmp.get;\n\t\t\t\tif(!cat.soul && !cat.has){ // if we do not recognize the chain type\n\t\t\t\t\ttmp.$$$ = tmp.$$$ || cat.$; // make a reference to wherever it came from.\n\t\t\t\t} else\n\t\t\t\tif(at.soul){ // a has (property) chain will have a different context sometimes if it is linked (to a soul chain). Anything that is not a soul or has chain, will always have different contexts.\n\t\t\t\t\ttmp.$ = cat.$;\n\t\t\t\t\ttmp.$$ = tmp.$$ || at.$;\n\t\t\t\t}\n\t\t\t\tmsg = tmp; // use the message with the new context instead;\n\t\t\t}\n\t\t\tunlink(msg, cat);\n\n\t\t\tif(((cat.soul/* && (cat.ask||'')['']*/) || msg.$$) && state >= state_is(root.graph[soul], key)){ // The root has an in-memory cache of the graph, but if our peer has asked for the data then we want a per deduplicated chain copy of the data that might have local edits on it.\n\t\t\t\t(tmp = root.$.get(soul)._).put = state_ify(tmp.put, key, state, change, soul);\n\t\t\t}\n\t\t\tif(!at.soul /*&& (at.ask||'')['']*/ && state >= state_is(root.graph[soul], key) && (sat = (root.$.get(soul)._.next||'')[key])){ // Same as above here, but for other types of chains. // TODO: Improve perf by preventing echoes recaching.\n\t\t\t\tsat.put = change; // update cache\n\t\t\t\tif('string' == typeof (tmp = valid(change))){\n\t\t\t\t\tsat.put = root.$.get(tmp)._.put || change; // share same cache as what we're linked to.\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.to && this.to.next(msg); // 1st API job is to call all chain listeners.\n\t\t\t// TODO: Make input more reusable by only doing these (some?) calls if we are a chain we recognize? This means each input listener would be responsible for when listeners need to be called, which makes sense, as they might want to filter.\n\t\t\tcat.any && setTimeout.each(Object.keys(cat.any), function(any){ (any = cat.any[any]) && any(msg) },0,99); // 1st API job is to call all chain listeners. // TODO: .keys( is slow // BUG: Some re-in logic may depend on this being sync.\n\t\t\tcat.echo && setTimeout.each(Object.keys(cat.echo), function(lat){ (lat = cat.echo[lat]) && lat.on('in', msg) },0,99); // & linked at chains // TODO: .keys( is slow // BUG: Some re-in logic may depend on this being sync.\n\n\t\t\tif(((msg.$$||'')._||at).soul){ // comments are linear, but this line of code is non-linear, so if I were to comment what it does, you'd have to read 42 other comments first... but you can't read any of those comments until you first read this comment. What!? // shouldn't this match link's check?\n\t\t\t\t// is there cases where it is a $$ that we do NOT want to do the following? \n\t\t\t\tif((sat = cat.next) && (sat = sat[key])){ // TODO: possible trick? Maybe have `ionmap` code set a sat? // TODO: Maybe we should do `cat.ask` instead? I guess does not matter.\n\t\t\t\t\ttmp = {}; Object.keys(msg).forEach(function(k){ tmp[k] = msg[k] });\n\t\t\t\t\ttmp.$ = (msg.$$||msg.$).get(tmp.get = key); delete tmp.$$; delete tmp.$$$;\n\t\t\t\t\tsat.on('in', tmp);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlink(msg, cat);\n\t\t}; Gun.on.in = input;\n\n\t\tfunction link(msg, cat){ cat = cat || this.as || msg.$._;\n\t\t\tif(msg.$$ && this !== Gun.on){ return } // $$ means we came from a link, so we are at the wrong level, thus ignore it unless overruled manually by being called directly.\n\t\t\tif(!msg.put || cat.soul){ return } // But you cannot overrule being linked to nothing, or trying to link a soul chain - that must never happen.\n\t\t\tvar put = msg.put||'', link = put['=']||put[':'], tmp;\n\t\t\tvar root = cat.root, tat = root.$.get(put['#']).get(put['.'])._;\n\t\t\tif('string' != typeof (link = valid(link))){\n\t\t\t\tif(this === Gun.on){ (tat.echo || (tat.echo = {}))[cat.id] = cat } // allow some chain to explicitly force linking to simple data.\n\t\t\t\treturn; // by default do not link to data that is not a link.\n\t\t\t}\n\t\t\tif((tat.echo || (tat.echo = {}))[cat.id] // we've already linked ourselves so we do not need to do it again. Except... (annoying implementation details)\n\t\t\t\t&& !(root.pass||'')[cat.id]){ return } // if a new event listener was added, we need to make a pass through for it. The pass will be on the chain, not always the chain passed down. \n\t\t\tif(tmp = root.pass){ if(tmp[link+cat.id]){ return } tmp[link+cat.id] = 1 } // But the above edge case may \"pass through\" on a circular graph causing infinite passes, so we hackily add a temporary check for that.\n\n\t\t\t(tat.echo||(tat.echo={}))[cat.id] = cat; // set ourself up for the echo! // TODO: BUG? Echo to self no longer causes problems? Confirm.\n\n\t\t\tif(cat.has){ cat.link = link }\n\t\t\tvar sat = root.$.get(tat.link = link)._; // grab what we're linking to.\n\t\t\t(sat.echo || (sat.echo = {}))[tat.id] = tat; // link it.\n\t\t\tvar tmp = cat.ask||''; // ask the chain for what needs to be loaded next!\n\t\t\tif(tmp[''] || cat.lex){ // we might need to load the whole thing // TODO: cat.lex probably has edge case bugs to it, need more test coverage.\n\t\t\t\tsat.on('out', {get: {'#': link}});\n\t\t\t}\n\t\t\tsetTimeout.each(Object.keys(tmp), function(get, sat){ // if sub chains are asking for data. // TODO: .keys( is slow // BUG? ?Some re-in logic may depend on this being sync?\n\t\t\t\tif(!get || !(sat = tmp[get])){ return }\n\t\t\t\tsat.on('out', {get: {'#': link, '.': get}}); // go get it.\n\t\t\t},0,99);\n\t\t}; Gun.on.link = link;\n\n\t\tfunction unlink(msg, cat){ // ugh, so much code for seemingly edge case behavior.\n\t\t\tvar put = msg.put||'', change = (u !== put['='])? put['='] : put[':'], root = cat.root, link, tmp;\n\t\t\tif(u === change){ // 1st edge case: If we have a brand new database, no data will be found.\n\t\t\t\t// TODO: BUG! because emptying cache could be async from below, make sure we are not emptying a newer cache. So maybe pass an Async ID to check against?\n\t\t\t\t// TODO: BUG! What if this is a map? // Warning! Clearing things out needs to be robust against sync/async ops, or else you'll see `map val get put` test catastrophically fail because map attempts to link when parent graph is streamed before child value gets set. Need to differentiate between lack acks and force clearing.\n\t\t\t\tif(cat.soul && u !== cat.put){ return } // data may not be found on a soul, but if a soul already has data, then nothing can clear the soul as a whole.\n\t\t\t\t//if(!cat.has){ return }\n\t\t\t\ttmp = (msg.$$||msg.$||'')._||'';\n\t\t\t\tif(msg['@'] && (u !== tmp.put || u !== cat.put)){ return } // a \"not found\" from other peers should not clear out data if we have already found it.\n\t\t\t\t//if(cat.has && u === cat.put && !(root.pass||'')[cat.id]){ return } // if we are already unlinked, do not call again, unless edge case. // TODO: BUG! This line should be deleted for \"unlink deeply nested\".\n\t\t\t\tif(link = cat.link || msg.linked){\n\t\t\t\t\tdelete (root.$.get(link)._.echo||'')[cat.id];\n\t\t\t\t}\n\t\t\t\tif(cat.has){ // TODO: Empty out links, maps, echos, acks/asks, etc.?\n\t\t\t\t\tcat.link = null;\n\t\t\t\t}\n\t\t\t\tcat.put = u; // empty out the cache if, for example, alice's car's color no longer exists (relative to alice) if alice no longer has a car.\n\t\t\t\t// TODO: BUG! For maps, proxy this so the individual sub is triggered, not all subs.\n\t\t\t\tsetTimeout.each(Object.keys(cat.next||''), function(get, sat){ // empty out all sub chains. // TODO: .keys( is slow // BUG? ?Some re-in logic may depend on this being sync? // TODO: BUG? This will trigger deeper put first, does put logic depend on nested order? // TODO: BUG! For map, this needs to be the isolated child, not all of them.\n\t\t\t\t\tif(!(sat = cat.next[get])){ return }\n\t\t\t\t\t//if(cat.has && u === sat.put && !(root.pass||'')[sat.id]){ return } // if we are already unlinked, do not call again, unless edge case. // TODO: BUG! This line should be deleted for \"unlink deeply nested\".\n\t\t\t\t\tif(link){ delete (root.$.get(link).get(get)._.echo||'')[sat.id] }\n\t\t\t\t\tsat.on('in', {get: get, put: u, $: sat.$}); // TODO: BUG? Add recursive seen check?\n\t\t\t\t},0,99);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif(cat.soul){ return } // a soul cannot unlink itself.\n\t\t\tif(msg.$$){ return } // a linked chain does not do the unlinking, the sub chain does. // TODO: BUG? Will this cancel maps?\n\t\t\tlink = valid(change); // need to unlink anytime we are not the same link, though only do this once per unlink (and not on init).\n\t\t\ttmp = msg.$._||'';\n\t\t\tif(link === tmp.link || (cat.has && !tmp.link)){\n\t\t\t\tif((root.pass||'')[cat.id] && 'string' !== typeof link){\n\n\t\t\t\t} else {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tdelete (tmp.echo||'')[cat.id];\n\t\t\tunlink({get: cat.get, put: u, $: msg.$, linked: msg.linked = msg.linked || tmp.link}, cat); // unlink our sub chains.\n\t\t}; Gun.on.unlink = unlink;\n\n\t\tfunction ack(msg, ev){\n\t\t\t//if(!msg['%'] && (this||'').off){ this.off() } // do NOT memory leak, turn off listeners! Now handled by .ask itself\n\t\t\t// manhattan:\n\t\t\tvar as = this.as, at = as.$._, root = at.root, get = as.get||'', tmp = (msg.put||'')[get['#']]||'';\n\t\t\tif(!msg.put || ('string' == typeof get['.'] && u === tmp[get['.']])){\n\t\t\t\tif(u !== at.put){ return }\n\t\t\t\tif(!at.soul && !at.has){ return } // TODO: BUG? For now, only core-chains will handle not-founds, because bugs creep in if non-core chains are used as $ but we can revisit this later for more powerful extensions.\n\t\t\t\tat.ack = (at.ack || 0) + 1;\n\t\t\t\tat.on('in', {\n\t\t\t\t\tget: at.get,\n\t\t\t\t\tput: at.put = u,\n\t\t\t\t\t$: at.$,\n\t\t\t\t\t'@': msg['@']\n\t\t\t\t});\n\t\t\t\t/*(tmp = at.Q) && setTimeout.each(Object.keys(tmp), function(id){ // TODO: Temporary testing, not integrated or being used, probably delete.\n\t\t\t\t\tObject.keys(msg).forEach(function(k){ tmp[k] = msg[k] }, tmp = {}); tmp['@'] = id; // copy message\n\t\t\t\t\troot.on('in', tmp);\n\t\t\t\t}); delete at.Q;*/\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t(msg._||{}).miss = 1;\n\t\t\tGun.on.put(msg);\n\t\t\treturn; // eom\n\t\t}\n\n\t\tvar empty = {}, u, text_rand = String.random, valid = Gun.valid, obj_has = function(o, k){ return o && Object.prototype.hasOwnProperty.call(o, k) }, state = Gun.state, state_is = state.is, state_ify = state.ify;\n\t})(USE, './chain');\n\n\t;USE(function(module){\n\t\tvar Gun = USE('./root');\n\t\tGun.chain.get = function(key, cb, as){\n\t\t\tvar gun, tmp;\n\t\t\tif(typeof key === 'string'){\n\t\t\t\tif(key.length == 0) {\t\n\t\t\t\t\t(gun = this.chain())._.err = {err: Gun.log('0 length key!', key)};\n\t\t\t\t\tif(cb){ cb.call(gun, gun._.err) }\n\t\t\t\t\treturn gun;\n\t\t\t\t}\n\t\t\t\tvar back = this, cat = back._;\n\t\t\t\tvar next = cat.next || empty;\n\t\t\t\tif(!(gun = next[key])){\n\t\t\t\t\tgun = key && cache(key, back);\n\t\t\t\t}\n\t\t\t\tgun = gun && gun.$;\n\t\t\t} else\n\t\t\tif('function' == typeof key){\n\t\t\t\tif(true === cb){ return soul(this, key, cb, as), this }\n\t\t\t\tgun = this;\n\t\t\t\tvar cat = gun._, opt = cb || {}, root = cat.root, id;\n\t\t\t\topt.at = cat;\n\t\t\t\topt.ok = key;\n\t\t\t\tvar wait = {}; // can we assign this to the at instead, like in once?\n\t\t\t\t//var path = []; cat.$.back(at => { at.get && path.push(at.get.slice(0,9))}); path = path.reverse().join('.');\n\t\t\t\tfunction any(msg, eve, f){\n\t\t\t\t\tif(any.stun){ return }\n\t\t\t\t\tif((tmp = root.pass) && !tmp[id]){ return }\n\t\t\t\t\tvar at = msg.$._, sat = (msg.$$||'')._, data = (sat||at).put, odd = (!at.has && !at.soul), test = {}, link, tmp;\n\t\t\t\t\tif(odd || u === data){ // handles non-core\n\t\t\t\t\t\tdata = (u === ((tmp = msg.put)||'')['='])? (u === (tmp||'')[':'])? tmp : tmp[':'] : tmp['='];\n\t\t\t\t\t}\n\t\t\t\t\tif(link = ('string' == typeof (tmp = Gun.valid(data)))){\n\t\t\t\t\t\tdata = (u === (tmp = root.$.get(tmp)._.put))? opt.not? u : data : tmp;\n\t\t\t\t\t}\n\t\t\t\t\tif(opt.not && u === data){ return }\n\t\t\t\t\tif(u === opt.stun){\n\t\t\t\t\t\tif((tmp = root.stun) && tmp.on){\n\t\t\t\t\t\t\tcat.$.back(function(a){ // our chain stunned?\n\t\t\t\t\t\t\t\ttmp.on(''+a.id, test = {});\n\t\t\t\t\t\t\t\tif((test.run || 0) < any.id){ return test } // if there is an earlier stun on gapless parents/self.\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t!test.run && tmp.on(''+at.id, test = {}); // this node stunned?\n\t\t\t\t\t\t\t!test.run && sat && tmp.on(''+sat.id, test = {}); // linked node stunned?\n\t\t\t\t\t\t\tif(any.id > test.run){\n\t\t\t\t\t\t\t\tif(!test.stun || test.stun.end){\n\t\t\t\t\t\t\t\t\ttest.stun = tmp.on('stun');\n\t\t\t\t\t\t\t\t\ttest.stun = test.stun && test.stun.last;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif(test.stun && !test.stun.end){\n\t\t\t\t\t\t\t\t\t//if(odd && u === data){ return }\n\t\t\t\t\t\t\t\t\t//if(u === msg.put){ return } // \"not found\" acks will be found if there is stun, so ignore these.\n\t\t\t\t\t\t\t\t\t(test.stun.add || (test.stun.add = {}))[id] = function(){ any(msg,eve,1) } // add ourself to the stun callback list that is called at end of the write.\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(/*odd &&*/ u === data){ f = 0 } // if data not found, keep waiting/trying.\n\t\t\t\t\t\t/*if(f && u === data){\n\t\t\t\t\t\t\tcat.on('out', opt.out);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}*/\n\t\t\t\t\t\tif((tmp = root.hatch) && !tmp.end && u === opt.hatch && !f){ // quick hack! // What's going on here? Because data is streamed, we get things one by one, but a lot of developers would rather get a callback after each batch instead, so this does that by creating a wait list per chain id that is then called at the end of the batch by the hatch code in the root put listener.\n\t\t\t\t\t\t\tif(wait[at.$._.id]){ return } wait[at.$._.id] = 1;\n\t\t\t\t\t\t\ttmp.push(function(){any(msg,eve,1)});\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}; wait = {}; // end quick hack.\n\t\t\t\t\t}\n\t\t\t\t\t// call:\n\t\t\t\t\tif(root.pass){ if(root.pass[id+at.id]){ return } root.pass[id+at.id] = 1 }\n\t\t\t\t\tif(opt.on){ opt.ok.call(at.$, data, at.get, msg, eve || any); return } // TODO: Also consider breaking `this` since a lot of people do `=>` these days and `.call(` has slower performance.\n\t\t\t\t\tif(opt.v2020){ opt.ok(msg, eve || any); return }\n\t\t\t\t\tObject.keys(msg).forEach(function(k){ tmp[k] = msg[k] }, tmp = {}); msg = tmp; msg.put = data; // 2019 COMPATIBILITY! TODO: GET RID OF THIS!\n\t\t\t\t\topt.ok.call(opt.as, msg, eve || any); // is this the right\n\t\t\t\t};\n\t\t\t\tany.at = cat;\n\t\t\t\t//(cat.any||(cat.any=function(msg){ setTimeout.each(Object.keys(cat.any||''), function(act){ (act = cat.any[act]) && act(msg) },0,99) }))[id = String.random(7)] = any; // maybe switch to this in future?\n\t\t\t\t(cat.any||(cat.any={}))[id = String.random(7)] = any;\n\t\t\t\tany.off = function(){ any.stun = 1; if(!cat.any){ return } delete cat.any[id] }\n\t\t\t\tany.rid = rid; // logic from old version, can we clean it up now?\n\t\t\t\tany.id = opt.run || ++root.once; // used in callback to check if we are earlier than a write. // will this ever cause an integer overflow?\n\t\t\t\ttmp = root.pass; (root.pass = {})[id] = 1; // Explanation: test trade-offs want to prevent recursion so we add/remove pass flag as it gets fulfilled to not repeat, however map map needs many pass flags - how do we reconcile?\n\t\t\t\topt.out = opt.out || {get: {}};\n\t\t\t\tcat.on('out', opt.out);\n\t\t\t\troot.pass = tmp;\n\t\t\t\treturn gun;\n\t\t\t} else\n\t\t\tif('number' == typeof key){\n\t\t\t\treturn this.get(''+key, cb, as);\n\t\t\t} else\n\t\t\tif('string' == typeof (tmp = valid(key))){\n\t\t\t\treturn this.get(tmp, cb, as);\n\t\t\t} else\n\t\t\tif(tmp = this.get.next){\n\t\t\t\tgun = tmp(this, key);\n\t\t\t}\n\t\t\tif(!gun){\n\t\t\t\t(gun = this.chain())._.err = {err: Gun.log('Invalid get request!', key)}; // CLEAN UP\n\t\t\t\tif(cb){ cb.call(gun, gun._.err) }\n\t\t\t\treturn gun;\n\t\t\t}\n\t\t\tif(cb && 'function' == typeof cb){\n\t\t\t\tgun.get(cb, as);\n\t\t\t}\n\t\t\treturn gun;\n\t\t}\n\t\tfunction cache(key, back){\n\t\t\tvar cat = back._, next = cat.next, gun = back.chain(), at = gun._;\n\t\t\tif(!next){ next = cat.next = {} }\n\t\t\tnext[at.get = key] = at;\n\t\t\tif(back === cat.root.$){\n\t\t\t\tat.soul = key;\n\t\t\t\t//at.put = {};\n\t\t\t} else\n\t\t\tif(cat.soul || cat.has){\n\t\t\t\tat.has = key;\n\t\t\t\t//if(obj_has(cat.put, key)){\n\t\t\t\t\t//at.put = cat.put[key];\n\t\t\t\t//}\n\t\t\t}\n\t\t\treturn at;\n\t\t}\n\t\tfunction soul(gun, cb, opt, as){\n\t\t\tvar cat = gun._, acks = 0, tmp;\n\t\t\tif(tmp = cat.soul || cat.link){ return cb(tmp, as, cat) }\n\t\t\tif(cat.jam){ return cat.jam.push([cb, as]) }\n\t\t\tcat.jam = [[cb,as]];\n\t\t\tgun.get(function go(msg, eve){\n\t\t\t\tif(u === msg.put && !cat.root.opt.super && (tmp = Object.keys(cat.root.opt.peers).length) && ++acks <= tmp){ // TODO: super should not be in core code, bring AXE up into core instead to fix? // TODO: .keys( is slow\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\teve.rid(msg);\n\t\t\t\tvar at = ((at = msg.$) && at._) || {}, i = 0, as;\n\t\t\t\ttmp = cat.jam; delete cat.jam; // tmp = cat.jam.splice(0, 100);\n\t\t\t\t//if(tmp.length){ process.nextTick(function(){ go(msg, eve) }) }\n\t\t\t\twhile(as = tmp[i++]){ //Gun.obj.map(tmp, function(as, cb){\n\t\t\t\t\tvar cb = as[0], id; as = as[1];\n\t\t\t\t\tcb && cb(id = at.link || at.soul || Gun.valid(msg.put) || ((msg.put||{})._||{})['#'], as, msg, eve);\n\t\t\t\t} //);\n\t\t\t}, {out: {get: {'.':true}}});\n\t\t\treturn gun;\n\t\t}\n\t\tfunction rid(at){\n\t\t\tvar cat = this.at || this.on;\n\t\t\tif(!at || cat.soul || cat.has){ return this.off() }\n\t\t\tif(!(at = (at = (at = at.$ || at)._ || at).id)){ return }\n\t\t\tvar map = cat.map, tmp, seen;\n\t\t\t//if(!map || !(tmp = map[at]) || !(tmp = tmp.at)){ return }\n\t\t\tif(tmp = (seen = this.seen || (this.seen = {}))[at]){ return true }\n\t\t\tseen[at] = true;\n\t\t\treturn;\n\t\t\t//tmp.echo[cat.id] = {}; // TODO: Warning: This unsubscribes ALL of this chain's listeners from this link, not just the one callback event.\n\t\t\t//obj.del(map, at); // TODO: Warning: This unsubscribes ALL of this chain's listeners from this link, not just the one callback event.\n\t\t\treturn;\n\t\t}\n\t\tvar empty = {}, valid = Gun.valid, u;\n\t})(USE, './get');\n\n\t;USE(function(module){\n\t\tvar Gun = USE('./root');\n\t\tGun.chain.put = function(data, cb, as){ // I rewrote it :)\n\t\t\tvar gun = this, at = gun._, root = at.root;\n\t\t\tas = as || {};\n\t\t\tas.root = at.root;\n\t\t\tas.run || (as.run = root.once);\n\t\t\tstun(as, at.id); // set a flag for reads to check if this chain is writing.\n\t\t\tas.ack = as.ack || cb;\n\t\t\tas.via = as.via || gun;\n\t\t\tas.data = as.data || data;\n\t\t\tas.soul || (as.soul = at.soul || ('string' == typeof cb && cb));\n\t\t\tvar s = as.state = as.state || Gun.state();\n\t\t\tif('function' == typeof data){ data(function(d){ as.data = d; gun.put(u,u,as) }); return gun }\n\t\t\tif(!as.soul){ return get(as), gun }\n\t\t\tas.$ = root.$.get(as.soul); // TODO: This may not allow user chaining and similar?\n\t\t\tas.todo = [{it: as.data, ref: as.$}];\n\t\t\tas.turn = as.turn || turn;\n\t\t\tas.ran = as.ran || ran;\n\t\t\t//var path = []; as.via.back(at => { at.get && path.push(at.get.slice(0,9)) }); path = path.reverse().join('.');\n\t\t\t// TODO: Perf! We only need to stun chains that are being modified, not necessarily written to.\n\t\t\t(function walk(){\n\t\t\t\tvar to = as.todo, at = to.pop(), d = at.it, cid = at.ref && at.ref._.id, v, k, cat, tmp, g;\n\t\t\t\tstun(as, at.ref);\n\t\t\t\tif(tmp = at.todo){\n\t\t\t\t\tk = tmp.pop(); d = d[k];\n\t\t\t\t\tif(tmp.length){ to.push(at) }\n\t\t\t\t}\n\t\t\t\tk && (to.path || (to.path = [])).push(k);\n\t\t\t\tif(!(v = valid(d)) && !(g = Gun.is(d))){\n\t\t\t\t\tif(!Object.plain(d)){ ran.err(as, \"Invalid data: \"+ check(d) +\" at \" + (as.via.back(function(at){at.get && tmp.push(at.get)}, tmp = []) || tmp.join('.'))+'.'+(to.path||[]).join('.')); return }\n\t\t\t\t\tvar seen = as.seen || (as.seen = []), i = seen.length;\n\t\t\t\t\twhile(i--){ if(d === (tmp = seen[i]).it){ v = d = tmp.link; break } }\n\t\t\t\t}\n\t\t\t\tif(k && v){ at.node = state_ify(at.node, k, s, d) } // handle soul later.\n\t\t\t\telse {\n\t\t\t\t\tif(!as.seen){ ran.err(as, \"Data at root of graph must be a node (an object).\"); return }\n\t\t\t\t\tas.seen.push(cat = {it: d, link: {}, todo: g? [] : Object.keys(d).sort().reverse(), path: (to.path||[]).slice(), up: at}); // Any perf reasons to CPU schedule this .keys( ?\n\t\t\t\t\tat.node = state_ify(at.node, k, s, cat.link);\n\t\t\t\t\t!g && cat.todo.length && to.push(cat);\n\t\t\t\t\t// ---------------\n\t\t\t\t\tvar id = as.seen.length;\n\t\t\t\t\t(as.wait || (as.wait = {}))[id] = '';\n\t\t\t\t\ttmp = (cat.ref = (g? d : k? at.ref.get(k) : at.ref))._;\n\t\t\t\t\t(tmp = (d && (d._||'')['#']) || tmp.soul || tmp.link)? resolve({soul: tmp}) : cat.ref.get(resolve, {run: as.run, /*hatch: 0,*/ v2020:1, out:{get:{'.':' '}}}); // TODO: BUG! This should be resolve ONLY soul to prevent full data from being loaded. // Fixed now?\n\t\t\t\t\t//setTimeout(function(){ if(F){ return } console.log(\"I HAVE NOT BEEN CALLED!\", path, id, cat.ref._.id, k) }, 9000); var F; // MAKE SURE TO ADD F = 1 below!\n\t\t\t\t\tfunction resolve(msg, eve){\n\t\t\t\t\t\tvar end = cat.link['#'];\n\t\t\t\t\t\tif(eve){ eve.off(); eve.rid(msg) } // TODO: Too early! Check all peers ack not found.\n\t\t\t\t\t\t// TODO: BUG maybe? Make sure this does not pick up a link change wipe, that it uses the changign link instead.\n\t\t\t\t\t\tvar soul = end || msg.soul || (tmp = (msg.$$||msg.$)._||'').soul || tmp.link || ((tmp = tmp.put||'')._||'')['#'] || tmp['#'] || (((tmp = msg.put||'') && msg.$$)? tmp['#'] : (tmp['=']||tmp[':']||'')['#']);\n\t\t\t\t\t\t!end && stun(as, msg.$);\n\t\t\t\t\t\tif(!soul && !at.link['#']){ // check soul link above us\n\t\t\t\t\t\t\t(at.wait || (at.wait = [])).push(function(){ resolve(msg, eve) }) // wait\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(!soul){\n\t\t\t\t\t\t\tsoul = [];\n\t\t\t\t\t\t\t(msg.$$||msg.$).back(function(at){\n\t\t\t\t\t\t\t\tif(tmp = at.soul || at.link){ return soul.push(tmp) }\n\t\t\t\t\t\t\t\tsoul.push(at.get);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tsoul = soul.reverse().join('/');\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcat.link['#'] = soul;\n\t\t\t\t\t\t!g && (((as.graph || (as.graph = {}))[soul] = (cat.node || (cat.node = {_:{}})))._['#'] = soul);\n\t\t\t\t\t\tdelete as.wait[id];\n\t\t\t\t\t\tcat.wait && setTimeout.each(cat.wait, function(cb){ cb && cb() });\n\t\t\t\t\t\tas.ran(as);\n\t\t\t\t\t};\n\t\t\t\t\t// ---------------\n\t\t\t\t}\n\t\t\t\tif(!to.length){ return as.ran(as) }\n\t\t\t\tas.turn(walk);\n\t\t\t}());\n\t\t\treturn gun;\n\t\t}\n\n\t\tfunction stun(as, id){\n\t\t\tif(!id){ return } id = (id._||'').id||id;\n\t\t\tvar run = as.root.stun || (as.root.stun = {on: Gun.on}), test = {}, tmp;\n\t\t\tas.stun || (as.stun = run.on('stun', function(){ }));\n\t\t\tif(tmp = run.on(''+id)){ tmp.the.last.next(test) }\n\t\t\tif(test.run >= as.run){ return }\n\t\t\trun.on(''+id, function(test){\n\t\t\t\tif(as.stun.end){\n\t\t\t\t\tthis.off();\n\t\t\t\t\tthis.to.next(test);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\ttest.run = test.run || as.run;\n\t\t\t\ttest.stun = test.stun || as.stun; return;\n\t\t\t\tif(this.to.to){\n\t\t\t\t\tthis.the.last.next(test);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\ttest.stun = as.stun;\n\t\t\t});\n\t\t}\n\n\t\tfunction ran(as){\n\t\t\tif(as.err){ ran.end(as.stun, as.root); return } // move log handle here.\n\t\t\tif(as.todo.length || as.end || !Object.empty(as.wait)){ return } as.end = 1;\n\t\t\t//(as.retry = function(){ as.acks = 0;\n\t\t\tvar cat = (as.$.back(-1)._), root = cat.root, ask = cat.ask(function(ack){\n\t\t\t\troot.on('ack', ack);\n\t\t\t\tif(ack.err && !ack.lack){ Gun.log(ack) }\n\t\t\t\tif(++acks > (as.acks || 0)){ this.off() } // Adjustable ACKs! Only 1 by default.\n\t\t\t\tif(!as.ack){ return }\n\t\t\t\tas.ack(ack, this);\n\t\t\t}, as.opt), acks = 0, stun = as.stun, tmp;\n\t\t\t(tmp = function(){ // this is not official yet, but quick solution to hack in for now.\n\t\t\t\tif(!stun){ return }\n\t\t\t\tran.end(stun, root);\n\t\t\t\tsetTimeout.each(Object.keys(stun = stun.add||''), function(cb){ if(cb = stun[cb]){cb()} }); // resume the stunned reads // Any perf reasons to CPU schedule this .keys( ?\n\t\t\t}).hatch = tmp; // this is not official yet ^\n\t\t\t//console.log(1, \"PUT\", as.run, as.graph);\n\t\t\tif(as.ack && !as.ok){ as.ok = as.acks || 9 } // TODO: In future! Remove this! This is just old API support.\n\t\t\t(as.via._).on('out', {put: as.out = as.graph, ok: as.ok && {'@': as.ok+1}, opt: as.opt, '#': ask, _: tmp});\n\t\t\t//})();\n\t\t}; ran.end = function(stun,root){\n\t\t\tstun.end = noop; // like with the earlier id, cheaper to make this flag a function so below callbacks do not have to do an extra type check.\n\t\t\tif(stun.the.to === stun && stun === stun.the.last){ delete root.stun }\n\t\t\tstun.off();\n\t\t}; ran.err = function(as, err){\n\t\t\t(as.ack||noop).call(as, as.out = { err: as.err = Gun.log(err) });\n\t\t\tas.ran(as);\n\t\t}\n\n\t\tfunction get(as){\n\t\t\tvar at = as.via._, tmp;\n\t\t\tas.via = as.via.back(function(at){\n\t\t\t\tif(at.soul || !at.get){ return at.$ }\n\t\t\t\ttmp = as.data; (as.data = {})[at.get] = tmp;\n\t\t\t});\n\t\t\tif(!as.via || !as.via._.soul){\n\t\t\t\tas.via = at.root.$.get(((as.data||'')._||'')['#'] || at.$.back('opt.uuid')())\n\t\t\t}\n\t\t\tas.via.put(as.data, as.ack, as);\n\t\t\t\n\n\t\t\treturn;\n\t\t\tif(at.get && at.back.soul){\n\t\t\t\ttmp = as.data;\n\t\t\t\tas.via = at.back.$;\n\t\t\t\t(as.data = {})[at.get] = tmp; \n\t\t\t\tas.via.put(as.data, as.ack, as);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tfunction check(d, tmp){ return ((d && (tmp = d.constructor) && tmp.name) || typeof d) }\n\n\t\tvar u, empty = {}, noop = function(){}, turn = setTimeout.turn, valid = Gun.valid, state_ify = Gun.state.ify;\n\t\tvar iife = function(fn,as){fn.call(as||empty)}\n\t})(USE, './put');\n\n\t;USE(function(module){\n\t\tvar Gun = USE('./root');\n\t\tUSE('./chain');\n\t\tUSE('./back');\n\t\tUSE('./put');\n\t\tUSE('./get');\n\t\tmodule.exports = Gun;\n\t})(USE, './index');\n\n\t;USE(function(module){\n\t\tvar Gun = USE('./index');\n\t\tGun.chain.on = function(tag, arg, eas, as){ // don't rewrite!\n\t\t\tvar gun = this, cat = gun._, root = cat.root, act, off, id, tmp;\n\t\t\tif(typeof tag === 'string'){\n\t\t\t\tif(!arg){ return cat.on(tag) }\n\t\t\t\tact = cat.on(tag, arg, eas || cat, as);\n\t\t\t\tif(eas && eas.$){\n\t\t\t\t\t(eas.subs || (eas.subs = [])).push(act);\n\t\t\t\t}\n\t\t\t\treturn gun;\n\t\t\t}\n\t\t\tvar opt = arg;\n\t\t\t(opt = (true === opt)? {change: true} : opt || {}).not = 1; opt.on = 1;\n\t\t\t//opt.at = cat;\n\t\t\t//opt.ok = tag;\n\t\t\t//opt.last = {};\n\t\t\tvar wait = {}; // can we assign this to the at instead, like in once?\n\t\t\tgun.get(tag, opt);\n\t\t\t/*gun.get(function on(data,key,msg,eve){ var $ = this;\n\t\t\t\tif(tmp = root.hatch){ // quick hack!\n\t\t\t\t\tif(wait[$._.id]){ return } wait[$._.id] = 1;\n\t\t\t\t\ttmp.push(function(){on.call($, data,key,msg,eve)});\n\t\t\t\t\treturn;\n\t\t\t\t}; wait = {}; // end quick hack.\n\t\t\t\ttag.call($, data,key,msg,eve);\n\t\t\t}, opt); // TODO: PERF! Event listener leak!!!?*/\n\t\t\t/*\n\t\t\tfunction one(msg, eve){\n\t\t\t\tif(one.stun){ return }\n\t\t\t\tvar at = msg.$._, data = at.put, tmp;\n\t\t\t\tif(tmp = at.link){ data = root.$.get(tmp)._.put }\n\t\t\t\tif(opt.not===u && u === data){ return }\n\t\t\t\tif(opt.stun===u && (tmp = root.stun) && (tmp = tmp[at.id] || tmp[at.back.id]) && !tmp.end){ // Remember! If you port this into `.get(cb` make sure you allow stun:0 skip option for `.put(`.\n\t\t\t\t\ttmp[id] = function(){one(msg,eve)};\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t//tmp = one.wait || (one.wait = {}); console.log(tmp[at.id] === ''); if(tmp[at.id] !== ''){ tmp[at.id] = tmp[at.id] || setTimeout(function(){tmp[at.id]='';one(msg,eve)},1); return } delete tmp[at.id];\n\t\t\t\t// call:\n\t\t\t\tif(opt.as){\n\t\t\t\t\topt.ok.call(opt.as, msg, eve || one);\n\t\t\t\t} else {\n\t\t\t\t\topt.ok.call(at.$, data, msg.get || at.get, msg, eve || one);\n\t\t\t\t}\n\t\t\t};\n\t\t\tone.at = cat;\n\t\t\t(cat.act||(cat.act={}))[id = String.random(7)] = one;\n\t\t\tone.off = function(){ one.stun = 1; if(!cat.act){ return } delete cat.act[id] }\n\t\t\tcat.on('out', {get: {}});*/\n\t\t\treturn gun;\n\t\t}\n\t\t// Rules:\n\t\t// 1. If cached, should be fast, but not read while write.\n\t\t// 2. Should not retrigger other listeners, should get triggered even if nothing found.\n\t\t// 3. If the same callback passed to many different once chains, each should resolve - an unsubscribe from the same callback should not effect the state of the other resolving chains, if you do want to cancel them all early you should mutate the callback itself with a flag & check for it at top of callback\n\t\tGun.chain.once = function(cb, opt){ opt = opt || {}; // avoid rewriting\n\t\t\tif(!cb){ return none(this,opt) }\n\t\t\tvar gun = this, cat = gun._, root = cat.root, data = cat.put, id = String.random(7), one, tmp;\n\t\t\tgun.get(function(data,key,msg,eve){\n\t\t\t\tvar $ = this, at = $._, one = (at.one||(at.one={}));\n\t\t\t\tif(eve.stun){ return } if('' === one[id]){ return }\n\t\t\t\tif(true === (tmp = Gun.valid(data))){ once(); return }\n\t\t\t\tif('string' == typeof tmp){ return } // TODO: BUG? Will this always load?\n\t\t\t\tclearTimeout((cat.one||'')[id]); // clear \"not found\" since they only get set on cat.\n\t\t\t\tclearTimeout(one[id]); one[id] = setTimeout(once, opt.wait||99); // TODO: Bug? This doesn't handle plural chains.\n\t\t\t\tfunction once(f){\n\t\t\t\t\tif(!at.has && !at.soul){ at = {put: data, get: key} } // handles non-core messages.\n\t\t\t\t\tif(u === (tmp = at.put)){ tmp = ((msg.$$||'')._||'').put }\n\t\t\t\t\tif('string' == typeof Gun.valid(tmp)){\n\t\t\t\t\t\ttmp = root.$.get(tmp)._.put;\n\t\t\t\t\t\tif(tmp === u && !f){\n\t\t\t\t\t\t\tone[id] = setTimeout(function(){ once(1) }, opt.wait||99); // TODO: Quick fix. Maybe use ack count for more predictable control?\n\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t//console.log(\"AND VANISHED\", data);\n\t\t\t\t\tif(eve.stun){ return } if('' === one[id]){ return } one[id] = '';\n\t\t\t\t\tif(cat.soul || cat.has){ eve.off() } // TODO: Plural chains? // else { ?.off() } // better than one check?\n\t\t\t\t\tcb.call($, tmp, at.get);\n\t\t\t\t\tclearTimeout(one[id]); // clear \"not found\" since they only get set on cat. // TODO: This was hackily added, is it necessary or important? Probably not, in future try removing this. Was added just as a safety for the `&& !f` check.\n\t\t\t\t};\n\t\t\t}, {on: 1});\n\t\t\treturn gun;\n\t\t}\n\t\tfunction none(gun,opt,chain){\n\t\t\tGun.log.once(\"valonce\", \"Chainable val is experimental, its behavior and API may change moving forward. Please play with it and report bugs and ideas on how to improve it.\");\n\t\t\t(chain = gun.chain())._.nix = gun.once(function(data, key){ chain._.on('in', this._) });\n\t\t\tchain._.lex = gun._.lex; // TODO: Better approach in future? This is quick for now.\n\t\t\treturn chain;\n\t\t}\n\n\t\tGun.chain.off = function(){\n\t\t\t// make off more aggressive. Warning, it might backfire!\n\t\t\tvar gun = this, at = gun._, tmp;\n\t\t\tvar cat = at.back;\n\t\t\tif(!cat){ return }\n\t\t\tat.ack = 0; // so can resubscribe.\n\t\t\tif(tmp = cat.next){\n\t\t\t\tif(tmp[at.get]){\n\t\t\t\t\tdelete tmp[at.get];\n\t\t\t\t} else {\n\n\t\t\t\t}\n\t\t\t}\n\t\t\t// TODO: delete cat.one[map.id]?\n\t\t\tif (tmp = cat.any) {\n\t\t\t\tdelete cat.any;\n\t\t\t\tcat.any = {};\n\t\t\t}\n\t\t\tif(tmp = cat.ask){\n\t\t\t\tdelete tmp[at.get];\n\t\t\t}\n\t\t\tif(tmp = cat.put){\n\t\t\t\tdelete tmp[at.get];\n\t\t\t}\n\t\t\tif(tmp = at.soul){\n\t\t\t\tdelete cat.root.graph[tmp];\n\t\t\t}\n\t\t\tif(tmp = at.map){\n\t\t\t\tObject.keys(tmp).forEach(function(i,at){ at = tmp[i]; //obj_map(tmp, function(at){\n\t\t\t\t\tif(at.link){\n\t\t\t\t\t\tcat.root.$.get(at.link).off();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\tif(tmp = at.next){\n\t\t\t\tObject.keys(tmp).forEach(function(i,neat){ neat = tmp[i]; //obj_map(tmp, function(neat){\n\t\t\t\t\tneat.$.off();\n\t\t\t\t});\n\t\t\t}\n\t\t\tat.on('off', {});\n\t\t\treturn gun;\n\t\t}\n\t\tvar empty = {}, noop = function(){}, u;\n\t})(USE, './on');\n\n\t;USE(function(module){\n\t\tvar Gun = USE('./index'), next = Gun.chain.get.next;\n\t\tGun.chain.get.next = function(gun, lex){ var tmp;\n\t\t\tif(!Object.plain(lex)){ return (next||noop)(gun, lex) }\n\t\t\tif(tmp = ((tmp = lex['#'])||'')['='] || tmp){ return gun.get(tmp) }\n\t\t\t(tmp = gun.chain()._).lex = lex; // LEX!\n\t\t\tgun.on('in', function(eve){\n\t\t\t\tif(String.match(eve.get|| (eve.put||'')['.'], lex['.'] || lex['#'] || lex)){\n\t\t\t\t\ttmp.on('in', eve);\n\t\t\t\t}\n\t\t\t\tthis.to.next(eve);\n\t\t\t});\n\t\t\treturn tmp.$;\n\t\t}\n\t\tGun.chain.map = function(cb, opt, t){\n\t\t\tvar gun = this, cat = gun._, lex, chain;\n\t\t\tif(Object.plain(cb)){ lex = cb['.']? cb : {'.': cb}; cb = u }\n\t\t\tif(!cb){\n\t\t\t\tif(chain = cat.each){ return chain }\n\t\t\t\t(cat.each = chain = gun.chain())._.lex = lex || chain._.lex || cat.lex;\n\t\t\t\tchain._.nix = gun.back('nix');\n\t\t\t\tgun.on('in', map, chain._);\n\t\t\t\treturn chain;\n\t\t\t}\n\t\t\tGun.log.once(\"mapfn\", \"Map functions are experimental, their behavior and API may change moving forward. Please play with it and report bugs and ideas on how to improve it.\");\n\t\t\tchain = gun.chain();\n\t\t\tgun.map().on(function(data, key, msg, eve){\n\t\t\t\tvar next = (cb||noop).call(this, data, key, msg, eve);\n\t\t\t\tif(u === next){ return }\n\t\t\t\tif(data === next){ return chain._.on('in', msg) }\n\t\t\t\tif(Gun.is(next)){ return chain._.on('in', next._) }\n\t\t\t\tvar tmp = {}; Object.keys(msg.put).forEach(function(k){ tmp[k] = msg.put[k] }, tmp); tmp['='] = next; \n\t\t\t\tchain._.on('in', {get: key, put: tmp});\n\t\t\t});\n\t\t\treturn chain;\n\t\t}\n\t\tfunction map(msg){ this.to.next(msg);\n\t\t\tvar cat = this.as, gun = msg.$, at = gun._, put = msg.put, tmp;\n\t\t\tif(!at.soul && !msg.$$){ return } // this line took hundreds of tries to figure out. It only works if core checks to filter out above chains during link tho. This says \"only bother to map on a node\" for this layer of the chain. If something is not a node, map should not work.\n\t\t\tif((tmp = cat.lex) && !String.match(msg.get|| (put||'')['.'], tmp['.'] || tmp['#'] || tmp)){ return }\n\t\t\tGun.on.link(msg, cat);\n\t\t}\n\t\tvar noop = function(){}, event = {stun: noop, off: noop}, u;\n\t})(USE, './map');\n\n\t;USE(function(module){\n\t\tvar Gun = USE('./index');\n\t\tGun.chain.set = function(item, cb, opt){\n\t\t\tvar gun = this, root = gun.back(-1), soul, tmp;\n\t\t\tcb = cb || function(){};\n\t\t\topt = opt || {}; opt.item = opt.item || item;\n\t\t\tif(soul = ((item||'')._||'')['#']){ (item = {})['#'] = soul } // check if node, make link.\n\t\t\tif('string' == typeof (tmp = Gun.valid(item))){ return gun.get(soul = tmp).put(item, cb, opt) } // check if link\n\t\t\tif(!Gun.is(item)){\n\t\t\t\tif(Object.plain(item)){\n\t\t\t\t\titem = root.get(soul = gun.back('opt.uuid')()).put(item);\n\t\t\t\t}\n\t\t\t\treturn gun.get(soul || root.back('opt.uuid')(7)).put(item, cb, opt);\n\t\t\t}\n\t\t\tgun.put(function(go){\n\t\t\t\titem.get(function(soul, o, msg){ // TODO: BUG! We no longer have this option? & go error not handled?\n\t\t\t\t\tif(!soul){ return cb.call(gun, {err: Gun.log('Only a node can be linked! Not \"' + msg.put + '\"!')}) }\n\t\t\t\t\t(tmp = {})[soul] = {'#': soul}; go(tmp);\n\t\t\t\t},true);\n\t\t\t})\n\t\t\treturn item;\n\t\t}\n\t})(USE, './set');\n\n\t;USE(function(module){\n\t\tUSE('./shim');\n\n\t\tvar noop = function(){}\n\t\tvar parse = JSON.parseAsync || function(t,cb,r){ var u, d = +new Date; try{ cb(u, JSON.parse(t,r), json.sucks(+new Date - d)) }catch(e){ cb(e) } }\n\t\tvar json = JSON.stringifyAsync || function(v,cb,r,s){ var u, d = +new Date; try{ cb(u, JSON.stringify(v,r,s), json.sucks(+new Date - d)) }catch(e){ cb(e) } }\n\t\tjson.sucks = function(d){ if(d > 99){ console.log(\"Warning: JSON blocking CPU detected. Add `gun/lib/yson.js` to fix.\"); json.sucks = noop } }\n\n\t\tfunction Mesh(root){\n\t\t\tvar mesh = function(){};\n\t\t\tvar opt = root.opt || {};\n\t\t\topt.log = opt.log || console.log;\n\t\t\topt.gap = opt.gap || opt.wait || 0;\n\t\t\topt.max = opt.max || (opt.memory? (opt.memory * 999 * 999) : 300000000) * 0.3;\n\t\t\topt.pack = opt.pack || (opt.max * 0.01 * 0.01);\n\t\t\topt.puff = opt.puff || 9; // IDEA: do a start/end benchmark, divide ops/result.\n\t\t\tvar puff = setTimeout.turn || setTimeout;\n\n\t\t\tvar dup = root.dup, dup_check = dup.check, dup_track = dup.track;\n\n\t\t\tvar ST = +new Date, LT = ST;\n\n\t\t\tvar hear = mesh.hear = function(raw, peer){\n\t\t\t\tif(!raw){ return }\n\t\t\t\tif(opt.max <= raw.length){ return mesh.say({dam: '!', err: \"Message too big!\"}, peer) }\n\t\t\t\tif(mesh === this){\n\t\t\t\t\t/*if('string' == typeof raw){ try{\n\t\t\t\t\t\tvar stat = console.STAT || {};\n\t\t\t\t\t\t//console.log('HEAR:', peer.id, (raw||'').slice(0,250), ((raw||'').length / 1024 / 1024).toFixed(4));\n\t\t\t\t\t\t\n\t\t\t\t\t\t//console.log(setTimeout.turn.s.length, 'stacks', parseFloat((-(LT - (LT = +new Date))/1000).toFixed(3)), 'sec', parseFloat(((LT-ST)/1000 / 60).toFixed(1)), 'up', stat.peers||0, 'peers', stat.has||0, 'has', stat.memhused||0, stat.memused||0, stat.memax||0, 'heap mem max');\n\t\t\t\t\t}catch(e){ console.log('DBG err', e) }}*/\n\t\t\t\t\thear.d += raw.length||0 ; ++hear.c } // STATS!\n\t\t\t\tvar S = peer.SH = +new Date;\n\t\t\t\tvar tmp = raw[0], msg;\n\t\t\t\t//raw && raw.slice && console.log(\"hear:\", ((peer.wire||'').headers||'').origin, raw.length, raw.slice && raw.slice(0,50)); //tc-iamunique-tc-package-ds1\n\t\t\t\tif('[' === tmp){\n\t\t\t\t\tparse(raw, function(err, msg){\n\t\t\t\t\t\tif(err || !msg){ return mesh.say({dam: '!', err: \"DAM JSON parse error.\"}, peer) }\n\t\t\t\t\t\tconsole.STAT && console.STAT(+new Date, msg.length, '# on hear batch');\n\t\t\t\t\t\tvar P = opt.puff;\n\t\t\t\t\t\t(function go(){\n\t\t\t\t\t\t\tvar S = +new Date;\n\t\t\t\t\t\t\tvar i = 0, m; while(i < P && (m = msg[i++])){ mesh.hear(m, peer) }\n\t\t\t\t\t\t\tmsg = msg.slice(i); // slicing after is faster than shifting during.\n\t\t\t\t\t\t\tconsole.STAT && console.STAT(S, +new Date - S, 'hear loop');\n\t\t\t\t\t\t\tflush(peer); // force send all synchronously batched acks.\n\t\t\t\t\t\t\tif(!msg.length){ return }\n\t\t\t\t\t\t\tpuff(go, 0);\n\t\t\t\t\t\t}());\n\t\t\t\t\t});\n\t\t\t\t\traw = ''; // \n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif('{' === tmp || ((raw['#'] || Object.plain(raw)) && (msg = raw))){\n\t\t\t\t\tif(msg){ return hear.one(msg, peer, S) }\n\t\t\t\t\tparse(raw, function(err, msg){\n\t\t\t\t\t\tif(err || !msg){ return mesh.say({dam: '!', err: \"DAM JSON parse error.\"}, peer) }\n\t\t\t\t\t\thear.one(msg, peer, S);\n\t\t\t\t\t});\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\thear.one = function(msg, peer, S){ // S here is temporary! Undo.\n\t\t\t\tvar id, hash, tmp, ash, DBG;\n\t\t\t\tif(msg.DBG){ msg.DBG = DBG = {DBG: msg.DBG} }\n\t\t\t\tDBG && (DBG.h = S);\n\t\t\t\tDBG && (DBG.hp = +new Date);\n\t\t\t\tif(!(id = msg['#'])){ id = msg['#'] = String.random(9) }\n\t\t\t\tif(tmp = dup_check(id)){ return }\n\t\t\t\t// DAM logic:\n\t\t\t\tif(!(hash = msg['##']) && false && u !== msg.put){ /*hash = msg['##'] = Type.obj.hash(msg.put)*/ } // disable hashing for now // TODO: impose warning/penalty instead (?)\n\t\t\t\tif(hash && (tmp = msg['@'] || (msg.get && id)) && dup.check(ash = tmp+hash)){ return } // Imagine A <-> B <=> (C & D), C & D reply with same ACK but have different IDs, B can use hash to dedup. Or if a GET has a hash already, we shouldn't ACK if same.\n\t\t\t\t(msg._ = function(){}).via = mesh.leap = peer;\n\t\t\t\tif((tmp = msg['><']) && 'string' == typeof tmp){ tmp.slice(0,99).split(',').forEach(function(k){ this[k] = 1 }, (msg._).yo = {}) } // Peers already sent to, do not resend.\n\t\t\t\t// DAM ^\n\t\t\t\tif(tmp = msg.dam){\n\t\t\t\t\tif(tmp = mesh.hear[tmp]){\n\t\t\t\t\t\ttmp(msg, peer, root);\n\t\t\t\t\t}\n\t\t\t\t\tdup_track(id);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif(tmp = msg.ok){ msg._.near = tmp['/'] }\n\t\t\t\tvar S = +new Date;\n\t\t\t\tDBG && (DBG.is = S); peer.SI = id;\n\t\t\t\tdup_track.ed = function(d){\n\t\t\t\t\tif(id !== d){ return }\n\t\t\t\t\tdup_track.ed = 0;\n\t\t\t\t\tif(!(d = dup.s[id])){ return }\n\t\t\t\t\td.via = peer;\n\t\t\t\t\tif(msg.get){ d.it = msg }\n\t\t\t\t}\n\t\t\t\troot.on('in', mesh.last = msg);\n\t\t\t\tDBG && (DBG.hd = +new Date);\n\t\t\t\tconsole.STAT && console.STAT(S, +new Date - S, msg.get? 'msg get' : msg.put? 'msg put' : 'msg');\n\t\t\t\tdup_track(id); // in case 'in' does not call track.\n\t\t\t\tif(ash){ dup_track(ash) } //dup.track(tmp+hash, true).it = it(msg);\n\t\t\t\tmesh.leap = mesh.last = null; // warning! mesh.leap could be buggy.\n\t\t\t}\n\t\t\tvar tomap = function(k,i,m){m(k,true)};\n\t\t\thear.c = hear.d = 0;\n\n\t\t\t;(function(){\n\t\t\t\tvar SMIA = 0;\n\t\t\t\tvar loop;\n\t\t\t\tmesh.hash = function(msg, peer){ var h, s, t;\n\t\t\t\t\tvar S = +new Date;\n\t\t\t\t\tjson(msg.put, function hash(err, text){\n\t\t\t\t\t\tvar ss = (s || (s = t = text||'')).slice(0, 32768); // 1024 * 32\n\t\t\t\t\t  h = String.hash(ss, h); s = s.slice(32768);\n\t\t\t\t\t  if(s){ puff(hash, 0); return }\n\t\t\t\t\t\tconsole.STAT && console.STAT(S, +new Date - S, 'say json+hash');\n\t\t\t\t\t  msg._.$put = t;\n\t\t\t\t\t  msg['##'] = h;\n\t\t\t\t\t  mesh.say(msg, peer);\n\t\t\t\t\t  delete msg._.$put;\n\t\t\t\t\t}, sort);\n\t\t\t\t}\n\t\t\t\tfunction sort(k, v){ var tmp;\n\t\t\t\t\tif(!(v instanceof Object)){ return v }\n\t\t\t\t\tObject.keys(v).sort().forEach(sorta, {to: tmp = {}, on: v});\n\t\t\t\t\treturn tmp;\n\t\t\t\t} function sorta(k){ this.to[k] = this.on[k] }\n\n\t\t\t\tvar say = mesh.say = function(msg, peer){ var tmp;\n\t\t\t\t\tif((tmp = this) && (tmp = tmp.to) && tmp.next){ tmp.next(msg) } // compatible with middleware adapters.\n\t\t\t\t\tif(!msg){ return false }\n\t\t\t\t\tvar id, hash, raw, ack = msg['@'];\n//if(opt.super && (!ack || !msg.put)){ return } // TODO: MANHATTAN STUB //OBVIOUSLY BUG! But squelch relay. // :( get only is 100%+ CPU usage :(\n\t\t\t\t\tvar meta = msg._||(msg._=function(){});\n\t\t\t\t\tvar DBG = msg.DBG, S = +new Date; meta.y = meta.y || S; if(!peer){ DBG && (DBG.y = S) }\n\t\t\t\t\tif(!(id = msg['#'])){ id = msg['#'] = String.random(9) }\n\t\t\t\t\t!loop && dup_track(id);//.it = it(msg); // track for 9 seconds, default. Earth<->Mars would need more! // always track, maybe move this to the 'after' logic if we split function.\n\t\t\t\t\t//if(msg.put && (msg.err || (dup.s[id]||'').err)){ return false } // TODO: in theory we should not be able to stun a message, but for now going to check if it can help network performance preventing invalid data to relay.\n\t\t\t\t\tif(!(hash = msg['##']) && u !== msg.put && !meta.via && ack){ mesh.hash(msg, peer); return } // TODO: Should broadcasts be hashed?\n\t\t\t\t\tif(!peer && ack){ peer = ((tmp = dup.s[ack]) && (tmp.via || ((tmp = tmp.it) && (tmp = tmp._) && tmp.via))) || ((tmp = mesh.last) && ack === tmp['#'] && mesh.leap) } // warning! mesh.leap could be buggy! mesh last check reduces this. // TODO: CLEAN UP THIS LINE NOW? `.it` should be reliable.\n\t\t\t\t\tif(!peer && ack){ // still no peer, then ack daisy chain 'tunnel' got lost.\n\t\t\t\t\t\tif(dup.s[ack]){ return } // in dups but no peer hints that this was ack to ourself, ignore.\n\t\t\t\t\t\tconsole.STAT && console.STAT(+new Date, ++SMIA, 'total no peer to ack to'); // TODO: Delete this now. Dropping lost ACKs is protocol fine now.\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t} // TODO: Temporary? If ack via trace has been lost, acks will go to all peers, which trashes browser bandwidth. Not relaying the ack will force sender to ask for ack again. Note, this is technically wrong for mesh behavior.\n\t\t\t\t\tif(ack && !msg.put && !hash && ((dup.s[ack]||'').it||'')['##']){ return false } // If we're saying 'not found' but a relay had data, do not bother sending our not found. // Is this correct, return false? // NOTE: ADD PANIC TEST FOR THIS!\n\t\t\t\t\tif(!peer && mesh.way){ return mesh.way(msg) }\n\t\t\t\t\tDBG && (DBG.yh = +new Date);\n\t\t\t\t\tif(!(raw = meta.raw)){ mesh.raw(msg, peer); return }\n\t\t\t\t\tDBG && (DBG.yr = +new Date);\n\t\t\t\t\tif(!peer || !peer.id){\n\t\t\t\t\t\tif(!Object.plain(peer || opt.peers)){ return false }\n\t\t\t\t\t\tvar S = +new Date;\n\t\t\t\t\t\tvar P = opt.puff, ps = opt.peers, pl = Object.keys(peer || opt.peers || {}); // TODO: .keys( is slow\n\t\t\t\t\t\tconsole.STAT && console.STAT(S, +new Date - S, 'peer keys');\n\t\t\t\t\t\t;(function go(){\n\t\t\t\t\t\t\tvar S = +new Date;\n\t\t\t\t\t\t\t//Type.obj.map(peer || opt.peers, each); // in case peer is a peer list.\n\t\t\t\t\t\t\tloop = 1; var wr = meta.raw; meta.raw = raw; // quick perf hack\n\t\t\t\t\t\t\tvar i = 0, p; while(i < 9 && (p = (pl||'')[i++])){\n\t\t\t\t\t\t\t\tif(!(p = ps[p] || (peer||'')[p])){ continue }\n\t\t\t\t\t\t\t\tmesh.say(msg, p);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tmeta.raw = wr; loop = 0;\n\t\t\t\t\t\t\tpl = pl.slice(i); // slicing after is faster than shifting during.\n\t\t\t\t\t\t\tconsole.STAT && console.STAT(S, +new Date - S, 'say loop');\n\t\t\t\t\t\t\tif(!pl.length){ return }\n\t\t\t\t\t\t\tpuff(go, 0);\n\t\t\t\t\t\t\tack && dup_track(ack); // keep for later\n\t\t\t\t\t\t}());\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\t// TODO: PERF: consider splitting function here, so say loops do less work.\n\t\t\t\t\tif(!peer.wire && mesh.wire){ mesh.wire(peer) }\n\t\t\t\t\tif(id === peer.last){ return } peer.last = id;  // was it just sent?\n\t\t\t\t\tif(peer === meta.via){ return false } // don't send back to self.\n\t\t\t\t\tif((tmp = meta.yo) && (tmp[peer.url] || tmp[peer.pid] || tmp[peer.id]) /*&& !o*/){ return false }\n\t\t\t\t\tconsole.STAT && console.STAT(S, ((DBG||meta).yp = +new Date) - (meta.y || S), 'say prep');\n\t\t\t\t\t!loop && ack && dup_track(ack); // streaming long responses needs to keep alive the ack.\n\t\t\t\t\tif(peer.batch){\n\t\t\t\t\t\tpeer.tail = (tmp = peer.tail || 0) + raw.length;\n\t\t\t\t\t\tif(peer.tail <= opt.pack){\n\t\t\t\t\t\t\tpeer.batch += (tmp?',':'')+raw;\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tflush(peer);\n\t\t\t\t\t}\n\t\t\t\t\tpeer.batch = '['; // Prevents double JSON!\n\t\t\t\t\tvar ST = +new Date;\n\t\t\t\t\tsetTimeout(function(){\n\t\t\t\t\t\tconsole.STAT && console.STAT(ST, +new Date - ST, '0ms TO');\n\t\t\t\t\t\tflush(peer);\n\t\t\t\t\t}, opt.gap); // TODO: queuing/batching might be bad for low-latency video game performance! Allow opt out?\n\t\t\t\t\tsend(raw, peer);\n\t\t\t\t\tconsole.STAT && (ack === peer.SI) && console.STAT(S, +new Date - peer.SH, 'say ack');\n\t\t\t\t}\n\t\t\t\tmesh.say.c = mesh.say.d = 0;\n\t\t\t\t// TODO: this caused a out-of-memory crash!\n\t\t\t\tmesh.raw = function(msg, peer){ // TODO: Clean this up / delete it / move logic out!\n\t\t\t\t\tif(!msg){ return '' }\n\t\t\t\t\tvar meta = (msg._) || {}, put, tmp;\n\t\t\t\t\tif(tmp = meta.raw){ return tmp }\n\t\t\t\t\tif('string' == typeof msg){ return msg }\n\t\t\t\t\tvar hash = msg['##'], ack = msg['@'];\n\t\t\t\t\tif(hash && ack){\n\t\t\t\t\t\tif(!meta.via && dup_check(ack+hash)){ return false } // for our own out messages, memory & storage may ack the same thing, so dedup that. Tho if via another peer, we already tracked it upon hearing, so this will always trigger false positives, so don't do that!\n\t\t\t\t\t\tif(tmp = (dup.s[ack]||'').it){\n\t\t\t\t\t\t\tif(hash === tmp['##']){ return false } // if ask has a matching hash, acking is optional.\n\t\t\t\t\t\t\tif(!tmp['##']){ tmp['##'] = hash } // if none, add our hash to ask so anyone we relay to can dedup. // NOTE: May only check against 1st ack chunk, 2nd+ won't know and still stream back to relaying peers which may then dedup. Any way to fix this wasted bandwidth? I guess force rate limiting breaking change, that asking peer has to ask for next lexical chunk.\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(!msg.dam && !msg['@']){\n\t\t\t\t\t\tvar i = 0, to = []; tmp = opt.peers;\n\t\t\t\t\t\tfor(var k in tmp){ var p = tmp[k]; // TODO: Make it up peers instead!\n\t\t\t\t\t\t\tto.push(p.url || p.pid || p.id);\n\t\t\t\t\t\t\tif(++i > 6){ break }\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(i > 1){ msg['><'] = to.join() } // TODO: BUG! This gets set regardless of peers sent to! Detect?\n\t\t\t\t\t}\n\t\t\t\t\tif(msg.put && (tmp = msg.ok)){ msg.ok = {'@':(tmp['@']||1)-1, '/': (tmp['/']==msg._.near)? mesh.near : tmp['/']}; }\n\t\t\t\t\tif(put = meta.$put){\n\t\t\t\t\t\ttmp = {}; Object.keys(msg).forEach(function(k){ tmp[k] = msg[k] });\n\t\t\t\t\t\ttmp.put = ':])([:';\n\t\t\t\t\t\tjson(tmp, function(err, raw){\n\t\t\t\t\t\t\tif(err){ return } // TODO: Handle!!\n\t\t\t\t\t\t\tvar S = +new Date;\n\t\t\t\t\t\t\ttmp = raw.indexOf('\"put\":\":])([:\"');\n\t\t\t\t\t\t\tres(u, raw = raw.slice(0, tmp+6) + put + raw.slice(tmp + 14));\n\t\t\t\t\t\t\tconsole.STAT && console.STAT(S, +new Date - S, 'say slice');\n\t\t\t\t\t\t});\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tjson(msg, res);\n\t\t\t\t\tfunction res(err, raw){\n\t\t\t\t\t\tif(err){ return } // TODO: Handle!!\n\t\t\t\t\t\tmeta.raw = raw; //if(meta && (raw||'').length < (999 * 99)){ meta.raw = raw } // HNPERF: If string too big, don't keep in memory.\n\t\t\t\t\t\tmesh.say(msg, peer);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}());\n\n\t\t\tfunction flush(peer){\n\t\t\t\tvar tmp = peer.batch, t = 'string' == typeof tmp, l;\n\t\t\t\tif(t){ tmp += ']' }// TODO: Prevent double JSON!\n\t\t\t\tpeer.batch = peer.tail = null;\n\t\t\t\tif(!tmp){ return }\n\t\t\t\tif(t? 3 > tmp.length : !tmp.length){ return } // TODO: ^\n\t\t\t\tif(!t){try{tmp = (1 === tmp.length? tmp[0] : JSON.stringify(tmp));\n\t\t\t\t}catch(e){return opt.log('DAM JSON stringify error', e)}}\n\t\t\t\tif(!tmp){ return }\n\t\t\t\tsend(tmp, peer);\n\t\t\t}\n\t\t\t// for now - find better place later.\n\t\t\tfunction send(raw, peer){ try{\n\t\t\t\tvar wire = peer.wire;\n\t\t\t\tif(peer.say){\n\t\t\t\t\tpeer.say(raw);\n\t\t\t\t} else\n\t\t\t\tif(wire.send){\n\t\t\t\t\twire.send(raw);\n\t\t\t\t}\n\t\t\t\tmesh.say.d += raw.length||0; ++mesh.say.c; // STATS!\n\t\t\t}catch(e){\n\t\t\t\t(peer.queue = peer.queue || []).push(raw);\n\t\t\t}}\n\n\t\t\tmesh.near = 0;\n\t\t\tmesh.hi = function(peer){\n\t\t\t\tvar wire = peer.wire, tmp;\n\t\t\t\tif(!wire){ mesh.wire((peer.length && {url: peer, id: peer}) || peer); return }\n\t\t\t\tif(peer.id){\n\t\t\t\t\topt.peers[peer.url || peer.id] = peer;\n\t\t\t\t} else {\n\t\t\t\t\ttmp = peer.id = peer.id || peer.url || String.random(9);\n\t\t\t\t\tmesh.say({dam: '?', pid: root.opt.pid}, opt.peers[tmp] = peer);\n\t\t\t\t\tdelete dup.s[peer.last]; // IMPORTANT: see https://gun.eco/docs/DAM#self\n\t\t\t\t}\n\t\t\t\tif(!peer.met){\n\t\t\t\t\tmesh.near++;\n\t\t\t\t\tpeer.met = +(new Date);\n\t\t\t\t\troot.on('hi', peer)\n\t\t\t\t}\n\t\t\t\t// @rogowski I need this here by default for now to fix go1dfish's bug\n\t\t\t\ttmp = peer.queue; peer.queue = [];\n\t\t\t\tsetTimeout.each(tmp||[],function(msg){\n\t\t\t\t\tsend(msg, peer);\n\t\t\t\t},0,9);\n\t\t\t\t//Type.obj.native && Type.obj.native(); // dirty place to check if other JS polluted.\n\t\t\t}\n\t\t\tmesh.bye = function(peer){\n\t\t\t\tpeer.met && --mesh.near;\n\t\t\t\tdelete peer.met;\n\t\t\t\troot.on('bye', peer);\n\t\t\t\tvar tmp = +(new Date); tmp = (tmp - (peer.met||tmp));\n\t\t\t\tmesh.bye.time = ((mesh.bye.time || tmp) + tmp) / 2;\n\t\t\t}\n\t\t\tmesh.hear['!'] = function(msg, peer){ opt.log('Error:', msg.err) }\n\t\t\tmesh.hear['?'] = function(msg, peer){\n\t\t\t\tif(msg.pid){\n\t\t\t\t\tif(!peer.pid){ peer.pid = msg.pid }\n\t\t\t\t\tif(msg['@']){ return }\n\t\t\t\t}\n\t\t\t\tmesh.say({dam: '?', pid: opt.pid, '@': msg['#']}, peer);\n\t\t\t\tdelete dup.s[peer.last]; // IMPORTANT: see https://gun.eco/docs/DAM#self\n\t\t\t}\n\t\t\tmesh.hear['mob'] = function(msg, peer){ // NOTE: AXE will overload this with better logic.\n\t\t\t\tif(!msg.peers){ return }\n\t\t\t\tvar peers = Object.keys(msg.peers), one = peers[(Math.random()*peers.length) >> 0];\n\t\t\t\tif(!one){ return }\n\t\t\t\tmesh.bye(peer);\n\t\t\t\tmesh.hi(one);\n\t\t\t}\n\n\t\t\troot.on('create', function(root){\n\t\t\t\troot.opt.pid = root.opt.pid || String.random(9);\n\t\t\t\tthis.to.next(root);\n\t\t\t\troot.on('out', mesh.say);\n\t\t\t});\n\n\t\t\troot.on('bye', function(peer, tmp){\n\t\t\t\tpeer = opt.peers[peer.id || peer] || peer;\n\t\t\t\tthis.to.next(peer);\n\t\t\t\tpeer.bye? peer.bye() : (tmp = peer.wire) && tmp.close && tmp.close();\n\t\t\t\tdelete opt.peers[peer.id];\n\t\t\t\tpeer.wire = null;\n\t\t\t});\n\n\t\t\tvar gets = {};\n\t\t\troot.on('bye', function(peer, tmp){ this.to.next(peer);\n\t\t\t\tif(tmp = console.STAT){ tmp.peers = mesh.near; }\n\t\t\t\tif(!(tmp = peer.url)){ return } gets[tmp] = true;\n\t\t\t\tsetTimeout(function(){ delete gets[tmp] },opt.lack || 9000);\n\t\t\t});\n\t\t\troot.on('hi', function(peer, tmp){ this.to.next(peer);\n\t\t\t\tif(tmp = console.STAT){ tmp.peers = mesh.near }\n\t\t\t\tif(opt.super){ return } // temporary (?) until we have better fix/solution?\n\t\t\t\tvar souls = Object.keys(root.next||''); // TODO: .keys( is slow\n\t\t\t\tif(souls.length > 9999 && !console.SUBS){ console.log(console.SUBS = \"Warning: You have more than 10K live GETs, which might use more bandwidth than your screen can show - consider `.off()`.\") }\n\t\t\t\tsetTimeout.each(souls, function(soul){ var node = root.next[soul];\n\t\t\t\t\tif(opt.super || (node.ask||'')['']){ mesh.say({get: {'#': soul}}, peer); return }\n\t\t\t\t\tsetTimeout.each(Object.keys(node.ask||''), function(key){ if(!key){ return }\n\t\t\t\t\t\t// is the lack of ## a !onion hint?\n\t\t\t\t\t\tmesh.say({'##': String.hash((root.graph[soul]||'')[key]), get: {'#': soul, '.': key}}, peer);\n\t\t\t\t\t\t// TODO: Switch this so Book could route?\n\t\t\t\t\t})\n\t\t\t\t});\n\t\t\t});\n\n\t\t\treturn mesh;\n\t\t}\n\t  var empty = {}, ok = true, u;\n\n\t  try{ module.exports = Mesh }catch(e){}\n\n\t})(USE, './mesh');\n\n\t;USE(function(module){\n\t\tvar Gun = USE('./index');\n\t\tGun.Mesh = USE('./mesh');\n\n\t\t// TODO: resync upon reconnect online/offline\n\t\t//window.ononline = window.onoffline = function(){ console.log('online?', navigator.onLine) }\n\n\t\tGun.on('opt', function(root){\n\t\t\tthis.to.next(root);\n\t\t\tif(root.once){ return }\n\t\t\tvar opt = root.opt;\n\t\t\tif(false === opt.WebSocket){ return }\n\n\t\t\tvar env = Gun.window || {};\n\t\t\tvar websocket = opt.WebSocket || env.WebSocket || env.webkitWebSocket || env.mozWebSocket;\n\t\t\tif(!websocket){ return }\n\t\t\topt.WebSocket = websocket;\n\n\t\t\tvar mesh = opt.mesh = opt.mesh || Gun.Mesh(root);\n\n\t\t\tvar wire = mesh.wire || opt.wire;\n\t\t\tmesh.wire = opt.wire = open;\n\t\t\tfunction open(peer){ try{\n\t\t\t\tif(!peer || !peer.url){ return wire && wire(peer) }\n\t\t\t\tvar url = peer.url.replace(/^http/, 'ws');\n\t\t\t\tvar wire = peer.wire = new opt.WebSocket(url);\n\t\t\t\twire.onclose = function(){\n\t\t\t\t\treconnect(peer);\n\t\t\t\t\topt.mesh.bye(peer);\n\t\t\t\t};\n\t\t\t\twire.onerror = function(err){\n\t\t\t\t\treconnect(peer);\n\t\t\t\t};\n\t\t\t\twire.onopen = function(){\n\t\t\t\t\topt.mesh.hi(peer);\n\t\t\t\t}\n\t\t\t\twire.onmessage = function(msg){\n\t\t\t\t\tif(!msg){ return }\n\t\t\t\t\topt.mesh.hear(msg.data || msg, peer);\n\t\t\t\t};\n\t\t\t\treturn wire;\n\t\t\t}catch(e){ opt.mesh.bye(peer) }}\n\n\t\t\tsetTimeout(function(){ !opt.super && root.on('out', {dam:'hi'}) },1); // it can take a while to open a socket, so maybe no longer lazy load for perf reasons?\n\n\t\t\tvar wait = 2 * 999;\n\t\t\tfunction reconnect(peer){\n\t\t\t\tclearTimeout(peer.defer);\n\t\t\t\tif(!opt.peers[peer.url]){ return }\n\t\t\t\tif(doc && peer.retry <= 0){ return }\n\t\t\t\tpeer.retry = (peer.retry || opt.retry+1 || 60) - ((-peer.tried + (peer.tried = +new Date) < wait*4)?1:0);\n\t\t\t\tpeer.defer = setTimeout(function to(){\n\t\t\t\t\tif(doc && doc.hidden){ return setTimeout(to,wait) }\n\t\t\t\t\topen(peer);\n\t\t\t\t}, wait);\n\t\t\t}\n\t\t\tvar doc = (''+u !== typeof document) && document;\n\t\t});\n\t\tvar noop = function(){}, u;\n\t})(USE, './websocket');\n\n\t;USE(function(module){\n\t\tif(typeof Gun === 'undefined'){ return }\n\n\t\tvar noop = function(){}, store, u;\n\t\ttry{store = (Gun.window||noop).localStorage}catch(e){}\n\t\tif(!store){\n\t\t\tGun.log(\"Warning: No localStorage exists to persist data to!\");\n\t\t\tstore = {setItem: function(k,v){this[k]=v}, removeItem: function(k){delete this[k]}, getItem: function(k){return this[k]}};\n\t\t}\n\n\t\tvar parse = JSON.parseAsync || function(t,cb,r){ var u; try{ cb(u, JSON.parse(t,r)) }catch(e){ cb(e) } }\n\t\tvar json = JSON.stringifyAsync || function(v,cb,r,s){ var u; try{ cb(u, JSON.stringify(v,r,s)) }catch(e){ cb(e) } }\n\n\t\tGun.on('create', function lg(root){\n\t\t\tthis.to.next(root);\n\t\t\tvar opt = root.opt, graph = root.graph, acks = [], disk, to, size, stop;\n\t\t\tif(false === opt.localStorage){ return }\n\t\t\topt.prefix = opt.file || 'gun/';\n\t\t\ttry{ disk = lg[opt.prefix] = lg[opt.prefix] || JSON.parse(size = store.getItem(opt.prefix)) || {}; // TODO: Perf! This will block, should we care, since limited to 5MB anyways?\n\t\t\t}catch(e){ disk = lg[opt.prefix] = {}; }\n\t\t\tsize = (size||'').length;\n\n\t\t\troot.on('get', function(msg){\n\t\t\t\tthis.to.next(msg);\n\t\t\t\tvar lex = msg.get, soul, data, tmp, u;\n\t\t\t\tif(!lex || !(soul = lex['#'])){ return }\n\t\t\t\tdata = disk[soul] || u;\n\t\t\t\tif(data && (tmp = lex['.']) && !Object.plain(tmp)){ // pluck!\n\t\t\t\t\tdata = Gun.state.ify({}, tmp, Gun.state.is(data, tmp), data[tmp], soul);\n\t\t\t\t}\n\t\t\t\t//if(data){ (tmp = {})[soul] = data } // back into a graph.\n\t\t\t\t//setTimeout(function(){\n\t\t\t\tGun.on.get.ack(msg, data); //root.on('in', {'@': msg['#'], put: tmp, lS:1});// || root.$});\n\t\t\t\t//}, Math.random() * 10); // FOR TESTING PURPOSES!\n\t\t\t});\n\n\t\t\troot.on('put', function(msg){\n\t\t\t\tthis.to.next(msg); // remember to call next middleware adapter\n\t\t\t\tvar put = msg.put, soul = put['#'], key = put['.'], id = msg['#'], ok = msg.ok||'', tmp; // pull data off wire envelope\n\t\t\t\tdisk[soul] = Gun.state.ify(disk[soul], key, put['>'], put[':'], soul); // merge into disk object\n\t\t\t\tif(stop && size > (4999880)){ root.on('in', {'@': id, err: \"localStorage max!\"}); return; }\n\t\t\t\t//if(!msg['@']){ acks.push(id) } // then ack any non-ack write. // TODO: use batch id.\n\t\t\t\tif(!msg['@'] && (!msg._.via || Math.random() < (ok['@'] / ok['/']))){ acks.push(id) } // then ack any non-ack write. // TODO: use batch id.\n\t\t\t\tif(to){ return }\n\t\t\t\tto = setTimeout(flush, 9+(size / 333)); // 0.1MB = 0.3s, 5MB = 15s \n\t\t\t});\n\t\t\tfunction flush(){\n\t\t\t\tif(!acks.length && ((setTimeout.turn||'').s||'').length){ setTimeout(flush,99); return; } // defer if \"busy\" && no saves.\n\t\t\t\tvar err, ack = acks; clearTimeout(to); to = false; acks = [];\n\t\t\t\tjson(disk, function(err, tmp){\n\t\t\t\t\ttry{!err && store.setItem(opt.prefix, tmp);\n\t\t\t\t\t}catch(e){ err = stop = e || \"localStorage failure\" }\n\t\t\t\t\tif(err){\n\t\t\t\t\t\tGun.log(err + \" Consider using GUN's IndexedDB plugin for RAD for more storage space, https://gun.eco/docs/RAD#install\");\n\t\t\t\t\t\troot.on('localStorage:error', {err: err, get: opt.prefix, put: disk});\n\t\t\t\t\t}\n\t\t\t\t\tsize = tmp.length;\n\n\t\t\t\t\t//if(!err && !Object.empty(opt.peers)){ return } // only ack if there are no peers. // Switch this to probabilistic mode\n\t\t\t\t\tsetTimeout.each(ack, function(id){\n\t\t\t\t\t\troot.on('in', {'@': id, err: err, ok: 0}); // localStorage isn't reliable, so make its `ok` code be a low number.\n\t\t\t\t\t},0,99);\n\t\t\t\t})\n\t\t\t}\n\t\t\n\t\t});\n\t})(USE, './localStorage');\n\n}());\n\n/* BELOW IS TEMPORARY FOR OLD INTERNAL COMPATIBILITY, THEY ARE IMMEDIATELY DEPRECATED AND WILL BE REMOVED IN NEXT VERSION */\n;(function(){\n\tvar u;\n\tif(''+u == typeof Gun){ return }\n\tvar DEP = function(n){ console.warn(\"Warning! Deprecated internal utility will break in next version:\", n) }\n\t// Generic javascript utilities.\n\tvar Type = Gun;\n\t//Type.fns = Type.fn = {is: function(fn){ return (!!fn && fn instanceof Function) }}\n\tType.fn = Type.fn || {is: function(fn){ DEP('fn'); return (!!fn && 'function' == typeof fn) }}\n\tType.bi = Type.bi || {is: function(b){ DEP('bi');return (b instanceof Boolean || typeof b == 'boolean') }}\n\tType.num = Type.num || {is: function(n){ DEP('num'); return !list_is(n) && ((n - parseFloat(n) + 1) >= 0 || Infinity === n || -Infinity === n) }}\n\tType.text = Type.text || {is: function(t){ DEP('text'); return (typeof t == 'string') }}\n\tType.text.ify = Type.text.ify || function(t){ DEP('text.ify');\n\t\tif(Type.text.is(t)){ return t }\n\t\tif(typeof JSON !== \"undefined\"){ return JSON.stringify(t) }\n\t\treturn (t && t.toString)? t.toString() : t;\n\t}\n\tType.text.random = Type.text.random || function(l, c){ DEP('text.random');\n\t\tvar s = '';\n\t\tl = l || 24; // you are not going to make a 0 length random number, so no need to check type\n\t\tc = c || '0123456789ABCDEFGHIJKLMNOPQRSTUVWXZabcdefghijklmnopqrstuvwxyz';\n\t\twhile(l > 0){ s += c.charAt(Math.floor(Math.random() * c.length)); l-- }\n\t\treturn s;\n\t}\n\tType.text.match = Type.text.match || function(t, o){ var tmp, u; DEP('text.match');\n\t\tif('string' !== typeof t){ return false }\n\t\tif('string' == typeof o){ o = {'=': o} }\n\t\to = o || {};\n\t\ttmp = (o['='] || o['*'] || o['>'] || o['<']);\n\t\tif(t === tmp){ return true }\n\t\tif(u !== o['=']){ return false }\n\t\ttmp = (o['*'] || o['>'] || o['<']);\n\t\tif(t.slice(0, (tmp||'').length) === tmp){ return true }\n\t\tif(u !== o['*']){ return false }\n\t\tif(u !== o['>'] && u !== o['<']){\n\t\t\treturn (t >= o['>'] && t <= o['<'])? true : false;\n\t\t}\n\t\tif(u !== o['>'] && t >= o['>']){ return true }\n\t\tif(u !== o['<'] && t <= o['<']){ return true }\n\t\treturn false;\n\t}\n\tType.text.hash = Type.text.hash || function(s, c){ // via SO\n\t\tDEP('text.hash');\n\t\tif(typeof s !== 'string'){ return }\n\t  c = c || 0;\n\t  if(!s.length){ return c }\n\t  for(var i=0,l=s.length,n; i<l; ++i){\n\t    n = s.charCodeAt(i);\n\t    c = ((c<<5)-c)+n;\n\t    c |= 0;\n\t  }\n\t  return c;\n\t}\n\tType.list = Type.list || {is: function(l){ DEP('list'); return (l instanceof Array) }}\n\tType.list.slit = Type.list.slit || Array.prototype.slice;\n\tType.list.sort = Type.list.sort || function(k){ // creates a new sort function based off some key\n\t\tDEP('list.sort');\n\t\treturn function(A,B){\n\t\t\tif(!A || !B){ return 0 } A = A[k]; B = B[k];\n\t\t\tif(A < B){ return -1 }else if(A > B){ return 1 }\n\t\t\telse { return 0 }\n\t\t}\n\t}\n\tType.list.map = Type.list.map || function(l, c, _){ DEP('list.map'); return obj_map(l, c, _) }\n\tType.list.index = 1; // change this to 0 if you want non-logical, non-mathematical, non-matrix, non-convenient array notation\n\tType.obj = Type.boj || {is: function(o){ DEP('obj'); return o? (o instanceof Object && o.constructor === Object) || Object.prototype.toString.call(o).match(/^\\[object (\\w+)\\]$/)[1] === 'Object' : false }}\n\tType.obj.put = Type.obj.put || function(o, k, v){ DEP('obj.put'); return (o||{})[k] = v, o }\n\tType.obj.has = Type.obj.has || function(o, k){ DEP('obj.has'); return o && Object.prototype.hasOwnProperty.call(o, k) }\n\tType.obj.del = Type.obj.del || function(o, k){ DEP('obj.del'); \n\t\tif(!o){ return }\n\t\to[k] = null;\n\t\tdelete o[k];\n\t\treturn o;\n\t}\n\tType.obj.as = Type.obj.as || function(o, k, v, u){ DEP('obj.as'); return o[k] = o[k] || (u === v? {} : v) }\n\tType.obj.ify = Type.obj.ify || function(o){ DEP('obj.ify'); \n\t\tif(obj_is(o)){ return o }\n\t\ttry{o = JSON.parse(o);\n\t\t}catch(e){o={}};\n\t\treturn o;\n\t}\n\t;(function(){ var u;\n\t\tfunction map(v,k){\n\t\t\tif(obj_has(this,k) && u !== this[k]){ return }\n\t\t\tthis[k] = v;\n\t\t}\n\t\tType.obj.to = Type.obj.to || function(from, to){ DEP('obj.to'); \n\t\t\tto = to || {};\n\t\t\tobj_map(from, map, to);\n\t\t\treturn to;\n\t\t}\n\t}());\n\tType.obj.copy = Type.obj.copy || function(o){ DEP('obj.copy'); // because http://web.archive.org/web/20140328224025/http://jsperf.com/cloning-an-object/2\n\t\treturn !o? o : JSON.parse(JSON.stringify(o)); // is shockingly faster than anything else, and our data has to be a subset of JSON anyways!\n\t}\n\t;(function(){\n\t\tfunction empty(v,i){ var n = this.n, u;\n\t\t\tif(n && (i === n || (obj_is(n) && obj_has(n, i)))){ return }\n\t\t\tif(u !== i){ return true }\n\t\t}\n\t\tType.obj.empty = Type.obj.empty || function(o, n){ DEP('obj.empty'); \n\t\t\tif(!o){ return true }\n\t\t\treturn obj_map(o,empty,{n:n})? false : true;\n\t\t}\n\t}());\n\t;(function(){\n\t\tfunction t(k,v){\n\t\t\tif(2 === arguments.length){\n\t\t\t\tt.r = t.r || {};\n\t\t\t\tt.r[k] = v;\n\t\t\t\treturn;\n\t\t\t} t.r = t.r || [];\n\t\t\tt.r.push(k);\n\t\t};\n\t\tvar keys = Object.keys, map, u;\n\t\tObject.keys = Object.keys || function(o){ return map(o, function(v,k,t){t(k)}) }\n\t\tType.obj.map = map = Type.obj.map || function(l, c, _){ DEP('obj.map'); \n\t\t\tvar u, i = 0, x, r, ll, lle, f = 'function' == typeof c;\n\t\t\tt.r = u;\n\t\t\tif(keys && obj_is(l)){\n\t\t\t\tll = keys(l); lle = true;\n\t\t\t}\n\t\t\t_ = _ || {};\n\t\t\tif(list_is(l) || ll){\n\t\t\t\tx = (ll || l).length;\n\t\t\t\tfor(;i < x; i++){\n\t\t\t\t\tvar ii = (i + Type.list.index);\n\t\t\t\t\tif(f){\n\t\t\t\t\t\tr = lle? c.call(_, l[ll[i]], ll[i], t) : c.call(_, l[i], ii, t);\n\t\t\t\t\t\tif(r !== u){ return r }\n\t\t\t\t\t} else {\n\t\t\t\t\t\t//if(Type.test.is(c,l[i])){ return ii } // should implement deep equality testing!\n\t\t\t\t\t\tif(c === l[lle? ll[i] : i]){ return ll? ll[i] : ii } // use this for now\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor(i in l){\n\t\t\t\t\tif(f){\n\t\t\t\t\t\tif(obj_has(l,i)){\n\t\t\t\t\t\t\tr = _? c.call(_, l[i], i, t) : c(l[i], i, t);\n\t\t\t\t\t\t\tif(r !== u){ return r }\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t//if(a.test.is(c,l[i])){ return i } // should implement deep equality testing!\n\t\t\t\t\t\tif(c === l[i]){ return i } // use this for now\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn f? t.r : Type.list.index? 0 : -1;\n\t\t}\n\t}());\n\tType.time = Type.time || {};\n\tType.time.is = Type.time.is || function(t){ DEP('time'); return t? t instanceof Date : (+new Date().getTime()) }\n\n\tvar fn_is = Type.fn.is;\n\tvar list_is = Type.list.is;\n\tvar obj = Type.obj, obj_is = obj.is, obj_has = obj.has, obj_map = obj.map;\n\n\tvar Val = {};\n\tVal.is = function(v){ DEP('val.is'); // Valid values are a subset of JSON: null, binary, number (!Infinity), text, or a soul relation. Arrays need special algorithms to handle concurrency, so they are not supported directly. Use an extension that supports them if needed but research their problems first.\n\t\tif(v === u){ return false }\n\t\tif(v === null){ return true } // \"deletes\", nulling out keys.\n\t\tif(v === Infinity){ return false } // we want this to be, but JSON does not support it, sad face.\n\t\tif(text_is(v) // by \"text\" we mean strings.\n\t\t|| bi_is(v) // by \"binary\" we mean boolean.\n\t\t|| num_is(v)){ // by \"number\" we mean integers or decimals.\n\t\t\treturn true; // simple values are valid.\n\t\t}\n\t\treturn Val.link.is(v) || false; // is the value a soul relation? Then it is valid and return it. If not, everything else remaining is an invalid data type. Custom extensions can be built on top of these primitives to support other types.\n\t}\n\tVal.link = Val.rel = {_: '#'};\n\t;(function(){\n\t\tVal.link.is = function(v){ DEP('val.link.is'); // this defines whether an object is a soul relation or not, they look like this: {'#': 'UUID'}\n\t\t\tif(v && v[rel_] && !v._ && obj_is(v)){ // must be an object.\n\t\t\t\tvar o = {};\n\t\t\t\tobj_map(v, map, o);\n\t\t\t\tif(o.id){ // a valid id was found.\n\t\t\t\t\treturn o.id; // yay! Return it.\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false; // the value was not a valid soul relation.\n\t\t}\n\t\tfunction map(s, k){ var o = this; // map over the object...\n\t\t\tif(o.id){ return o.id = false } // if ID is already defined AND we're still looping through the object, it is considered invalid.\n\t\t\tif(k == rel_ && text_is(s)){ // the key should be '#' and have a text value.\n\t\t\t\to.id = s; // we found the soul!\n\t\t\t} else {\n\t\t\t\treturn o.id = false; // if there exists anything else on the object that isn't the soul, then it is considered invalid.\n\t\t\t}\n\t\t}\n\t}());\n\tVal.link.ify = function(t){ DEP('val.link.ify'); return obj_put({}, rel_, t) } // convert a soul into a relation and return it.\n\tType.obj.has._ = '.';\n\tvar rel_ = Val.link._, u;\n\tvar bi_is = Type.bi.is;\n\tvar num_is = Type.num.is;\n\tvar text_is = Type.text.is;\n\tvar obj = Type.obj, obj_is = obj.is, obj_put = obj.put, obj_map = obj.map;\n\n\tType.val = Type.val || Val;\n\n\tvar Node = {_: '_'};\n\tNode.soul = function(n, o){ DEP('node.soul'); return (n && n._ && n._[o || soul_]) } // convenience function to check to see if there is a soul on a node and return it.\n\tNode.soul.ify = function(n, o){ DEP('node.soul.ify'); // put a soul on an object.\n\t\to = (typeof o === 'string')? {soul: o} : o || {};\n\t\tn = n || {}; // make sure it exists.\n\t\tn._ = n._ || {}; // make sure meta exists.\n\t\tn._[soul_] = o.soul || n._[soul_] || text_random(); // put the soul on it.\n\t\treturn n;\n\t}\n\tNode.soul._ = Val.link._;\n\t;(function(){\n\t\tNode.is = function(n, cb, as){ DEP('node.is'); var s; // checks to see if an object is a valid node.\n\t\t\tif(!obj_is(n)){ return false } // must be an object.\n\t\t\tif(s = Node.soul(n)){ // must have a soul on it.\n\t\t\t\treturn !obj_map(n, map, {as:as,cb:cb,s:s,n:n});\n\t\t\t}\n\t\t\treturn false; // nope! This was not a valid node.\n\t\t}\n\t\tfunction map(v, k){ // we invert this because the way we check for this is via a negation.\n\t\t\tif(k === Node._){ return } // skip over the metadata.\n\t\t\tif(!Val.is(v)){ return true } // it is true that this is an invalid node.\n\t\t\tif(this.cb){ this.cb.call(this.as, v, k, this.n, this.s) } // optionally callback each key/value.\n\t\t}\n\t}());\n\t;(function(){\n\t\tNode.ify = function(obj, o, as){ DEP('node.ify'); // returns a node from a shallow object.\n\t\t\tif(!o){ o = {} }\n\t\t\telse if(typeof o === 'string'){ o = {soul: o} }\n\t\t\telse if('function' == typeof o){ o = {map: o} }\n\t\t\tif(o.map){ o.node = o.map.call(as, obj, u, o.node || {}) }\n\t\t\tif(o.node = Node.soul.ify(o.node || {}, o)){\n\t\t\t\tobj_map(obj, map, {o:o,as:as});\n\t\t\t}\n\t\t\treturn o.node; // This will only be a valid node if the object wasn't already deep!\n\t\t}\n\t\tfunction map(v, k){ var o = this.o, tmp, u; // iterate over each key/value.\n\t\t\tif(o.map){\n\t\t\t\ttmp = o.map.call(this.as, v, ''+k, o.node);\n\t\t\t\tif(u === tmp){\n\t\t\t\t\tobj_del(o.node, k);\n\t\t\t\t} else\n\t\t\t\tif(o.node){ o.node[k] = tmp }\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif(Val.is(v)){\n\t\t\t\to.node[k] = v;\n\t\t\t}\n\t\t}\n\t}());\n\tvar obj = Type.obj, obj_is = obj.is, obj_del = obj.del, obj_map = obj.map;\n\tvar text = Type.text, text_random = text.random;\n\tvar soul_ = Node.soul._;\n\tvar u;\n\tType.node = Type.node || Node;\n\n\tvar State = Type.state;\n\tState.lex = function(){ DEP('state.lex'); return State().toString(36).replace('.','') }\n\tState.to = function(from, k, to){ DEP('state.to'); \n\t\tvar val = (from||{})[k];\n\t\tif(obj_is(val)){\n\t\t\tval = obj_copy(val);\n\t\t}\n\t\treturn State.ify(to, k, State.is(from, k), val, Node.soul(from));\n\t}\n\t;(function(){\n\t\tState.map = function(cb, s, as){ DEP('state.map'); var u; // for use with Node.ify\n\t\t\tvar o = obj_is(o = cb || s)? o : null;\n\t\t\tcb = fn_is(cb = cb || s)? cb : null;\n\t\t\tif(o && !cb){\n\t\t\t\ts = num_is(s)? s : State();\n\t\t\t\to[N_] = o[N_] || {};\n\t\t\t\tobj_map(o, map, {o:o,s:s});\n\t\t\t\treturn o;\n\t\t\t}\n\t\t\tas = as || obj_is(s)? s : u;\n\t\t\ts = num_is(s)? s : State();\n\t\t\treturn function(v, k, o, opt){\n\t\t\t\tif(!cb){\n\t\t\t\t\tmap.call({o: o, s: s}, v,k);\n\t\t\t\t\treturn v;\n\t\t\t\t}\n\t\t\t\tcb.call(as || this || {}, v, k, o, opt);\n\t\t\t\tif(obj_has(o,k) && u === o[k]){ return }\n\t\t\t\tmap.call({o: o, s: s}, v,k);\n\t\t\t}\n\t\t}\n\t\tfunction map(v,k){\n\t\t\tif(N_ === k){ return }\n\t\t\tState.ify(this.o, k, this.s) ;\n\t\t}\n\t}());\n\tvar obj = Type.obj, obj_as = obj.as, obj_has = obj.has, obj_is = obj.is, obj_map = obj.map, obj_copy = obj.copy;\n\tvar num = Type.num, num_is = num.is;\n\tvar fn = Type.fn, fn_is = fn.is;\n\tvar N_ = Node._, u;\n\n\tvar Graph = {};\n\t;(function(){\n\t\tGraph.is = function(g, cb, fn, as){ DEP('graph.is'); // checks to see if an object is a valid graph.\n\t\t\tif(!g || !obj_is(g) || obj_empty(g)){ return false } // must be an object.\n\t\t\treturn !obj_map(g, map, {cb:cb,fn:fn,as:as}); // makes sure it wasn't an empty object.\n\t\t}\n\t\tfunction map(n, s){ // we invert this because the way'? we check for this is via a negation.\n\t\t\tif(!n || s !== Node.soul(n) || !Node.is(n, this.fn, this.as)){ return true } // it is true that this is an invalid graph.\n\t\t\tif(!this.cb){ return }\n\t\t\tnf.n = n; nf.as = this.as; // sequential race conditions aren't races.\n\t\t\tthis.cb.call(nf.as, n, s, nf);\n\t\t}\n\t\tfunction nf(fn){ // optional callback for each node.\n\t\t\tif(fn){ Node.is(nf.n, fn, nf.as) } // where we then have an optional callback for each key/value.\n\t\t}\n\t}());\n\t;(function(){\n\t\tGraph.ify = function(obj, env, as){ DEP('graph.ify'); \n\t\t\tvar at = {path: [], obj: obj};\n\t\t\tif(!env){\n\t\t\t\tenv = {};\n\t\t\t} else\n\t\t\tif(typeof env === 'string'){\n\t\t\t\tenv = {soul: env};\n\t\t\t} else\n\t\t\tif('function' == typeof env){\n\t\t\t\tenv.map = env;\n\t\t\t}\n\t\t\tif(typeof as === 'string'){\n\t\t\t\tenv.soul = env.soul || as;\n\t\t\t\tas = u;\n\t\t\t}\n\t\t\tif(env.soul){\n\t\t\t\tat.link = Val.link.ify(env.soul);\n\t\t\t}\n\t\t\tenv.shell = (as||{}).shell;\n\t\t\tenv.graph = env.graph || {};\n\t\t\tenv.seen = env.seen || [];\n\t\t\tenv.as = env.as || as;\n\t\t\tnode(env, at);\n\t\t\tenv.root = at.node;\n\t\t\treturn env.graph;\n\t\t}\n\t\tfunction node(env, at){ var tmp;\n\t\t\tif(tmp = seen(env, at)){ return tmp }\n\t\t\tat.env = env;\n\t\t\tat.soul = soul;\n\t\t\tif(Node.ify(at.obj, map, at)){\n\t\t\t\tat.link = at.link || Val.link.ify(Node.soul(at.node));\n\t\t\t\tif(at.obj !== env.shell){\n\t\t\t\t\tenv.graph[Val.link.is(at.link)] = at.node;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn at;\n\t\t}\n\t\tfunction map(v,k,n){\n\t\t\tvar at = this, env = at.env, is, tmp;\n\t\t\tif(Node._ === k && obj_has(v,Val.link._)){\n\t\t\t\treturn n._; // TODO: Bug?\n\t\t\t}\n\t\t\tif(!(is = valid(v,k,n, at,env))){ return }\n\t\t\tif(!k){\n\t\t\t\tat.node = at.node || n || {};\n\t\t\t\tif(obj_has(v, Node._) && Node.soul(v)){ // ? for safety ?\n\t\t\t\t\tat.node._ = obj_copy(v._);\n\t\t\t\t}\n\t\t\t\tat.node = Node.soul.ify(at.node, Val.link.is(at.link));\n\t\t\t\tat.link = at.link || Val.link.ify(Node.soul(at.node));\n\t\t\t}\n\t\t\tif(tmp = env.map){\n\t\t\t\ttmp.call(env.as || {}, v,k,n, at);\n\t\t\t\tif(obj_has(n,k)){\n\t\t\t\t\tv = n[k];\n\t\t\t\t\tif(u === v){\n\t\t\t\t\t\tobj_del(n, k);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tif(!(is = valid(v,k,n, at,env))){ return }\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(!k){ return at.node }\n\t\t\tif(true === is){\n\t\t\t\treturn v;\n\t\t\t}\n\t\t\ttmp = node(env, {obj: v, path: at.path.concat(k)});\n\t\t\tif(!tmp.node){ return }\n\t\t\treturn tmp.link; //{'#': Node.soul(tmp.node)};\n\t\t}\n\t\tfunction soul(id){ var at = this;\n\t\t\tvar prev = Val.link.is(at.link), graph = at.env.graph;\n\t\t\tat.link = at.link || Val.link.ify(id);\n\t\t\tat.link[Val.link._] = id;\n\t\t\tif(at.node && at.node[Node._]){\n\t\t\t\tat.node[Node._][Val.link._] = id;\n\t\t\t}\n\t\t\tif(obj_has(graph, prev)){\n\t\t\t\tgraph[id] = graph[prev];\n\t\t\t\tobj_del(graph, prev);\n\t\t\t}\n\t\t}\n\t\tfunction valid(v,k,n, at,env){ var tmp;\n\t\t\tif(Val.is(v)){ return true }\n\t\t\tif(obj_is(v)){ return 1 }\n\t\t\tif(tmp = env.invalid){\n\t\t\t\tv = tmp.call(env.as || {}, v,k,n);\n\t\t\t\treturn valid(v,k,n, at,env);\n\t\t\t}\n\t\t\tenv.err = \"Invalid value at '\" + at.path.concat(k).join('.') + \"'!\";\n\t\t\tif(Type.list.is(v)){ env.err += \" Use `.set(item)` instead of an Array.\" }\n\t\t}\n\t\tfunction seen(env, at){\n\t\t\tvar arr = env.seen, i = arr.length, has;\n\t\t\twhile(i--){ has = arr[i];\n\t\t\t\tif(at.obj === has.obj){ return has }\n\t\t\t}\n\t\t\tarr.push(at);\n\t\t}\n\t}());\n\tGraph.node = function(node){ DEP('graph.node'); \n\t\tvar soul = Node.soul(node);\n\t\tif(!soul){ return }\n\t\treturn obj_put({}, soul, node);\n\t}\n\t;(function(){\n\t\tGraph.to = function(graph, root, opt){ DEP('graph.to'); \n\t\t\tif(!graph){ return }\n\t\t\tvar obj = {};\n\t\t\topt = opt || {seen: {}};\n\t\t\tobj_map(graph[root], map, {obj:obj, graph: graph, opt: opt});\n\t\t\treturn obj;\n\t\t}\n\t\tfunction map(v,k){ var tmp, obj;\n\t\t\tif(Node._ === k){\n\t\t\t\tif(obj_empty(v, Val.link._)){\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis.obj[k] = obj_copy(v);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif(!(tmp = Val.link.is(v))){\n\t\t\t\tthis.obj[k] = v;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif(obj = this.opt.seen[tmp]){\n\t\t\t\tthis.obj[k] = obj;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.obj[k] = this.opt.seen[tmp] = Graph.to(this.graph, tmp, this.opt);\n\t\t}\n\t}());\n\tvar fn_is = Type.fn.is;\n\tvar obj = Type.obj, obj_is = obj.is, obj_del = obj.del, obj_has = obj.has, obj_empty = obj.empty, obj_put = obj.put, obj_map = obj.map, obj_copy = obj.copy;\n\tvar u;\n\tType.graph = Type.graph || Graph;\n}());\n","import Gun from \"gun\"\nimport * as Crypto from \"./crypto.mjs\"\nimport routes from \"./routes.app.mjs\"\nimport { createRouter } from \"./router.mjs\"\nimport { h, frag, mountHTML } from \"./jsx.mjs\"\nimport HtmlPage from \"./components/HtmlPage.mjs\"\n\nglobalThis.h = h\nglobalThis.frag = frag\n\nwindow.addEventListener(\"load\", () => {\n  const match = createRouter(HtmlPage, mountHTML(document), routes)\n  const { pathname } = window.location\n  m = match(pathname)\n\n  console.log({ m, pathname })\n})\n\nconst $ = (...selectors) => handler => {\n  window.addEventListener(\"load\", () => {\n    const matches = selectors.map(selector => document.querySelector(selector))\n    matches.every(x => x) && handler(...matches)\n  })\n}\n\nconst preventDefault = e => (e.preventDefault(), false)\n\nlet passkey = []\n$(\".passkey-input\", \".passkey-preview\")((input, preview) => {\n  input.oncut = preventDefault\n  input.oncopy = preventDefault\n  input.onpaste = preventDefault\n\n  input.addEventListener(\"onkeypress\", (e) => {\n    if ((e.metaKey || e.ctrlKey) && e.key === 'z') {\n      e.preventDefault()\n      return false\n    }\n  })\n\n  input.addEventListener(\"input\", (event) => {\n    const { target: { value, selectionStart }, data } = event\n    // console.log(data, value, selectionStart, event)\n    data\n      ? passkey.splice(selectionStart - 1, value.length > passkey.length ? 0 : passkey.length - value.length + 1, data)\n      : passkey.splice(selectionStart, passkey.length - value.length)\n    event.target.value = value.replaceAll(/.{1}/gi, \"•\")\n    event.target.setSelectionRange(selectionStart, selectionStart)\n    preview.setAttribute(\"style\", `--content: \"${passkey.join(\"\")}\"`)\n  })\n})\n","module.exports = require('./gun.js')","// aes-gcm-helpers.js\n\n// Function to generate an AES-GCM key\nexport async function generateKey() {\n  return crypto.subtle.generateKey(\n    {\n      name: \"AES-GCM\",\n      length: 256\n    },\n    true, // whether the key is extractable (i.e. can be used in exportKey)\n    [\"encrypt\", \"decrypt\"] // can \"encrypt\" and \"decrypt\"\n  );\n}\n\n// Function to encrypt data using AES-GCM\nexport async function encryptData(key, data) {\n  const encodedData = new TextEncoder().encode(JSON.stringify(data));\n  const iv = crypto.getRandomValues(new Uint8Array(12)); // Initialization Vector\n  const encryptedData = await crypto.subtle.encrypt(\n    {\n      name: \"AES-GCM\",\n      iv: iv\n    },\n    key,\n    encodedData\n  );\n  return {\n    iv: iv,\n    encryptedData: encryptedData\n  };\n}\n\n// Function to decrypt data using AES-GCM\nexport async function decryptData(key, iv, encryptedData) {\n  const decryptedData = await crypto.subtle.decrypt(\n    {\n      name: \"AES-GCM\",\n      iv: iv\n    },\n    key,\n    encryptedData\n  );\n  return JSON.parse(new TextDecoder().decode(decryptedData));\n}\n\n// Function to hash data using SHA-256\nexport async function hashData(data) {\n    const encodedData = new TextEncoder().encode(data);\n    const hashBuffer = await crypto.subtle.digest('SHA-256', encodedData);\n    return new Uint8Array(hashBuffer);\n}\n\n// Function to convert the hash to a hexadecimal string\nexport function bufferToHex(buffer) {\n    return Array.prototype.map.call(buffer, x => ('00' + x.toString(16)).slice(-2)).join('');\n}\n\n// Function to convert a hexadecimal string back to a Uint8Array (buffer)\nexport function hexToBuffer(hex) {\n    const length = hex.length / 2;\n    const buffer = new Uint8Array(length);\n    for (let i = 0; i < length; i++) {\n        buffer[i] = parseInt(hex.substr(i * 2, 2), 16);\n    }\n    return buffer;\n}\n","import HomePage from \"./pages/HomePage.mjs\"\n\nconst simplePage = content => () => Html => <Html>{content}</Html>\n\nexport default {\n  \"/\": HomePage,\n  \"(.*)\": simplePage(\"404 - Not found\"),\n}\n","import { state, computed } from \"../reactive.mjs\"\n\nexport default HtmlPage => {\n  // const [passkey, setPasskey] = state(\"\")\n  // const maskedPasskey = computed(\n  //   passkey => passkey.join(\"\").replaceAll(/.{1}/gi, \"•\"),\n  //   [passkey]\n  // )\n  // const style = computed(passkey => `--content: \"${passkey.join(\"\") || \"_\"}\"`, [passkey])\n\n  // const handlePasskey = (event) => {\n  //   const { target: { value, selectionStart }, data } = event\n  //   const p = [...passkey()]\n  //   console.log(data, value, selectionStart, event)\n  //   data\n  //     ? p.splice(selectionStart - 1, value.length > p.length ? 0 : p.length - value.length + 1, data)\n  //     : p.splice(selectionStart, p.length - value.length)\n  //   setPasskey(p)\n  //   // event.target.value = value.replaceAll(/.{1}/gi, \"•\")\n  //   event.target.setSelectionRange(selectionStart, selectionStart)\n  // }\n\n  return (\n    <HtmlPage>\n      <div class=\"login-screen\">\n        <label class=\"passkey-label\">Enter your passkey:</label>\n        { false }\n        <>\n          <br />\n          <>\n            <br />\n            <input\n              class=\"passkey-input\"\n              type=\"text\"\n              autocomplete=\"off\"\n              // value={maskedPasskey}\n              // oninput={handlePasskey}\n              // oncut={e => (e.preventDefault()) }\n              // oncopy={e => (e.preventDefault()) }\n              // onpaste={e => (e.preventDefault()) }\n              // onkeypress={(e) => {\n              //   if ((e.metaKey || e.ctrlKey) && e.key === 'z') {\n              //     e.preventDefault()\n              //     return false\n              //   }\n              // }}\n            />\n          </>\n        </>\n        <br />\n        <>\n          <br />\n          <button\n            class=\"passkey-submit-button\"\n            onclick={() => alert(\"Pero\")}\n          >Go Man, Go!\n          </button>\n            <div class=\"passkey-preview\"\n              // style={style}\n            />\n        </>\n      </div>\n    </HtmlPage>\n  )\n}\n","const reactive = new WeakMap\nconst registerReactive = reactive.set.bind(reactive)\nexport const isReactive = reactive.has.bind(reactive)\nexport const getReactive = reactive.get.bind(reactive)\n\nconst apply = fn => fn()\n\nconst observable = () => {\n  const listeners = new Set\n  const notify = value => {\n    for (const listener of listeners) {\n      console.log({ listener, listeners })\n      listener(value)\n    }\n  }\n\n  const subscribe = listener => {\n    listeners.add(listener)\n    return () => {\n      listeners.remove(listeners)\n    }\n  }\n  return { notify, subscribe }\n}\n\nexport const state = value => {\n  const { notify, subscribe } = observable()\n  const getter = () => value\n  const setter = (newVal) => {\n    if (value !== newVal) {\n      value = newVal\n      notify(value)\n    }\n  }\n  registerReactive(getter, subscribe)\n  return [\n    getter,\n    setter\n  ]\n}\n\nconst initDeps = (deps, handler) => deps.map(\n  dep => isReactive(dep)\n    ? (getReactive(dep)(handler), dep)\n    : () => dep\n)\n\nexport const computed = (expr, deps) => {\n  const { notify, subscribe } = observable()\n  let cache, cached = false\n  const invalidate = () => {\n    cached = false\n    notify()\n  }\n  const getter = () => {\n    if (!cached) {\n      cache = expr(...args.map(apply))\n      cached = true\n    }\n    return cache\n  }\n  const args = initDeps(deps, invalidate)\n  registerReactive(getter, subscribe)\n  return getter\n}\n\nlet effectInProgress = false;\n\nconst cleanupEffects = () => {\n  effects.forEach(apply)\n  effects.length = 0\n  effectsScheduled = false\n}\n\nconst wrapEffect = (effect) => () => {\n  const effectCache = effectInProgress\n  effectInProgress = true\n  effect()\n  effectInProgress = effectCache\n}\n\nconst effects = []\nlet effectsScheduled = false\n\nexport const effect = (handler, deps) => {\n  let cleanup, scheduled = false\n\n  const effect = wrapEffect(\n    () => {\n      // cleanup?.() // maybe here\n      cleanup = handler(...args.map(apply))\n      scheduled = false\n    }\n  ) // problem: ...args initialization\n  const args = initDeps(deps, () => {\n    if (!scheduled) {\n      cleanup?.() // or here\n      scheduled = true\n      effects.push(effect)\n      effectsScheduled || queueMicrotask(cleanupEffects)\n    }\n  })\n}\n","import Router from \"url-router\"\n\nconst renderPage = (HtmlPageTemplate, handler) => ([key, Page]) => [key, handler.bind(null, Page(HtmlPageTemplate))]\n\nexport const createRouter = (HtmlPageTemplate, handler, routes) => {\n  const router = new Router(\n    Object.fromEntries(\n      Object.entries(routes).map(\n        renderPage(HtmlPageTemplate, handler)\n      )\n    )\n  )\n\n  return url => {\n    const match = router.find(url)\n    console.log({ match })\n    return match.handler(match.params)\n  }\n}\n","const REGEX_PARAM_DEFAULT = /^[^/]+/;\nconst REGEX_START_WITH_PARAM = /^(:\\w|\\()/;\nconst REGEX_INCLUDE_PARAM = /:\\w|\\(/;\nconst REGEX_MATCH_PARAM = /^(?::(\\w+))?(?:\\(([^)]+)\\))?/;\nclass Router {\n    constructor(routes) {\n        this.root = this.createNode();\n        if (routes) {\n            Object.entries(routes).forEach(route => this.add(...route));\n        }\n    }\n    createNode({ regex, param, handler } = {}) {\n        return {\n            regex,\n            param,\n            handler,\n            children: {\n                string: {},\n                regex: {}\n            }\n        };\n    }\n    add(pattern, handler) {\n        this.parseOptim(pattern, handler, this.root);\n        return this;\n    }\n    parseOptim(remain, handler, node) {\n        if (REGEX_INCLUDE_PARAM.test(remain)) {\n            this.parse(remain, handler, node);\n        }\n        else {\n            const child = node.children.string[remain];\n            if (child) {\n                child.handler = handler;\n            }\n            else {\n                node.children.string[remain] = this.createNode({ handler });\n            }\n        }\n    }\n    parse(remain, handler, parent) {\n        if (REGEX_START_WITH_PARAM.test(remain)) {\n            const match = remain.match(REGEX_MATCH_PARAM);\n            if (match) {\n                let node = parent.children.regex[match[0]];\n                if (!node) {\n                    node = parent.children.regex[match[0]] = this.createNode({\n                        regex: match[2] ? new RegExp('^' + match[2]) : REGEX_PARAM_DEFAULT,\n                        param: match[1]\n                    });\n                }\n                if (match[0].length === remain.length) {\n                    node.handler = handler;\n                }\n                else {\n                    this.parseOptim(remain.slice(match[0].length), handler, node);\n                }\n            }\n        }\n        else {\n            const char = remain[0];\n            let node = parent.children.string[char];\n            if (!node) {\n                node = parent.children.string[char] = this.createNode();\n            }\n            this.parse(remain.slice(1), handler, node);\n        }\n    }\n    find(path) {\n        return this.findOptim(path, this.root, {});\n    }\n    findOptim(remain, node, params) {\n        const child = node.children.string[remain];\n        if (child && child.handler !== undefined) {\n            return {\n                handler: child.handler,\n                params\n            };\n        }\n        return this.findRecursive(remain, node, params);\n    }\n    findRecursive(remain, node, params) {\n        let child = node.children.string[remain[0]];\n        if (child) {\n            const result = this.findRecursive(remain.slice(1), child, params);\n            if (result) {\n                return result;\n            }\n        }\n        for (const k in node.children.regex) {\n            child = node.children.regex[k];\n            if (child.regex) {\n                const match = remain.match(child.regex);\n                if (match) {\n                    if (match[0].length === remain.length && child.handler !== undefined) {\n                        if (child.param) {\n                            params[child.param] = decodeURIComponent(match[0]);\n                        }\n                        return {\n                            handler: child.handler,\n                            params\n                        };\n                    }\n                    else {\n                        const result = this.findOptim(remain.slice(match[0].length), child, params);\n                        if (result) {\n                            if (child.param) {\n                                params[child.param] = decodeURIComponent(match[0]);\n                            }\n                            return result;\n                        }\n                    }\n                }\n            }\n        }\n        return null;\n    }\n}\nexport default Router;\n","export { printHTML } from \"./jsx-print.mjs\"\nexport { mountHTML } from \"./jsx-dom.mjs\"\n\nexport const h = (tag, props, ...children) => ({\n  tag,\n  props: props || {},\n  children\n})\n\nexport const frag = ({ props, children }) => ({\n  tag: null,\n  props,\n  children\n})\n","const escapeAttr = attr => attr && attr.replace(/(?<!\\\\)\"/g, '\\\\\"')\n\nconst escapeTextNode = text => text\n  .replace(/</g, '&lt;')\n  .replace(/>/g, '&gt;');\n\nconst voidElements = new Set([\n  \"area\",\n  \"base\",\n  \"br\",\n  \"col\",\n  \"embed\",\n  \"hr\",\n  \"img\",\n  \"input\",\n  \"link\",\n  \"meta\",\n  \"source\",\n  \"track\",\n  \"wbr\",\n]);\n\nconst printAttr = ([ key, value ]) => {\n  switch (typeof value) {\n    case \"string\":\n      return ` ${key}=\"${escapeAttr(value)}\"`\n    case \"number\":\n      return ` ${key}=\"${value}\"`\n    default:\n      return value === true\n      ? ` ${key}`\n      : \"\"\n  }\n}\n\nconst printAttrs = props => props\n  ? Object.entries(props)\n    .map(printAttr)\n    .join(\"\")\n  : \"\"\n\nconst printJSX = ({ tag, props, children }) => {\n  switch (typeof tag) {\n    case \"string\":\n      return `<${tag}${printAttrs(props)}${(!voidElements.has(tag)) ? `>${children.map(print).join(\"\")}</${tag}>` : ` />`}`\n    case \"function\":\n      return print(tag({ props, children }))\n    case \"object\":\n      if (tag == null) {\n        return print(children)\n      }\n    // default: console.log({ tag, props, children })\n  }\n}\n\nexport const print = vdom => {\n  if (Array.isArray(vdom))\n    return vdom.map(print).join(\"\")\n  switch (vdom) {\n    case true:\n    case false:\n    case null:\n    case undefined:\n      return \"\"\n  }\n  return typeof vdom === \"string\" ? escapeTextNode(vdom) : printJSX(vdom)\n}\n\nexport const printHTML = vdom => `<!DOCTYPE html>${print(vdom)}`\n","import { isReactive, effect } from \"./reactive.mjs\"\n\n// VDOM -> DOM\nexport const mountHTML = documentRoot => vdom => mount(documentRoot.childNodes[1], vdom, 0, documentRoot)\n\nconst registerEvent = (target, key, value) => target[key] = value\n\nconst syncAttr = (target, key) => (value) => {\n  switch (typeof value) {\n    case \"string\":\n    case \"number\":\n      return target.setAttribute(key, value)\n    default:\n      return value === true\n      ? target.setAttribute(key, \"\")\n      : target.removeAttribute(key)\n  }\n}\n\nconst mountAttrs = (target, props) => {\n  // skip syncs for now\n  for (const [key, value] of Object.entries(props)) {\n    switch (typeof value) {\n      case \"function\": {\n        if (isReactive(value)) {\n          effect((value) => {target.setAttribute(key, value)}, [value])\n        } else if (key[0] === \"o\" && key[1] === \"n\") {\n          target[key] = value\n          break\n        }\n      }\n    }\n  }\n}\n\nconst mountJSX = (target, vdom, indexOffset = 0, parent, parentContext) => {\n  const { tag, props, children } = vdom\n  const context = vdom.context = {\n    vdom,\n    parent,\n    target,\n    prev: null,\n    next: null,\n    prevTarget: null,\n    nextTarget: null,\n  }\n  switch (typeof tag) {\n    case \"string\": {\n      Object.keys(props).length && mountAttrs(target, props)\n      if (children.length) {\n        const { childNodes } = target ?? {}\n        return (\n          children.reduce(\n            (indexOffset, child) =>\n              mount(childNodes[indexOffset], child, indexOffset, target, context) + 1,\n            0),\n          indexOffset\n        )\n      }\n      return indexOffset\n    }\n    case \"function\":\n      return mount(target, tag({ props, children }), indexOffset, parent, context)\n    case \"object\":\n      if (tag == null) {\n        return mount(target, children, indexOffset, parent, context)\n      }\n    default: {\n      return indexOffset\n    }\n  }\n}\n\nconst mount = (target, vdom, indexOffset = 0, parent, parentContext) => {\n  if (Array.isArray(vdom)) {\n    const { childNodes } = parent\n    return vdom.reduce(\n      (indexOffset, vdom, i) => mount(childNodes[indexOffset], vdom, indexOffset, parent, parentContext) + 1,\n      indexOffset\n    ) - 1\n  }\n  switch (vdom) {\n    case true:\n    case false:\n    case null:\n    case undefined:\n      return indexOffset - 1\n  }\n\n  switch (typeof vdom) {\n    case \"string\":\n    case \"number\":\n      // TODO: handle multimple text nodes, for example: asdf {someVar} bsd\n      return indexOffset\n      // TODO: add syncJSX => isReactive -> effect(syncJSX)\n    default: return mountJSX(target, vdom, indexOffset, parent, parentContext)\n  }\n  // return typeof vdom === \"string\"\n  //   ? indexOffset\n  //   : mountJSX(target, vdom, indexOffset, parent)\n}\n\n\n\n// Next Big TODOs:\n// ===============\n// Figure out text node one to meny mounting\n// add the context to VDOM trees (double linked lists)\n","const htmlPage = ({\n  children,\n  props: { background = \"#f0f0f0\", title = \"\" },\n}) => (\n  <html lang=\"en\">\n    <head>\n      <meta charset=\"utf-8\" />\n      <meta\n        name=\"viewport\"\n        content=\"width=device-width, height=device-height, initial-scale=1.0, user-scalable=0, minimum-scale=1.0, maximum-scale=1.0\"\n      />\n      <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\n      <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin />\n      <link href=\"https://fonts.googleapis.com/css2?family=Merriweather:ital,wght@0,300;0,400;0,700;0,900;1,300;1,400;1,700;1,900&display=swap\" rel=\"stylesheet\" />\n      <link href=\"https://fonts.googleapis.com/css2?family=Comfortaa:wght@300..700&display=swap\" rel=\"stylesheet\" />\n      <link href=\"https://fonts.googleapis.com/css2?family=Nunito:ital,wght@0,200..1000;1,200..1000&display=swap\" rel=\"stylesheet\" />\n      <link href=\"https://fonts.googleapis.com/css2?family=Raleway:ital,wght@0,100..900;1,100..900&display=swap\" rel=\"stylesheet\" />\n      <link rel=\"stylesheet\" href=\"/css/style.css\" />\n      <title>\n        {title}\n      </title>\n    </head>\n    <body>\n    {children}\n    <script src=\"/client.js\" />\n    </body>\n  </html>\n);\n\nexport default htmlPage;\n"],"names":["content","$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","parcelRegister","USE","arg","req","require","slice","R","mod","path","p","split","toString","replace","module1","String","random","l","c","s","charAt","Math","floor","length","match","t","o","tmp","u","hash","i","charCodeAt","f","sT","sI","check","T","has","Object","prototype","hasOwnProperty","plain","constructor","empty","n","k","indexOf","keys","push","setTimeout","setImmediate","MessageChannel","port1","onmessage","e","data","q","port2","postMessage","performance","now","Date","hold","poll","turn","each","S","L","r","splice","onto","tag","as","to","_","next","be","off","the","last","back","on","v","Infinity","State","N","drift","D","NI","is","ify","soul","opt","dup","max","age","dt","track","it","was","drop","ed","console","STAT","cb","lack","clearTimeout","Gun1","$","create","version","chain","toJSON","valid","state","ask","universe","msg","out","eve","at","gun","DBG","text_rand","put","ack","ctx","root","acks","fire","ok","stop","crack","get","uc","ua","nts","NTS","ue","faith","miss","latch","hatch","CT","all","stun","nl","pk","nj","kl","node","states","ni","pop","pd","ERR","cut","key","val","ham","graph","vertex","state_is","known","MD","Hf","aid","ph","C","map","pa","pm","state_ify","end","CF","once","JSON","stringify","window","log","sort","F","gk","go","ram","ga","FOO","g","peers","Array","forEach","url","obj_each","from","uuid","apply","arguments","join","w","GUN","Gun","MODULE","only","yes","link","cat","$$","tat","echo","pass","sat","lex","unlink","change","linked","ev","sub","in","obj_has","VIA","via","seen","$$$","any","lat","rid","jam","super","wait","odd","test","not","a","run","add","v2020","ran","todo","d","ref","walk","name","reverse","up","resolve","noop","eas","act","subs","nix","one","neat","set","item","parse","parseAsync","json","sucks","stringifyAsync","mesh","gap","memory","pack","puff","dup_check","dup_track","hear","raw","peer","say","dam","SH","P","m","flush","batch","tail","send","wire","queue","h","hp","ash","leap","yo","near","SI","hd","loop","SMIA","sorta","text","$put","meta","y","way","yh","yr","ps","pl","wr","pid","yp","ST","res","hi","met","bye","time","close","gets","souls","SUBS","Mesh","WebSocket","env","websocket","webkitWebSocket","mozWebSocket","open","doc","document","onclose","reconnect","onerror","onopen","defer","retry","tried","hidden","store","localStorage","setItem","removeItem","getItem","lg","disk","size","prefix","file","DEP","warn","Type","fn","bi","b","Boolean","num","list_is","parseFloat","list","slit","A","B","obj_map","index","obj","boj","del","obj_is","copy","x","ll","lle","ii","getTime","fn_is","Val","text_is","bi_is","num_is","rel","rel_","obj_put","Node","soul_","text_random","obj_del","obj_copy","N_","Graph","nf","obj_empty","arr","shell","concat","prev","invalid","$5373e622fde9ea23$var$reactive","WeakMap","bind","$5373e622fde9ea23$export$352205f445242f02","$5373e622fde9ea23$export$f664a1e17c3f0b8","$5373e622fde9ea23$var$apply","$5373e622fde9ea23$var$initDeps","deps","handler","dep","$5373e622fde9ea23$var$effectInProgress","$5373e622fde9ea23$var$cleanupEffects","$5373e622fde9ea23$var$effects","$5373e622fde9ea23$var$effectsScheduled","$5373e622fde9ea23$var$wrapEffect","effect","effectCache","$5373e622fde9ea23$export$dc573d8a6576cdb3","cleanup","scheduled","args","queueMicrotask","$2054ae0330e74516$export$2e2bcd8739ae039","HtmlPage","class","frag","type","autocomplete","onclick","alert","Html","$4b7cb130d6b5df81$var$REGEX_PARAM_DEFAULT","$4b7cb130d6b5df81$var$REGEX_START_WITH_PARAM","$4b7cb130d6b5df81$var$REGEX_INCLUDE_PARAM","$4b7cb130d6b5df81$var$REGEX_MATCH_PARAM","$4b7cb130d6b5df81$export$2e2bcd8739ae039","routes","createNode","entries","route","regex","param","children","string","pattern","parseOptim","remain","child","parent","RegExp","char","find","findOptim","params","undefined","findRecursive","result","decodeURIComponent","$5013ee11ca2270f9$var$renderPage","HtmlPageTemplate","Page","$5013ee11ca2270f9$export$baddd0131ee8c05b","router","fromEntries","$25e983ec92c90903$var$escapeAttr","attr","$25e983ec92c90903$var$escapeTextNode","$25e983ec92c90903$var$voidElements","Set","$25e983ec92c90903$var$printAttr","value","$25e983ec92c90903$var$printAttrs","props","$25e983ec92c90903$var$printJSX","$25e983ec92c90903$export$c2d084dc44961371","vdom","isArray","$5736268d46219ac1$export$6642944bbb0750ae","documentRoot","$5736268d46219ac1$var$mount","childNodes","$5736268d46219ac1$var$mountAttrs","target","setAttribute","$5736268d46219ac1$var$mountJSX","indexOffset","parentContext","context","prevTarget","nextTarget","reduce","$f61e82ad6902d872$export$2e2bcd8739ae039","background","title","lang","charset","href","crossorigin","src","addEventListener","pathname","location","$db325d66e9652a73$var$preventDefault","preventDefault","$db325d66e9652a73$var$passkey","$db325d66e9652a73$var$$","selectors","matches","selector","querySelector","every","input","preview","oncut","oncopy","onpaste","metaKey","ctrlKey","event","selectionStart","replaceAll","setSelectionRange","Crypto","createRouter","mountHTML","passkey","generateKey","crypto","subtle","encryptData","encodedData","TextEncoder","encode","iv","getRandomValues","Uint8Array","encryptedData","encrypt","decryptData","decryptedData","decrypt","TextDecoder","decode","hashData","hashBuffer","digest","bufferToHex","buffer","hexToBuffer","hex","parseInt","substr","HomePage","simplePage","computed","reactive","registerReactive","isReactive","getReactive","observable","listeners","notify","listener","subscribe","remove","getter","setter","newVal","initDeps","expr","cache","cached","invalidate","effectInProgress","cleanupEffects","effects","effectsScheduled","wrapEffect","Router","renderPage","printHTML","escapeAttr","escapeTextNode","voidElements","printAttr","printAttrs","printJSX","print","mount","registerEvent","syncAttr","removeAttribute","mountAttrs","mountJSX","htmlPage"],"version":3,"file":"client.js.map"}